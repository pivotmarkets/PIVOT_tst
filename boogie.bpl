
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

datatype Vec<T> {
    Vec(v: [int]T, l: int)
}

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := v->l;
    Vec(v->v[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v->v[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    v->l
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    v->l == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := v->l - 1;
    Vec(v->v[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := v->l - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v->v[j] else v->v[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := v1->l, v1->v, v2->l, v2->v;
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := v->l;
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v->v[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v->v[i := elem], v->l)
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(m[i := m[j]][j := m[i]], v->l))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := v->l;
    (exists i: int :: InRangeVec(v, i) && v->v[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

datatype Multiset<T> {
    Multiset(v: [T]int, l: int)
}

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    s->l
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := s->l;
    (var cnt := s->v[v];
    Multiset(s->v[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := s1->l;
    (var len2 := s2->l;
    Multiset((lambda v:T :: s1->v[v]-s2->v[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (s->l == 0) &&
    (forall v: T :: s->v[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (s1->l <= s2->l) &&
    (forall v: T :: s1->v[v] <= s2->v[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    s->v[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
datatype Table <K, V> {
    Table(v: [K]V, e: [K]bool, l: int)
}

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    t->v[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    t->l
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    t->e[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(t->v[k := v], t->e, t->l)
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(t->v[k := v], t->e[k := true], t->l + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(t->v, t->e[k := false], t->l - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at


datatype $1_cmp_Ordering {
    $1_cmp_Ordering_Less(),
    $1_cmp_Ordering_Equal(),
    $1_cmp_Ordering_Greater()
}
function $IsValid'$1_cmp_Ordering_Less'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering_Equal'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering_Greater'(s: $1_cmp_Ordering): bool {
    true
}
function $IsValid'$1_cmp_Ordering'(s: $1_cmp_Ordering): bool {
    true
}
function {:inline} $IsEqual'$1_cmp_Ordering'(s1: $1_cmp_Ordering, s2: $1_cmp_Ordering): bool {
    s1 == s2
}

function $Arbitrary_value_of'$1_cmp_Ordering'(): $1_cmp_Ordering;

function {:inline} $1_cmp_$compare'bool'(s1: bool, s2: bool): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 == true then $1_cmp_Ordering_Greater()
    else
        $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bool'(s1: bool, s2: bool) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bool'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'signer'(s1: $signer, s2: $signer): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 is $signer && s2 is $permissioned_signer then $1_cmp_Ordering_Less()
    else if s1 is $permissioned_signer && s2 is $signer then $1_cmp_Ordering_Greater()
    else if s1 is $signer then
        $compare_int(s1 -> $addr, s2 -> $addr)
    else if s1 -> $addr == s2 -> $addr then
        $compare_int(s1 -> $permission_addr, s2 -> $permission_addr)
    else
        $compare_int(s1 -> $addr, s2 -> $addr)
}

procedure {:inline 1} $1_cmp_compare'signer'(s1: $signer, s2: $signer) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'signer'(s1, s2);
    return;
}

function $compare_int(s1: int, s2: int): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if s1 > s2 then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

function {:inline} $1_cmp_$compare'num'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}

procedure {:inline 1} $1_cmp_compare'num'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'int'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}

procedure {:inline 1} $1_cmp_compare'int'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv8'(s1: bv8, s2: bv8): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv8'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv8'(s1: bv8, s2: bv8) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv8'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv16'(s1: bv16, s2: bv16): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv16'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv16'(s1: bv16, s2: bv16) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv16'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv32'(s1: bv32, s2: bv32): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv32'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv32'(s1: bv32, s2: bv32) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv32'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv64'(s1: bv64, s2: bv64): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv64'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv64'(s1: bv64, s2: bv64) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv64'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv128'(s1: bv128, s2: bv128): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv128'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv128'(s1: bv128, s2: bv128) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv128'(s1, s2);
    return;
}

function {:inline} $1_cmp_$compare'bv256'(s1: bv256, s2: bv256): $1_cmp_Ordering {
    if s1 == s2 then $1_cmp_Ordering_Equal()
    else if $Gt'Bv256'(s1,s2) then $1_cmp_Ordering_Greater()
    else $1_cmp_Ordering_Less()
}

procedure {:inline 1} $1_cmp_compare'bv256'(s1: bv256, s2: bv256) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'bv256'(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'address'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'address'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u128'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u128'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u256'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u256'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u64'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u64'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}function {:inline} $1_cmp_$compare'u8'(s1: int, s2: int): $1_cmp_Ordering {
    $compare_int(s1, s2)
}


procedure {:inline 1} $1_cmp_compare'u8'(s1: int, s2: int) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $compare_int(s1, s2);
    return;
}




// ==================================================================================
// Intrinsic implementation of aggregator_v2 for element type `u128`


datatype $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u128''_value(s: $1_aggregator_v2_Aggregator'u128', x: int): $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u128''_max_value(s: $1_aggregator_v2_Aggregator'u128', x: int): $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u128''(s: $1_aggregator_v2_Aggregator'u128'): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u128''(s1: $1_aggregator_v2_Aggregator'u128', s2: $1_aggregator_v2_Aggregator'u128'): bool {
    $IsEqual'u128'(s1->$value, s2->$value)
      && $IsEqual'u128'(s1->$max_value, s2->$max_value)
}

procedure {:inline 1} $1_aggregator_v2_create_unbounded_aggregator'u128'() returns (res: $1_aggregator_v2_Aggregator'u128')
{
    res := $1_aggregator_v2_Aggregator'u128'(0, $MAX_U128);
    }


    procedure {:inline 1} $1_aggregator_v2_create_aggregator'u128'($max_value: int) returns (res: $1_aggregator_v2_Aggregator'u128')
    {
        res := $1_aggregator_v2_Aggregator'u128'(0, $max_value);
        }


    procedure {:inline 1} $1_aggregator_v2_try_add'u128'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u128'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u128'))
    {
        if ($Dereference(aggregator)->$max_value < value + $Dereference(aggregator)->$value) {
            res := false;
            aggregator_updated:= aggregator;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u128'(value + $Dereference(aggregator)->$value, $Dereference(aggregator)->$max_value));
        }
        }

    procedure {:inline 1} $1_aggregator_v2_try_sub'u128'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u128'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u128'))
    {
        if ($Dereference(aggregator)->$value < value) {
            res := false;
            aggregator_updated:= aggregator;
            return;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u128'($Dereference(aggregator)->$value - value, $Dereference(aggregator)->$max_value));
            return;
        }
        }

    procedure {:inline 1} $1_aggregator_v2_add'u128'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u128'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u128'))
    {
       var try_result: bool;
       var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u128';
       call try_result, try_aggregator := $1_aggregator_v2_try_add'u128'(aggregator, value);
       if (!try_result) {
           call $ExecFailureAbort();
           return;
       }
       aggregator_updated := try_aggregator;
       return;
       }

   procedure {:inline 1} $1_aggregator_v2_sub'u128'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u128'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u128'))
   {
       var try_result: bool;
          var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u128';
          call try_result, try_aggregator := $1_aggregator_v2_try_sub'u128'(aggregator, value);
          if (!try_result) {
              call $ExecFailureAbort();
              return;
          }
          aggregator_updated := try_aggregator;
         return;
       }

   procedure {:inline 1} $1_aggregator_v2_read'u128'(aggregator: $1_aggregator_v2_Aggregator'u128') returns (res: int) {
       res := aggregator->$value;
       }

   procedure {:inline 1} $1_aggregator_v2_max_value'u128'(aggregator: $1_aggregator_v2_Aggregator'u128') returns (res: int) {
       res := aggregator->$max_value;
       }

   procedure {:inline 1} $1_aggregator_v2_is_at_least_impl'u128'(aggregator: $1_aggregator_v2_Aggregator'u128', min_amount: int) returns (res: bool)
   {
       res := aggregator->$value >= min_amount;
          return;
       }

function {:inline} $1_aggregator_v2_spec_get_value'u128'(s: $1_aggregator_v2_Aggregator'u128'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_spec_get_max_value'u128'(s: $1_aggregator_v2_Aggregator'u128'): int {
    s->$max_value
}

function {:inline} $1_aggregator_v2_$read'u128'(s: $1_aggregator_v2_Aggregator'u128'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_$is_at_least_impl'u128'(aggregator: $1_aggregator_v2_Aggregator'u128', min_amount: int): bool
   {
       aggregator->$value >= min_amount
   }
function {:inline} $1_cmp_$compare'$1_aggregator_v2_Aggregator'u128''(s1: $1_aggregator_v2_Aggregator'u128', s2: $1_aggregator_v2_Aggregator'u128'): $1_cmp_Ordering {
    $Arbitrary_value_of'$1_cmp_Ordering'()
}

procedure {:inline 1} $1_cmp_compare'$1_aggregator_v2_Aggregator'u128''(s1: $1_aggregator_v2_Aggregator'u128', s2: $1_aggregator_v2_Aggregator'u128') returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'$1_aggregator_v2_Aggregator'u128''(s1, s2);
    return;
}// ==================================================================================
// Intrinsic implementation of aggregator_v2 for element type `u64`


datatype $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_max_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u64''(s: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsValid'u64'(s->$value)
      && $IsValid'u64'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsEqual'u64'(s1->$value, s2->$value)
      && $IsEqual'u64'(s1->$max_value, s2->$max_value)
}

procedure {:inline 1} $1_aggregator_v2_create_unbounded_aggregator'u64'() returns (res: $1_aggregator_v2_Aggregator'u64')
{
    res := $1_aggregator_v2_Aggregator'u64'(0, $MAX_U64);
    }


    procedure {:inline 1} $1_aggregator_v2_create_aggregator'u64'($max_value: int) returns (res: $1_aggregator_v2_Aggregator'u64')
    {
        res := $1_aggregator_v2_Aggregator'u64'(0, $max_value);
        }


    procedure {:inline 1} $1_aggregator_v2_try_add'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
        if ($Dereference(aggregator)->$max_value < value + $Dereference(aggregator)->$value) {
            res := false;
            aggregator_updated:= aggregator;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u64'(value + $Dereference(aggregator)->$value, $Dereference(aggregator)->$max_value));
        }
        }

    procedure {:inline 1} $1_aggregator_v2_try_sub'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (res: bool, aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
        if ($Dereference(aggregator)->$value < value) {
            res := false;
            aggregator_updated:= aggregator;
            return;
        } else {
            res := true;
            aggregator_updated:= $UpdateMutation(aggregator, $1_aggregator_v2_Aggregator'u64'($Dereference(aggregator)->$value - value, $Dereference(aggregator)->$max_value));
            return;
        }
        }

    procedure {:inline 1} $1_aggregator_v2_add'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
    {
       var try_result: bool;
       var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u64';
       call try_result, try_aggregator := $1_aggregator_v2_try_add'u64'(aggregator, value);
       if (!try_result) {
           call $ExecFailureAbort();
           return;
       }
       aggregator_updated := try_aggregator;
       return;
       }

   procedure {:inline 1} $1_aggregator_v2_sub'u64'(aggregator: $Mutation ($1_aggregator_v2_Aggregator'u64'), value: int) returns (aggregator_updated: $Mutation ($1_aggregator_v2_Aggregator'u64'))
   {
       var try_result: bool;
          var try_aggregator: $Mutation $1_aggregator_v2_Aggregator'u64';
          call try_result, try_aggregator := $1_aggregator_v2_try_sub'u64'(aggregator, value);
          if (!try_result) {
              call $ExecFailureAbort();
              return;
          }
          aggregator_updated := try_aggregator;
         return;
       }

   procedure {:inline 1} $1_aggregator_v2_read'u64'(aggregator: $1_aggregator_v2_Aggregator'u64') returns (res: int) {
       res := aggregator->$value;
       }

   procedure {:inline 1} $1_aggregator_v2_max_value'u64'(aggregator: $1_aggregator_v2_Aggregator'u64') returns (res: int) {
       res := aggregator->$max_value;
       }

   procedure {:inline 1} $1_aggregator_v2_is_at_least_impl'u64'(aggregator: $1_aggregator_v2_Aggregator'u64', min_amount: int) returns (res: bool)
   {
       res := aggregator->$value >= min_amount;
          return;
       }

function {:inline} $1_aggregator_v2_spec_get_value'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_spec_get_max_value'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$max_value
}

function {:inline} $1_aggregator_v2_$read'u64'(s: $1_aggregator_v2_Aggregator'u64'): int {
    s->$value
}

function {:inline} $1_aggregator_v2_$is_at_least_impl'u64'(aggregator: $1_aggregator_v2_Aggregator'u64', min_amount: int): bool
   {
       aggregator->$value >= min_amount
   }
function {:inline} $1_cmp_$compare'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): $1_cmp_Ordering {
    $Arbitrary_value_of'$1_cmp_Ordering'()
}

procedure {:inline 1} $1_cmp_compare'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64') returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'$1_aggregator_v2_Aggregator'u64''(s1, s2);
    return;
}

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

datatype $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int)
}
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, s->$key, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, x, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, x, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, s->$limit, x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'(s->$handle)
      && $IsValid'address'(s->$key)
      && $IsValid'u128'(s->$limit)
      && $IsValid'u128'(s->$val)
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
function {:inline} $1_aggregator_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
procedure {:inline 1} $1_aggregator_limit(s: $1_aggregator_Aggregator) returns (res: int) {
    res := s->$limit;
    return;
}
function {:inline} $1_aggregator_spec_get_handle(s: $1_aggregator_Aggregator): int {
    s->$handle
}
function {:inline} $1_aggregator_spec_get_key(s: $1_aggregator_Aggregator): int {
    s->$key
}
function {:inline} $1_aggregator_spec_get_val(s: $1_aggregator_Aggregator): int {
    s->$val
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


function {:inline} $1_cmp_$compare'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): $1_cmp_Ordering {
    $Arbitrary_value_of'$1_cmp_Ordering'()
}

procedure {:inline 1} $1_cmp_compare'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator) returns ($ret0: $1_cmp_Ordering)  {
    $ret0 := $1_cmp_$compare'$1_aggregator_Aggregator'(s1, s2);
    return;
}


// ==================================================================================
// Native for function_info

procedure $1_function_info_is_identifier(s: Vec int) returns (res: bool);



// Uninterpreted function for all types


function $Arbitrary_value_of'#0'(): #0;



function $Arbitrary_value_of'$1_account_Account'(): $1_account_Account;



function $Arbitrary_value_of'$1_account_CapabilityOffer'$1_account_RotationCapability''(): $1_account_CapabilityOffer'$1_account_RotationCapability';



function $Arbitrary_value_of'$1_account_CapabilityOffer'$1_account_SignerCapability''(): $1_account_CapabilityOffer'$1_account_SignerCapability';



function $Arbitrary_value_of'$1_account_CoinRegister'(): $1_account_CoinRegister;



function $Arbitrary_value_of'$1_account_CoinRegisterEvent'(): $1_account_CoinRegisterEvent;



function $Arbitrary_value_of'$1_aggregator_Aggregator'(): $1_aggregator_Aggregator;



function $Arbitrary_value_of'$1_aggregator_v2_Aggregator'u128''(): $1_aggregator_v2_Aggregator'u128';



function $Arbitrary_value_of'$1_aggregator_v2_Aggregator'u64''(): $1_aggregator_v2_Aggregator'u64';



function $Arbitrary_value_of'$1_chain_status_GenesisEndMarker'(): $1_chain_status_GenesisEndMarker;



function $Arbitrary_value_of'$1_coin_Coin'#0''(): $1_coin_Coin'#0';



function $Arbitrary_value_of'$1_coin_CoinConversionMap'(): $1_coin_CoinConversionMap;



function $Arbitrary_value_of'$1_coin_CoinInfo'#0''(): $1_coin_CoinInfo'#0';



function $Arbitrary_value_of'$1_coin_CoinStore'#0''(): $1_coin_CoinStore'#0';



function $Arbitrary_value_of'$1_coin_DepositEvent'(): $1_coin_DepositEvent;



function $Arbitrary_value_of'$1_coin_Ghost$aggregate_supply'#0''(): $1_coin_Ghost$aggregate_supply'#0';



function $Arbitrary_value_of'$1_coin_Ghost$supply'#0''(): $1_coin_Ghost$supply'#0';



function $Arbitrary_value_of'$1_coin_PairCreation'(): $1_coin_PairCreation;



function $Arbitrary_value_of'$1_coin_PairedCoinType'(): $1_coin_PairedCoinType;



function $Arbitrary_value_of'$1_coin_PairedFungibleAssetRefs'(): $1_coin_PairedFungibleAssetRefs;



function $Arbitrary_value_of'$1_coin_WithdrawEvent'(): $1_coin_WithdrawEvent;



function $Arbitrary_value_of'$1_dispatchable_fungible_asset_TransferRefStore'(): $1_dispatchable_fungible_asset_TransferRefStore;



function $Arbitrary_value_of'$1_event_EventHandle'$1_account_CoinRegisterEvent''(): $1_event_EventHandle'$1_account_CoinRegisterEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_account_KeyRotationEvent''(): $1_event_EventHandle'$1_account_KeyRotationEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_coin_DepositEvent''(): $1_event_EventHandle'$1_coin_DepositEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_coin_WithdrawEvent''(): $1_event_EventHandle'$1_coin_WithdrawEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_object_TransferEvent''(): $1_event_EventHandle'$1_object_TransferEvent';



function $Arbitrary_value_of'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';



function $Arbitrary_value_of'$1_features_Features'(): $1_features_Features;



function $Arbitrary_value_of'$1_function_info_FunctionInfo'(): $1_function_info_FunctionInfo;



function $Arbitrary_value_of'$1_fungible_asset_BurnRef'(): $1_fungible_asset_BurnRef;



function $Arbitrary_value_of'$1_fungible_asset_ConcurrentFungibleBalance'(): $1_fungible_asset_ConcurrentFungibleBalance;



function $Arbitrary_value_of'$1_fungible_asset_ConcurrentSupply'(): $1_fungible_asset_ConcurrentSupply;



function $Arbitrary_value_of'$1_fungible_asset_Deposit'(): $1_fungible_asset_Deposit;



function $Arbitrary_value_of'$1_fungible_asset_DispatchFunctionStore'(): $1_fungible_asset_DispatchFunctionStore;



function $Arbitrary_value_of'$1_fungible_asset_FungibleAsset'(): $1_fungible_asset_FungibleAsset;



function $Arbitrary_value_of'$1_fungible_asset_FungibleStore'(): $1_fungible_asset_FungibleStore;



function $Arbitrary_value_of'$1_fungible_asset_Metadata'(): $1_fungible_asset_Metadata;



function $Arbitrary_value_of'$1_fungible_asset_MintRef'(): $1_fungible_asset_MintRef;



function $Arbitrary_value_of'$1_fungible_asset_Supply'(): $1_fungible_asset_Supply;



function $Arbitrary_value_of'$1_fungible_asset_TransferRef'(): $1_fungible_asset_TransferRef;



function $Arbitrary_value_of'$1_fungible_asset_Untransferable'(): $1_fungible_asset_Untransferable;



function $Arbitrary_value_of'$1_fungible_asset_Withdraw'(): $1_fungible_asset_Withdraw;



function $Arbitrary_value_of'$1_fungible_asset_WithdrawPermission'(): $1_fungible_asset_WithdrawPermission;



function $Arbitrary_value_of'$1_guid_GUID'(): $1_guid_GUID;



function $Arbitrary_value_of'$1_guid_ID'(): $1_guid_ID;



function $Arbitrary_value_of'$1_object_ConstructorRef'(): $1_object_ConstructorRef;



function $Arbitrary_value_of'$1_object_DeriveRef'(): $1_object_DeriveRef;



function $Arbitrary_value_of'$1_object_Object'$1_fungible_asset_FungibleStore''(): $1_object_Object'$1_fungible_asset_FungibleStore';



function $Arbitrary_value_of'$1_object_Object'$1_fungible_asset_Metadata''(): $1_object_Object'$1_fungible_asset_Metadata';



function $Arbitrary_value_of'$1_object_ObjectCore'(): $1_object_ObjectCore;



function $Arbitrary_value_of'$1_object_TombStone'(): $1_object_TombStone;



function $Arbitrary_value_of'$1_object_Transfer'(): $1_object_Transfer;



function $Arbitrary_value_of'$1_object_TransferEvent'(): $1_object_TransferEvent;



function $Arbitrary_value_of'$1_object_TransferPermission'(): $1_object_TransferPermission;



function $Arbitrary_value_of'$1_object_TransferRef'(): $1_object_TransferRef;



function $Arbitrary_value_of'$1_object_Untransferable'(): $1_object_Untransferable;



function $Arbitrary_value_of'$1_option_Option'$1_aggregator_Aggregator''(): $1_option_Option'$1_aggregator_Aggregator';



function $Arbitrary_value_of'$1_option_Option'$1_function_info_FunctionInfo''(): $1_option_Option'$1_function_info_FunctionInfo';



function $Arbitrary_value_of'$1_option_Option'$1_fungible_asset_BurnRef''(): $1_option_Option'$1_fungible_asset_BurnRef';



function $Arbitrary_value_of'$1_option_Option'$1_fungible_asset_MintRef''(): $1_option_Option'$1_fungible_asset_MintRef';



function $Arbitrary_value_of'$1_option_Option'$1_fungible_asset_TransferRef''(): $1_option_Option'$1_fungible_asset_TransferRef';



function $Arbitrary_value_of'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';



function $Arbitrary_value_of'$1_option_Option'$1_optional_aggregator_Integer''(): $1_option_Option'$1_optional_aggregator_Integer';



function $Arbitrary_value_of'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(): $1_option_Option'$1_optional_aggregator_OptionalAggregator';



function $Arbitrary_value_of'$1_option_Option'address''(): $1_option_Option'address';



function $Arbitrary_value_of'$1_option_Option'u128''(): $1_option_Option'u128';



function $Arbitrary_value_of'$1_option_Option'u8''(): $1_option_Option'u8';



function $Arbitrary_value_of'$1_optional_aggregator_Integer'(): $1_optional_aggregator_Integer;



function $Arbitrary_value_of'$1_optional_aggregator_OptionalAggregator'(): $1_optional_aggregator_OptionalAggregator;



function $Arbitrary_value_of'$1_permissioned_signer_GrantedPermissionHandles'(): $1_permissioned_signer_GrantedPermissionHandles;



function $Arbitrary_value_of'$1_permissioned_signer_PermissionStorage'(): $1_permissioned_signer_PermissionStorage;



function $Arbitrary_value_of'$1_primary_fungible_store_DeriveRefPod'(): $1_primary_fungible_store_DeriveRefPod;



function $Arbitrary_value_of'$1_reconfiguration_Configuration'(): $1_reconfiguration_Configuration;



function $Arbitrary_value_of'$1_string_String'(): $1_string_String;



function $Arbitrary_value_of'$1_timestamp_CurrentTimeMicroseconds'(): $1_timestamp_CurrentTimeMicroseconds;



function $Arbitrary_value_of'$1_type_info_TypeInfo'(): $1_type_info_TypeInfo;



function $Arbitrary_value_of'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';



function $Arbitrary_value_of'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';



function $Arbitrary_value_of'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;



function $Arbitrary_value_of'signer'(): $signer;



function $Arbitrary_value_of'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(): Table int ($1_object_Object'$1_fungible_asset_Metadata');



function $Arbitrary_value_of'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(): Table int ($1_permissioned_signer_StoredPermission);



function $Arbitrary_value_of'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(): Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');



function $Arbitrary_value_of'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(): Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);



function $Arbitrary_value_of'$1_table_Table'address_vec'u64'''(): Table int (Vec (int));



function $Arbitrary_value_of'$1_table_Table'address_u64''(): Table int (int);



function $Arbitrary_value_of'vec'#0''(): Vec (#0);



function $Arbitrary_value_of'vec'$1_aggregator_Aggregator''(): Vec ($1_aggregator_Aggregator);



function $Arbitrary_value_of'vec'$1_function_info_FunctionInfo''(): Vec ($1_function_info_FunctionInfo);



function $Arbitrary_value_of'vec'$1_fungible_asset_BurnRef''(): Vec ($1_fungible_asset_BurnRef);



function $Arbitrary_value_of'vec'$1_fungible_asset_FungibleStore''(): Vec ($1_fungible_asset_FungibleStore);



function $Arbitrary_value_of'vec'$1_fungible_asset_MintRef''(): Vec ($1_fungible_asset_MintRef);



function $Arbitrary_value_of'vec'$1_fungible_asset_TransferRef''(): Vec ($1_fungible_asset_TransferRef);



function $Arbitrary_value_of'vec'$1_object_Object'$1_fungible_asset_Metadata'''(): Vec ($1_object_Object'$1_fungible_asset_Metadata');



function $Arbitrary_value_of'vec'$1_optional_aggregator_Integer''(): Vec ($1_optional_aggregator_Integer);



function $Arbitrary_value_of'vec'$1_optional_aggregator_OptionalAggregator''(): Vec ($1_optional_aggregator_OptionalAggregator);



function $Arbitrary_value_of'vec'address''(): Vec (int);



function $Arbitrary_value_of'vec'u128''(): Vec (int);



function $Arbitrary_value_of'vec'u64''(): Vec (int);



function $Arbitrary_value_of'vec'u8''(): Vec (int);



function $Arbitrary_value_of'bool'(): bool;



function $Arbitrary_value_of'address'(): int;



function $Arbitrary_value_of'u128'(): int;



function $Arbitrary_value_of'u256'(): int;



function $Arbitrary_value_of'u64'(): int;



function $Arbitrary_value_of'u8'(): int;



function $Arbitrary_value_of'$1_table_Table'address_vec'bv64'''(): Table int (Vec (bv64));



function $Arbitrary_value_of'$1_table_Table'address_bv64''(): Table int (bv64);



function $Arbitrary_value_of'vec'bv128''(): Vec (bv128);



function $Arbitrary_value_of'vec'bv64''(): Vec (bv64);



function $Arbitrary_value_of'vec'bv8''(): Vec (bv8);



function $Arbitrary_value_of'bv128'(): bv128;



function $Arbitrary_value_of'bv256'(): bv256;



function $Arbitrary_value_of'bv64'(): bv64;



function $Arbitrary_value_of'bv8'(): bv8;




// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

datatype $Range {
    $Range(lb: int, ub: int)
}

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(r->lb) &&  $IsValid'u64'(r->ub)
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   r->lb <= i && i < r->ub
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

datatype $Location {
    // A global resource location within the statically known resource type's memory,
    // where `a` is an address.
    $Global(a: int),
    // A local location. `i` is the unique index of the local.
    $Local(i: int),
    // The location of a reference outside of the verification scope, for example, a `&mut` parameter
    // of the function being verified. References with these locations don't need to be written back
    // when mutation ends.
    $Param(i: int),
    // The location of an uninitialized mutation. Using this to make sure that the location
    // will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
    $Uninitialized()
}

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
datatype $Mutation<T> {
    $Mutation(l: $Location, p: Vec int, v: T)
}

// Representation of memory for a given type.
datatype $Memory<T> {
    $Memory(domain: [int]bool, contents: [int]T)
}

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    ref->v
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(m->l, m->p, v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(m->l, ExtendVec(m->p, offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    parent->l == child->l && parent->p == child->p
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    m1->l == m2->l
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    (m->l) is $Global
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    m->l == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    (m->l)->a
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    m->domain[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    m->contents[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(m->domain[a := true], m->contents[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := false], m->contents)
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := s->domain[a]],
            m->contents[a := s->contents[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $castBv8to8(src: bv8) returns (bv8)
{
    src
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}



function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}



function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $castBv64to8(src: bv64) returns (bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) then
        $Arbitrary_value_of'bv8'()
    else
    src[8:0]
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $castBv128to8(src: bv128) returns (bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) then
        $Arbitrary_value_of'bv8'()
    else
    src[8:0]
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $castBv256to8(src: bv256) returns (bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) then
        $Arbitrary_value_of'bv8'()
    else
    src[8:0]
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}



function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}



function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}



function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}



function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}



function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}



function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}



function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $castBv8to64(src: bv8) returns (bv64)
{
    0bv56 ++ src
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}



function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}



function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $castBv64to64(src: bv64) returns (bv64)
{
    src
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $castBv128to64(src: bv128) returns (bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) then
        $Arbitrary_value_of'bv64'()
    else
    src[64:0]
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $castBv256to64(src: bv256) returns (bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) then
        $Arbitrary_value_of'bv64'()
    else
    src[64:0]
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $castBv8to128(src: bv8) returns (bv128)
{
    0bv120 ++ src
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}



function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}



function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $castBv64to128(src: bv64) returns (bv128)
{
    0bv64 ++ src
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $castBv128to128(src: bv128) returns (bv128)
{
    src
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $castBv256to128(src: bv256) returns (bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) then
        $Arbitrary_value_of'bv128'()
    else
    src[128:0]
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $castBv8to256(src: bv8) returns (bv256)
{
    0bv248 ++ src
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    assume $bv2int.8(src2) >= 0 && $bv2int.8(src2) < 256;
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    assume $bv2int.8(src2) >= 0 && $bv2int.8(src2) < 256;
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}



function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}



function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $castBv64to256(src: bv64) returns (bv256)
{
    0bv192 ++ src
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $castBv128to256(src: bv128) returns (bv256)
{
    0bv128 ++ src
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $castBv256to256(src: bv256) returns (bv256)
{
    src
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }

    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, r->lb, r->ub)
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_Aggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_Aggregator''(v1: Vec ($1_aggregator_Aggregator), v2: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), prefix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), suffix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_Aggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): int;
axiom (forall v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator:: {$IndexOfVec'$1_aggregator_Aggregator'(v, e)}
    (var i := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
     if (!$ContainsVec'$1_aggregator_Aggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_Aggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_Aggregator'() returns (v: Vec ($1_aggregator_Aggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), val: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), val: $1_aggregator_Aggregator): Vec ($1_aggregator_Aggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var mid_left_vec: Vec ($1_aggregator_Aggregator);
    var mid_right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, e: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int) returns (dst: $1_aggregator_Aggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), index: int)
returns (dst: $Mutation ($1_aggregator_Aggregator), m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int, j: int): Vec ($1_aggregator_Aggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var len: int;
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_Aggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_function_info_FunctionInfo`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_function_info_FunctionInfo''(v1: Vec ($1_function_info_FunctionInfo), v2: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo), prefix: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo), suffix: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_function_info_FunctionInfo'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo): int;
axiom (forall v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo:: {$IndexOfVec'$1_function_info_FunctionInfo'(v, e)}
    (var i := $IndexOfVec'$1_function_info_FunctionInfo'(v, e);
     if (!$ContainsVec'$1_function_info_FunctionInfo'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_function_info_FunctionInfo'(): Vec ($1_function_info_FunctionInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_function_info_FunctionInfo'() returns (v: Vec ($1_function_info_FunctionInfo)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_function_info_FunctionInfo'(): Vec ($1_function_info_FunctionInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), val: $1_function_info_FunctionInfo) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), val: $1_function_info_FunctionInfo): Vec ($1_function_info_FunctionInfo) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo))) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var v: Vec ($1_function_info_FunctionInfo);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), other: Vec ($1_function_info_FunctionInfo)) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo))) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), other: Vec ($1_function_info_FunctionInfo)) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), new_len: int) returns (v: (Vec ($1_function_info_FunctionInfo)), m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), new_len: int) returns (v: (Vec ($1_function_info_FunctionInfo)), m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), left: int, right: int) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), rot: int) returns (n: int, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var v: Vec ($1_function_info_FunctionInfo);
    var len: int;
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var mid_left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int, e: $1_function_info_FunctionInfo) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int) returns (dst: $1_function_info_FunctionInfo) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int): $1_function_info_FunctionInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), index: int)
returns (dst: $Mutation ($1_function_info_FunctionInfo), m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int): $1_function_info_FunctionInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int, j: int) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int, j: int): Vec ($1_function_info_FunctionInfo) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var len: int;
    var v: Vec ($1_function_info_FunctionInfo);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo) returns (res: bool)  {
    res := $ContainsVec'$1_function_info_FunctionInfo'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_function_info_FunctionInfo'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_BurnRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_BurnRef''(v1: Vec ($1_fungible_asset_BurnRef), v2: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef), prefix: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef), suffix: Vec ($1_fungible_asset_BurnRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_BurnRef''(v: Vec ($1_fungible_asset_BurnRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_BurnRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef): int;
axiom (forall v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef:: {$IndexOfVec'$1_fungible_asset_BurnRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_BurnRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_BurnRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_BurnRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_BurnRef'(): Vec ($1_fungible_asset_BurnRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_BurnRef'() returns (v: Vec ($1_fungible_asset_BurnRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_BurnRef'(): Vec ($1_fungible_asset_BurnRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), val: $1_fungible_asset_BurnRef) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), val: $1_fungible_asset_BurnRef): Vec ($1_fungible_asset_BurnRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef))) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var v: Vec ($1_fungible_asset_BurnRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), other: Vec ($1_fungible_asset_BurnRef)) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef))) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), other: Vec ($1_fungible_asset_BurnRef)) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_BurnRef)), m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_BurnRef)), m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var v: Vec ($1_fungible_asset_BurnRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_left_vec: Vec ($1_fungible_asset_BurnRef);
    var mid_right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int, e: $1_fungible_asset_BurnRef) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef))) {
    var left_vec: Vec ($1_fungible_asset_BurnRef);
    var right_vec: Vec ($1_fungible_asset_BurnRef);
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int) returns (dst: $1_fungible_asset_BurnRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int): $1_fungible_asset_BurnRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_BurnRef), m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int): $1_fungible_asset_BurnRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), i: int, j: int): Vec ($1_fungible_asset_BurnRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var v: Vec ($1_fungible_asset_BurnRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_BurnRef'(m: $Mutation (Vec ($1_fungible_asset_BurnRef)), i: int) returns (e: $1_fungible_asset_BurnRef, m': $Mutation (Vec ($1_fungible_asset_BurnRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_BurnRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_BurnRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_BurnRef'(v: Vec ($1_fungible_asset_BurnRef), e: $1_fungible_asset_BurnRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_BurnRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_FungibleStore`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_FungibleStore''(v1: Vec ($1_fungible_asset_FungibleStore), v2: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore), prefix: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore), suffix: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_FungibleStore'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore): int;
axiom (forall v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore:: {$IndexOfVec'$1_fungible_asset_FungibleStore'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_FungibleStore'(v, e);
     if (!$ContainsVec'$1_fungible_asset_FungibleStore'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_FungibleStore'(): Vec ($1_fungible_asset_FungibleStore) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_FungibleStore'() returns (v: Vec ($1_fungible_asset_FungibleStore)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_FungibleStore'(): Vec ($1_fungible_asset_FungibleStore) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), val: $1_fungible_asset_FungibleStore) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), val: $1_fungible_asset_FungibleStore): Vec ($1_fungible_asset_FungibleStore) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore))) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var v: Vec ($1_fungible_asset_FungibleStore);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), other: Vec ($1_fungible_asset_FungibleStore)) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore))) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), other: Vec ($1_fungible_asset_FungibleStore)) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), new_len: int) returns (v: (Vec ($1_fungible_asset_FungibleStore)), m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), new_len: int) returns (v: (Vec ($1_fungible_asset_FungibleStore)), m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var v: Vec ($1_fungible_asset_FungibleStore);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int, e: $1_fungible_asset_FungibleStore) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int) returns (dst: $1_fungible_asset_FungibleStore) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int): $1_fungible_asset_FungibleStore {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), index: int)
returns (dst: $Mutation ($1_fungible_asset_FungibleStore), m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int): $1_fungible_asset_FungibleStore {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int, j: int): Vec ($1_fungible_asset_FungibleStore) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_FungibleStore);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_FungibleStore'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_FungibleStore'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_MintRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_MintRef''(v1: Vec ($1_fungible_asset_MintRef), v2: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef), prefix: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef), suffix: Vec ($1_fungible_asset_MintRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_MintRef''(v: Vec ($1_fungible_asset_MintRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_MintRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef): int;
axiom (forall v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef:: {$IndexOfVec'$1_fungible_asset_MintRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_MintRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_MintRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_MintRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_MintRef'(): Vec ($1_fungible_asset_MintRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_MintRef'() returns (v: Vec ($1_fungible_asset_MintRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_MintRef'(): Vec ($1_fungible_asset_MintRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), val: $1_fungible_asset_MintRef) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), val: $1_fungible_asset_MintRef): Vec ($1_fungible_asset_MintRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef))) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var v: Vec ($1_fungible_asset_MintRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), other: Vec ($1_fungible_asset_MintRef)) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef))) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), other: Vec ($1_fungible_asset_MintRef)) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_MintRef)), m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_MintRef)), m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var v: Vec ($1_fungible_asset_MintRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var mid_left_vec: Vec ($1_fungible_asset_MintRef);
    var mid_right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int, e: $1_fungible_asset_MintRef) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef))) {
    var left_vec: Vec ($1_fungible_asset_MintRef);
    var right_vec: Vec ($1_fungible_asset_MintRef);
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int) returns (dst: $1_fungible_asset_MintRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int): $1_fungible_asset_MintRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_MintRef), m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int): $1_fungible_asset_MintRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), i: int, j: int): Vec ($1_fungible_asset_MintRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var v: Vec ($1_fungible_asset_MintRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_MintRef'(m: $Mutation (Vec ($1_fungible_asset_MintRef)), i: int) returns (e: $1_fungible_asset_MintRef, m': $Mutation (Vec ($1_fungible_asset_MintRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_MintRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_MintRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_MintRef'(v: Vec ($1_fungible_asset_MintRef), e: $1_fungible_asset_MintRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_MintRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_TransferRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_TransferRef''(v1: Vec ($1_fungible_asset_TransferRef), v2: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef), prefix: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef), suffix: Vec ($1_fungible_asset_TransferRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_TransferRef''(v: Vec ($1_fungible_asset_TransferRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_TransferRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef): int;
axiom (forall v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef:: {$IndexOfVec'$1_fungible_asset_TransferRef'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_TransferRef'(v, e);
     if (!$ContainsVec'$1_fungible_asset_TransferRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_TransferRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_TransferRef'(): Vec ($1_fungible_asset_TransferRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_TransferRef'() returns (v: Vec ($1_fungible_asset_TransferRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_TransferRef'(): Vec ($1_fungible_asset_TransferRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), val: $1_fungible_asset_TransferRef) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), val: $1_fungible_asset_TransferRef): Vec ($1_fungible_asset_TransferRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef))) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var v: Vec ($1_fungible_asset_TransferRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), other: Vec ($1_fungible_asset_TransferRef)) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef))) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), other: Vec ($1_fungible_asset_TransferRef)) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_TransferRef)), m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), new_len: int) returns (v: (Vec ($1_fungible_asset_TransferRef)), m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var v: Vec ($1_fungible_asset_TransferRef);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_left_vec: Vec ($1_fungible_asset_TransferRef);
    var mid_right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int, e: $1_fungible_asset_TransferRef) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef))) {
    var left_vec: Vec ($1_fungible_asset_TransferRef);
    var right_vec: Vec ($1_fungible_asset_TransferRef);
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int) returns (dst: $1_fungible_asset_TransferRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int): $1_fungible_asset_TransferRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), index: int)
returns (dst: $Mutation ($1_fungible_asset_TransferRef), m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int): $1_fungible_asset_TransferRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), i: int, j: int): Vec ($1_fungible_asset_TransferRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var v: Vec ($1_fungible_asset_TransferRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_TransferRef'(m: $Mutation (Vec ($1_fungible_asset_TransferRef)), i: int) returns (e: $1_fungible_asset_TransferRef, m': $Mutation (Vec ($1_fungible_asset_TransferRef)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_TransferRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_TransferRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_TransferRef'(v: Vec ($1_fungible_asset_TransferRef), e: $1_fungible_asset_TransferRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_TransferRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_object_Object'$1_fungible_asset_Metadata'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v1: Vec ($1_object_Object'$1_fungible_asset_Metadata'), v2: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), prefix: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), suffix: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), e))
}

function $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata'): int;
axiom (forall v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata':: {$IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e)}
    (var i := $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
     if (!$ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_object_Object'$1_fungible_asset_Metadata''(): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_object_Object'$1_fungible_asset_Metadata''() returns (v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_object_Object'$1_fungible_asset_Metadata''(): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), val: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), val: $1_object_Object'$1_fungible_asset_Metadata'): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), other: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), other: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), new_len: int) returns (v: (Vec ($1_object_Object'$1_fungible_asset_Metadata')), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), new_len: int) returns (v: (Vec ($1_object_Object'$1_fungible_asset_Metadata')), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), left: int, right: int) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), rot: int) returns (n: int, m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var len: int;
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var mid_right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int, e: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var left_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var right_vec: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int) returns (dst: $1_object_Object'$1_fungible_asset_Metadata') {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), index: int)
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata')) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int, j: int) returns (m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), i: int, j: int): Vec ($1_object_Object'$1_fungible_asset_Metadata') {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')), i: int) returns (e: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation (Vec ($1_object_Object'$1_fungible_asset_Metadata')))
{
    var len: int;
    var v: Vec ($1_object_Object'$1_fungible_asset_Metadata');

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata') returns (res: bool)  {
    res := $ContainsVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_object_Object'$1_fungible_asset_Metadata''(v: Vec ($1_object_Object'$1_fungible_asset_Metadata'), e: $1_object_Object'$1_fungible_asset_Metadata') returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_object_Object'$1_fungible_asset_Metadata''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_Integer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_Integer''(v1: Vec ($1_optional_aggregator_Integer), v2: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), prefix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), suffix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_Integer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): int;
axiom (forall v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer:: {$IndexOfVec'$1_optional_aggregator_Integer'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_Integer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_Integer'() returns (v: Vec ($1_optional_aggregator_Integer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), val: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), val: $1_optional_aggregator_Integer): Vec ($1_optional_aggregator_Integer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var mid_left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, e: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int) returns (dst: $1_optional_aggregator_Integer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_Integer), m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int, j: int): Vec ($1_optional_aggregator_Integer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_Integer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_OptionalAggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(v1: Vec ($1_optional_aggregator_OptionalAggregator), v2: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), prefix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), suffix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): int;
axiom (forall v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator:: {$IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_OptionalAggregator'() returns (v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), val: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), val: $1_optional_aggregator_OptionalAggregator): Vec ($1_optional_aggregator_OptionalAggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, e: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int) returns (dst: $1_optional_aggregator_OptionalAggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_OptionalAggregator), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int, j: int): Vec ($1_optional_aggregator_OptionalAggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u128`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u128''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u128'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u128''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u128'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u128''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u128'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u128''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u128'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u128'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u128'(ReadVec(v, i), e))
}

function $IndexOfVec'u128'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u128'(v, e)}
    (var i := $IndexOfVec'u128'(v, e);
     if (!$ContainsVec'u128'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u128'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u128'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u128'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u128'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u128'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u128'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u128'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u128'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u128'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u128'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u128'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u128'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u128'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u128'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u128'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u128'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u128'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u128'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u128'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u128'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u128'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u128'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u128'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u128'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u128'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u128'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u128'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u128'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u128'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u128'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u128'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u128'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u128'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u128'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u64'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u64'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u64'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u64'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv128`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv128''(v1: Vec (bv128), v2: Vec (bv128)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv128'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv128''(v: Vec (bv128), prefix: Vec (bv128)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv128'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv128''(v: Vec (bv128), suffix: Vec (bv128)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv128'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv128''(v: Vec (bv128)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv128'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv128'(v: Vec (bv128), e: bv128): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv128'(ReadVec(v, i), e))
}

function $IndexOfVec'bv128'(v: Vec (bv128), e: bv128): int;
axiom (forall v: Vec (bv128), e: bv128:: {$IndexOfVec'bv128'(v, e)}
    (var i := $IndexOfVec'bv128'(v, e);
     if (!$ContainsVec'bv128'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv128'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv128'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv128'(v: Vec (bv128)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv128'(): Vec (bv128) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv128'() returns (v: Vec (bv128)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv128'(): Vec (bv128) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv128'(v: Vec (bv128)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv128'(m: $Mutation (Vec (bv128)), val: bv128) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv128'(v: Vec (bv128), val: bv128): Vec (bv128) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv128'(m: $Mutation (Vec (bv128))) returns (e: bv128, m': $Mutation (Vec (bv128))) {
    var v: Vec (bv128);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv128'(m: $Mutation (Vec (bv128)), other: Vec (bv128)) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv128'(m: $Mutation (Vec (bv128))) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv128'(m: $Mutation (Vec (bv128)), other: Vec (bv128)) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv128'(m: $Mutation (Vec (bv128)), new_len: int) returns (v: (Vec (bv128)), m': $Mutation (Vec (bv128))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv128'(m: $Mutation (Vec (bv128)), new_len: int) returns (v: (Vec (bv128)), m': $Mutation (Vec (bv128))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv128'(m: $Mutation (Vec (bv128)), left: int, right: int) returns (m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var mid_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var v: Vec (bv128);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv128'(m: $Mutation (Vec (bv128)), rot: int) returns (n: int, m': $Mutation (Vec (bv128))) {
    var v: Vec (bv128);
    var len: int;
    var left_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv128'(m: $Mutation (Vec (bv128)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var mid_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var mid_left_vec: Vec (bv128);
    var mid_right_vec: Vec (bv128);
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv128'(m: $Mutation (Vec (bv128)), i: int, e: bv128) returns (m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv128'(v: Vec (bv128)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv128'(v: Vec (bv128)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv128'(v: Vec (bv128), i: int) returns (dst: bv128) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv128'(v: Vec (bv128), i: int): bv128 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv128'(m: $Mutation (Vec (bv128)), index: int)
returns (dst: $Mutation (bv128), m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv128'(v: Vec (bv128), i: int): bv128 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv128'(v: Vec (bv128)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv128'(m: $Mutation (Vec (bv128)), i: int, j: int) returns (m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv128'(v: Vec (bv128), i: int, j: int): Vec (bv128) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv128'(m: $Mutation (Vec (bv128)), i: int) returns (e: bv128, m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv128'(m: $Mutation (Vec (bv128)), i: int) returns (e: bv128, m': $Mutation (Vec (bv128)))
{
    var len: int;
    var v: Vec (bv128);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv128'(v: Vec (bv128), e: bv128) returns (res: bool)  {
    res := $ContainsVec'bv128'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv128'(v: Vec (bv128), e: bv128) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv128'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, right: int) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv64'(m: $Mutation (Vec (bv64)), rot: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var mid_left_vec: Vec (bv64);
    var mid_right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv64'(m: $Mutation (Vec (bv64)), i: int, e: bv64) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `u64`

function $EncodeKey'u64'(k: int): int;
axiom (
  forall k1, k2: int :: {$EncodeKey'u64'(k1), $EncodeKey'u64'(k2)}
    $IsEqual'u64'(k1, k2) <==> $EncodeKey'u64'(k1) == $EncodeKey'u64'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table key encoding for type `address`

function $EncodeKey'address'(k: int): int;
axiom (
  forall k1, k2: int :: {$EncodeKey'address'(k1), $EncodeKey'address'(k2)}
    $IsEqual'address'(k1, k2) <==> $EncodeKey'address'(k1) == $EncodeKey'address'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_type_info_TypeInfo`

function $EncodeKey'$1_type_info_TypeInfo'(k: $1_type_info_TypeInfo): int;
axiom (
  forall k1, k2: $1_type_info_TypeInfo :: {$EncodeKey'$1_type_info_TypeInfo'(k1), $EncodeKey'$1_type_info_TypeInfo'(k2)}
    $IsEqual'$1_type_info_TypeInfo'(k1, k2) <==> $EncodeKey'$1_type_info_TypeInfo'(k1) == $EncodeKey'$1_type_info_TypeInfo'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_copyable_any_Any`

function $EncodeKey'$1_copyable_any_Any'(k: $1_copyable_any_Any): int;
axiom (
  forall k1, k2: $1_copyable_any_Any :: {$EncodeKey'$1_copyable_any_Any'(k1), $EncodeKey'$1_copyable_any_Any'(k2)}
    $IsEqual'$1_copyable_any_Any'(k1, k2) <==> $EncodeKey'$1_copyable_any_Any'(k1) == $EncodeKey'$1_copyable_any_Any'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `(u64,$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)`

function $IsEqual'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(t1: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), t2: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'() returns (v: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy_known_empty_unsafe'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(t: (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'u64'(k));
}
procedure {:inline 2} $1_table_add'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)), k: int, v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position) returns (m': $Mutation(Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)), k: int, v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position) returns (m': $Mutation(Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)), k: int)
returns (v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position, m': $Mutation(Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), k: int) returns (v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position) {
    var enc_k: int;
    enc_k := $EncodeKey'u64'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'u64'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)), k: int)
returns (dst: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), m': $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)), k: int, default: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)
returns (dst: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), m': $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var t': Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_with_default'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), k: int, default: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position) returns (v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position) {
    var enc_k: int;
    enc_k := $EncodeKey'u64'(k);
    if (!ContainsTable(t, enc_k)) {
        v := default;
    } else {
        v := GetTable(t, $EncodeKey'u64'(k));
    }
}
function {:inline} $1_table_spec_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(t: (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)), k: int): bool {
    ContainsTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_spec_set'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), k: int, v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position): Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position) {
    (var enc_k := $EncodeKey'u64'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), k: int): Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position) {
    RemoveTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), k: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position {
    GetTable(t, $EncodeKey'u64'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(u64,$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')`

function $IsEqual'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(t1: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), t2: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''() returns (v: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy_known_empty_unsafe'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(t: (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'u64'(k));
}
procedure {:inline 2} $1_table_add'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')), k: int, v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0') returns (m': $Mutation(Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')), k: int, v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0') returns (m': $Mutation(Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')), k: int)
returns (v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', m': $Mutation(Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), k: int) returns (v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0') {
    var enc_k: int;
    enc_k := $EncodeKey'u64'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'u64'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')), k: int)
returns (dst: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), m': $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(m: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')), k: int, default: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')
returns (dst: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), m': $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'))) {
    var enc_k: int;
    var t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var t': Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_with_default'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), k: int, default: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0') returns (v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0') {
    var enc_k: int;
    enc_k := $EncodeKey'u64'(k);
    if (!ContainsTable(t, enc_k)) {
        v := default;
    } else {
        v := GetTable(t, $EncodeKey'u64'(k));
    }
}
function {:inline} $1_table_spec_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(t: (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')), k: int): bool {
    ContainsTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_spec_set'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), k: int, v: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'): Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0') {
    (var enc_k := $EncodeKey'u64'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), k: int): Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0') {
    RemoveTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(t: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), k: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    GetTable(t, $EncodeKey'u64'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,u64)`

function $IsEqual'$1_table_Table'address_u64''(t1: Table int (int), t2: Table int (int)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'address_u64''(t: Table int (int)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'u64'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'address_u64'() returns (v: Table int (int)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy_known_empty_unsafe'address_u64'(t: Table int (int)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'address_u64'(t: (Table int (int)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_table_add'address_u64'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'address_u64'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'address_u64'(m: $Mutation (Table int (int)), k: int)
returns (v: int, m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'address_u64'(t: Table int (int), k: int) returns (v: int) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'address_u64'(m: $Mutation (Table int (int)), k: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'address_u64'(m: $Mutation (Table int (int)), k: int, default: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    var t': Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_with_default'address_u64'(t: Table int (int), k: int, default: int) returns (v: int) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        v := default;
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
function {:inline} $1_table_spec_contains'address_u64'(t: (Table int (int)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_set'address_u64'(t: Table int (int), k: int, v: int): Table int (int) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'address_u64'(t: Table int (int), k: int): Table int (int) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_get'address_u64'(t: Table int (int), k: int): int {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,vec'u64')`

function $IsEqual'$1_table_Table'address_vec'u64'''(t1: Table int (Vec (int)), t2: Table int (Vec (int))): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'address_vec'u64'''(t: Table int (Vec (int))): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'vec'u64''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'address_vec'u64''() returns (v: Table int (Vec (int))) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy_known_empty_unsafe'address_vec'u64''(t: Table int (Vec (int))) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'address_vec'u64''(t: (Table int (Vec (int))), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_table_add'address_vec'u64''(m: $Mutation (Table int (Vec (int))), k: int, v: Vec (int)) returns (m': $Mutation(Table int (Vec (int)))) {
    var enc_k: int;
    var t: Table int (Vec (int));
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'address_vec'u64''(m: $Mutation (Table int (Vec (int))), k: int, v: Vec (int)) returns (m': $Mutation(Table int (Vec (int)))) {
    var enc_k: int;
    var t: Table int (Vec (int));
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'address_vec'u64''(m: $Mutation (Table int (Vec (int))), k: int)
returns (v: Vec (int), m': $Mutation(Table int (Vec (int)))) {
    var enc_k: int;
    var t: Table int (Vec (int));
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'address_vec'u64''(t: Table int (Vec (int)), k: int) returns (v: Vec (int)) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'address_vec'u64''(m: $Mutation (Table int (Vec (int))), k: int)
returns (dst: $Mutation (Vec (int)), m': $Mutation (Table int (Vec (int)))) {
    var enc_k: int;
    var t: Table int (Vec (int));
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'address_vec'u64''(m: $Mutation (Table int (Vec (int))), k: int, default: Vec (int))
returns (dst: $Mutation (Vec (int)), m': $Mutation (Table int (Vec (int)))) {
    var enc_k: int;
    var t: Table int (Vec (int));
    var t': Table int (Vec (int));
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_with_default'address_vec'u64''(t: Table int (Vec (int)), k: int, default: Vec (int)) returns (v: Vec (int)) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        v := default;
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
function {:inline} $1_table_spec_contains'address_vec'u64''(t: (Table int (Vec (int))), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_set'address_vec'u64''(t: Table int (Vec (int)), k: int, v: Vec (int)): Table int (Vec (int)) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'address_vec'u64''(t: Table int (Vec (int)), k: int): Table int (Vec (int)) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_get'address_vec'u64''(t: Table int (Vec (int)), k: int): Vec (int) {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_type_info_TypeInfo,$1_object_Object'$1_fungible_asset_Metadata')`

function $IsEqual'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(t1: Table int ($1_object_Object'$1_fungible_asset_Metadata'), t2: Table int ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''() returns (v: Table int ($1_object_Object'$1_fungible_asset_Metadata')) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy_known_empty_unsafe'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata')) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
}
procedure {:inline 2} $1_table_add'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata') returns (m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo)
returns (v: $1_object_Object'$1_fungible_asset_Metadata', m': $Mutation(Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo) returns (v: $1_object_Object'$1_fungible_asset_Metadata') {
    var enc_k: int;
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo)
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(m: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo, default: $1_object_Object'$1_fungible_asset_Metadata')
returns (dst: $Mutation ($1_object_Object'$1_fungible_asset_Metadata'), m': $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'))) {
    var enc_k: int;
    var t: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var t': Table int ($1_object_Object'$1_fungible_asset_Metadata');
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_with_default'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo, default: $1_object_Object'$1_fungible_asset_Metadata') returns (v: $1_object_Object'$1_fungible_asset_Metadata') {
    var enc_k: int;
    enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (!ContainsTable(t, enc_k)) {
        v := default;
    } else {
        v := GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k));
    }
}
function {:inline} $1_table_spec_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: (Table int ($1_object_Object'$1_fungible_asset_Metadata')), k: $1_type_info_TypeInfo): bool {
    ContainsTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}
function {:inline} $1_table_spec_set'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo, v: $1_object_Object'$1_fungible_asset_Metadata'): Table int ($1_object_Object'$1_fungible_asset_Metadata') {
    (var enc_k := $EncodeKey'$1_type_info_TypeInfo'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo): Table int ($1_object_Object'$1_fungible_asset_Metadata') {
    RemoveTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}
function {:inline} $1_table_spec_get'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''(t: Table int ($1_object_Object'$1_fungible_asset_Metadata'), k: $1_type_info_TypeInfo): $1_object_Object'$1_fungible_asset_Metadata' {
    GetTable(t, $EncodeKey'$1_type_info_TypeInfo'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_copyable_any_Any,$1_permissioned_signer_StoredPermission)`

function $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(t1: Table int ($1_permissioned_signer_StoredPermission), t2: Table int ($1_permissioned_signer_StoredPermission)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(t: Table int ($1_permissioned_signer_StoredPermission)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_permissioned_signer_StoredPermission'(GetTable(t, i)))
}
procedure {:inline 2} $1_big_ordered_map_new'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'() returns (v: Table int ($1_permissioned_signer_StoredPermission)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_big_ordered_map_destroy_empty'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_big_ordered_map_is_empty'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission))) returns (r: bool) {
    r := LenTable(t) == 0;
}
procedure {:inline 2} $1_big_ordered_map_contains'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_copyable_any_Any'(k));
}
procedure {:inline 2} $1_big_ordered_map_add'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(m: $Mutation (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any, v: $1_permissioned_signer_StoredPermission) returns (m': $Mutation(Table int ($1_permissioned_signer_StoredPermission))) {
    var enc_k: int;
    var t: Table int ($1_permissioned_signer_StoredPermission);
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_big_ordered_map_borrow'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any) returns (v: $1_permissioned_signer_StoredPermission) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_copyable_any_Any'(k));
    }
}
procedure {:inline 2} $1_big_ordered_map_borrow_mut'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(m: $Mutation (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any)
returns (dst: $Mutation ($1_permissioned_signer_StoredPermission), m': $Mutation (Table int ($1_permissioned_signer_StoredPermission))) {
    var enc_k: int;
    var t: Table int ($1_permissioned_signer_StoredPermission);
    enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_big_ordered_map_spec_len'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission))): int {
    LenTable(t)
}
function {:inline} $1_big_ordered_map_spec_contains_key'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: (Table int ($1_permissioned_signer_StoredPermission)), k: $1_copyable_any_Any): bool {
    ContainsTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}
function {:inline} $1_big_ordered_map_spec_set'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any, v: $1_permissioned_signer_StoredPermission): Table int ($1_permissioned_signer_StoredPermission) {
    (var enc_k := $EncodeKey'$1_copyable_any_Any'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_big_ordered_map_spec_remove'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any): Table int ($1_permissioned_signer_StoredPermission) {
    RemoveTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}
function {:inline} $1_big_ordered_map_spec_get'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission'(t: Table int ($1_permissioned_signer_StoredPermission), k: $1_copyable_any_Any): $1_permissioned_signer_StoredPermission {
    GetTable(t, $EncodeKey'$1_copyable_any_Any'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

datatype $signer {
    $signer($addr: int),
    $permissioned_signer($addr: int, $permission_addr: int)
}

function {:inline} $IsValid'signer'(s: $signer): bool {
    if s is $signer then
        $IsValid'address'(s->$addr)
    else
        $IsValid'address'(s->$addr) &&
        $IsValid'address'(s->$permission_addr)
}

function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    if s1 is $signer && s2 is $signer then
        s1 == s2
    else if s1 is $permissioned_signer && s2 is $permissioned_signer then
        s1 == s2
    else
        false
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := signer->$addr;
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    signer->$addr
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));




// ==================================================================================
// Native from_bcs::from_bytes


// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

datatype $TypeParamInfo {
    $TypeParamBool(),
    $TypeParamU8(),
    $TypeParamU16(),
    $TypeParamU32(),
    $TypeParamU64(),
    $TypeParamU128(),
    $TypeParamU256(),
    $TypeParamAddress(),
    $TypeParamSigner(),
    $TypeParamVector(e: $TypeParamInfo),
    $TypeParamStruct(a: int, m: Vec int, s: Vec int)
}



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamBool ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> t is $TypeParamBool);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU8 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> t is $TypeParamU8);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU16 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> t is $TypeParamU16);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU32 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> t is $TypeParamU32);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU64 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> t is $TypeParamU64);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU128 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> t is $TypeParamU128);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU256 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> t is $TypeParamU256);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamAddress ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> t is $TypeParamAddress);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamSigner ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> t is $TypeParamSigner);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamVector ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(t->e)), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> t is $TypeParamVector);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamStruct ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(t->a)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->m), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->s)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> t is $TypeParamVector);


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;
function {:inline} $1_cmp_$compare'#0'(v1: #0, v2: #0): $1_cmp_Ordering {
    if $IsEqual'#0'(v1, v2) then $1_cmp_Ordering_Equal()
    else $Arbitrary_value_of'$1_cmp_Ordering'()
}
procedure {:inline 1} $1_cmp_compare'#0'(v1: #0, v2: #0) returns ($ret0: $1_cmp_Ordering) {
    $ret0 := $1_cmp_$compare'#0'(v1, v2);
}

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u128'(b1), $1_from_bcs_deserializable'u128'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u64''(b1), $1_from_bcs_deserializable'vec'u64''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u128''(b1), $1_from_bcs_deserializable'vec'u128''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<0x1::fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u8''(b1), $1_from_bcs_deserializable'$1_option_Option'u8''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u128''(b1), $1_from_bcs_deserializable'$1_option_Option'u128''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::option::Option<0x1::fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_features_Features'(b1), $1_from_bcs_deserializable'$1_features_Features'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(b1), $1_from_bcs_deserializable'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(b1), $1_from_bcs_deserializable'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::table::Table<address, u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'address_u64''(b1), $1_from_bcs_deserializable'$1_table_Table'address_u64''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::table::Table<address, vector<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'address_vec'u64'''(b1), $1_from_bcs_deserializable'$1_table_Table'address_vec'u64'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::table::Table<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::big_ordered_map::BigOrderedMap<0x1::copyable_any::Any, 0x1::permissioned_signer::StoredPermission>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b1), $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::permissioned_signer::GrantedPermissionHandles>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(b1), $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::permissioned_signer::PermissionStorage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(b1), $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::event::EventHandle<0x1::reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::CapabilityOffer<0x1::account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::CapabilityOffer<0x1::account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::CoinRegister>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CoinRegister'(b1), $1_from_bcs_deserializable'$1_account_CoinRegister'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ConstructorRef'(b1), $1_from_bcs_deserializable'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::DeriveRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_DeriveRef'(b1), $1_from_bcs_deserializable'$1_object_DeriveRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::Object<0x1::fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::Object<0x1::fungible_asset::Metadata>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ObjectCore'(b1), $1_from_bcs_deserializable'$1_object_ObjectCore'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TombStone'(b1), $1_from_bcs_deserializable'$1_object_TombStone'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Transfer'(b1), $1_from_bcs_deserializable'$1_object_Transfer'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferEvent'(b1), $1_from_bcs_deserializable'$1_object_TransferEvent'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::TransferPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferPermission'(b1), $1_from_bcs_deserializable'$1_object_TransferPermission'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferRef'(b1), $1_from_bcs_deserializable'$1_object_TransferRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Untransferable'(b1), $1_from_bcs_deserializable'$1_object_Untransferable'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::function_info::FunctionInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_function_info_FunctionInfo'(b1), $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserializable'$1_aggregator_Aggregator'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::aggregator_v2::Aggregator<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::BurnRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::ConcurrentFungibleBalance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(b1), $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(b1), $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::Deposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Deposit'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::DispatchFunctionStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(b1), $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::FungibleAsset>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(b1), $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::FungibleStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(b1), $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::Metadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Metadata'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::MintRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_MintRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::Supply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Supply'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Supply'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::Withdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::fungible_asset::WithdrawPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_WithdrawPermission'(b1), $1_from_bcs_deserializable'$1_fungible_asset_WithdrawPermission'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::dispatchable_fungible_asset::TransferRefStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(b1), $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::primary_fungible_store::DeriveRefPod>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(b1), $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_DepositEvent'(b1), $1_from_bcs_deserializable'$1_coin_DepositEvent'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::Coin<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Coin'#0''(b1), $1_from_bcs_deserializable'$1_coin_Coin'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::CoinConversionMap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinConversionMap'(b1), $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::CoinInfo<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinInfo'#0''(b1), $1_from_bcs_deserializable'$1_coin_CoinInfo'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::CoinStore<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinStore'#0''(b1), $1_from_bcs_deserializable'$1_coin_CoinStore'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::PairCreation>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairCreation'(b1), $1_from_bcs_deserializable'$1_coin_PairCreation'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::PairedCoinType>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairedCoinType'(b1), $1_from_bcs_deserializable'$1_coin_PairedCoinType'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::PairedFungibleAssetRefs>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(b1), $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::Ghost$supply<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$supply'#0''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$supply'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::coin::Ghost$aggregate_supply<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'#0''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x1::reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(b1), $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(b1), $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(b1), $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u128''($1_from_bcs_deserialize'vec'u128''(b1), $1_from_bcs_deserialize'vec'u128''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_function_info_FunctionInfo''($1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_TransferRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_BurnRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_FungibleStore''($1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<0x1::fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_MintRef''($1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u8''($1_from_bcs_deserialize'$1_option_Option'u8''(b1), $1_from_bcs_deserialize'$1_option_Option'u8''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u128''($1_from_bcs_deserialize'$1_option_Option'u128''(b1), $1_from_bcs_deserialize'$1_option_Option'u128''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::fungible_asset::TransferRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::fungible_asset::BurnRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::option::Option<0x1::fungible_asset::MintRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''($1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_features_Features'($1_from_bcs_deserialize'$1_features_Features'(b1), $1_from_bcs_deserialize'$1_features_Features'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''($1_from_bcs_deserialize'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(b1), $1_from_bcs_deserialize'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''($1_from_bcs_deserialize'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(b1), $1_from_bcs_deserialize'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::table::Table<address, u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'address_u64''($1_from_bcs_deserialize'$1_table_Table'address_u64''(b1), $1_from_bcs_deserialize'$1_table_Table'address_u64''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::table::Table<address, vector<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'address_vec'u64'''($1_from_bcs_deserialize'$1_table_Table'address_vec'u64'''(b1), $1_from_bcs_deserialize'$1_table_Table'address_vec'u64'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::table::Table<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''($1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b1), $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::big_ordered_map::BigOrderedMap<0x1::copyable_any::Any, 0x1::permissioned_signer::StoredPermission>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''($1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b1), $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::permissioned_signer::GrantedPermissionHandles>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_permissioned_signer_GrantedPermissionHandles'($1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(b1), $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::permissioned_signer::PermissionStorage>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_permissioned_signer_PermissionStorage'($1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(b1), $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::event::EventHandle<0x1::reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::CapabilityOffer<0x1::account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::CapabilityOffer<0x1::account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::CoinRegister>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CoinRegister'($1_from_bcs_deserialize'$1_account_CoinRegister'(b1), $1_from_bcs_deserialize'$1_account_CoinRegister'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CoinRegisterEvent'($1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::DeriveRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_DeriveRef'($1_from_bcs_deserialize'$1_object_DeriveRef'(b1), $1_from_bcs_deserialize'$1_object_DeriveRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::Object<0x1::fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_fungible_asset_FungibleStore''($1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::Object<0x1::fungible_asset::Metadata>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TombStone'($1_from_bcs_deserialize'$1_object_TombStone'(b1), $1_from_bcs_deserialize'$1_object_TombStone'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Transfer'($1_from_bcs_deserialize'$1_object_Transfer'(b1), $1_from_bcs_deserialize'$1_object_Transfer'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::TransferPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferPermission'($1_from_bcs_deserialize'$1_object_TransferPermission'(b1), $1_from_bcs_deserialize'$1_object_TransferPermission'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Untransferable'($1_from_bcs_deserialize'$1_object_Untransferable'(b1), $1_from_bcs_deserialize'$1_object_Untransferable'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::function_info::FunctionInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_function_info_FunctionInfo'($1_from_bcs_deserialize'$1_function_info_FunctionInfo'(b1), $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u64''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::aggregator_v2::Aggregator<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u128''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_TransferRef'($1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Untransferable'($1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::BurnRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_BurnRef'($1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::ConcurrentFungibleBalance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_ConcurrentFungibleBalance'($1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(b1), $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_ConcurrentSupply'($1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(b1), $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::Deposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Deposit'($1_from_bcs_deserialize'$1_fungible_asset_Deposit'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::DispatchFunctionStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_DispatchFunctionStore'($1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(b1), $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::FungibleAsset>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_FungibleAsset'($1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(b1), $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::FungibleStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_FungibleStore'($1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(b1), $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::Metadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Metadata'($1_from_bcs_deserialize'$1_fungible_asset_Metadata'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::MintRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_MintRef'($1_from_bcs_deserialize'$1_fungible_asset_MintRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::Supply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Supply'($1_from_bcs_deserialize'$1_fungible_asset_Supply'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Supply'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::Withdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Withdraw'($1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::fungible_asset::WithdrawPermission>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_WithdrawPermission'($1_from_bcs_deserialize'$1_fungible_asset_WithdrawPermission'(b1), $1_from_bcs_deserialize'$1_fungible_asset_WithdrawPermission'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::dispatchable_fungible_asset::TransferRefStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_dispatchable_fungible_asset_TransferRefStore'($1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(b1), $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::primary_fungible_store::DeriveRefPod>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_primary_fungible_store_DeriveRefPod'($1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(b1), $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::Coin<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Coin'#0''($1_from_bcs_deserialize'$1_coin_Coin'#0''(b1), $1_from_bcs_deserialize'$1_coin_Coin'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::CoinConversionMap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinConversionMap'($1_from_bcs_deserialize'$1_coin_CoinConversionMap'(b1), $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::CoinInfo<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinInfo'#0''($1_from_bcs_deserialize'$1_coin_CoinInfo'#0''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::CoinStore<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinStore'#0''($1_from_bcs_deserialize'$1_coin_CoinStore'#0''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::PairCreation>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairCreation'($1_from_bcs_deserialize'$1_coin_PairCreation'(b1), $1_from_bcs_deserialize'$1_coin_PairCreation'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::PairedCoinType>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairedCoinType'($1_from_bcs_deserialize'$1_coin_PairedCoinType'(b1), $1_from_bcs_deserialize'$1_coin_PairedCoinType'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::PairedFungibleAssetRefs>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_PairedFungibleAssetRefs'($1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(b1), $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::Ghost$supply<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$supply'#0''($1_from_bcs_deserialize'$1_coin_Ghost$supply'#0''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$supply'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::coin::Ghost$aggregate_supply<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$aggregate_supply'#0''($1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'#0''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x1::reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(b1), $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(b1), $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(b1), $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:5:9+288
axiom (forall a: $1_permissioned_signer_GrantedPermissionHandles :: $IsValid'$1_permissioned_signer_GrantedPermissionHandles'(a) ==> ((var $range_0 := $Range(0, LenVec(a->$active_handles)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
((var $range_2 := $Range(0, LenVec(a->$active_handles)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var j := $i_3;
((!$IsEqual'num'(i, j) ==> !$IsEqual'address'(ReadVec(a->$active_handles, i), ReadVec(a->$active_handles, j)))))))))))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:8:9+113
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:13:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:18:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:23:9+131
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:28:9+135
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'u8'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u8'(self), 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'u128'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u128'(self), 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self: Vec ($1_object_Object'$1_fungible_asset_Metadata')): bool {
    $IsEqual'u64'($1_vector_$length'$1_object_Object'$1_fungible_asset_Metadata''(self), 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$1_function_info_FunctionInfo'(self: Vec ($1_function_info_FunctionInfo)): bool {
    $IsEqual'u64'($1_vector_$length'$1_function_info_FunctionInfo'(self), 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$1_aggregator_Aggregator'(self: Vec ($1_aggregator_Aggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_Aggregator'(self), 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_Integer'(self: Vec ($1_optional_aggregator_Integer)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_Integer'(self), 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:199:5+93
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_OptionalAggregator'(self: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_OptionalAggregator'(self), 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+81
function {:inline} $1_option_spec_none'u8'(): $1_option_Option'u8' {
    $1_option_Option'u8'($EmptyVec'u8'())
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+81
function {:inline} $1_option_spec_none'u128'(): $1_option_Option'u128' {
    $1_option_Option'u128'($EmptyVec'u128'())
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+81
function {:inline} $1_option_spec_none'$1_object_Object'$1_fungible_asset_Metadata''(): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''($EmptyVec'$1_object_Object'$1_fungible_asset_Metadata''())
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+81
function {:inline} $1_option_spec_none'$1_function_info_FunctionInfo'(): $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'($EmptyVec'$1_function_info_FunctionInfo'())
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'u8'(e: int): $1_option_Option'u8' {
    $1_option_Option'u8'(MakeVec1(e))
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_object_Object'$1_fungible_asset_Metadata''(e: $1_object_Object'$1_fungible_asset_Metadata'): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''(MakeVec1(e))
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_fungible_asset_TransferRef'(e: $1_fungible_asset_TransferRef): $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'(MakeVec1(e))
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_fungible_asset_BurnRef'(e: $1_fungible_asset_BurnRef): $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'(MakeVec1(e))
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'$1_fungible_asset_MintRef'(e: $1_fungible_asset_MintRef): $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'(MakeVec1(e))
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'u8'(self: $1_option_Option'u8'): bool {
    $1_vector_$is_empty'u8'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'u128'(self: $1_option_Option'u128'): bool {
    $1_vector_$is_empty'u128'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+90
function {:inline} $1_option_spec_is_none'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $1_vector_$is_empty'$1_function_info_FunctionInfo'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'u128'(self: $1_option_Option'u128'): bool {
    !$1_vector_$is_empty'u128'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    !$1_vector_$is_empty'$1_object_Object'$1_fungible_asset_Metadata''(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    !$1_vector_$is_empty'$1_function_info_FunctionInfo'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+91
function {:inline} $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'(self: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_OptionalAggregator'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'u8'(self: $1_option_Option'u8'): int {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'u128'(self: $1_option_Option'u128'): int {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''(self: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): $1_object_Object'$1_fungible_asset_Metadata' {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): $1_function_info_FunctionInfo {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_optional_aggregator_OptionalAggregator'(self: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_optional_aggregator_OptionalAggregator {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+139
function {:inline} $1_option_$borrow'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): $1_aggregator_Aggregator {
    $1_vector_$borrow'$1_aggregator_Aggregator'(self->$vec, 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+139
function {:inline} $1_option_$borrow'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_Integer {
    $1_vector_$borrow'$1_optional_aggregator_Integer'(self->$vec, 0)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+93
function {:inline} $1_option_$is_none'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+93
function {:inline} $1_option_$is_none'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+94
function {:inline} $1_option_$is_some'$1_aggregator_Aggregator'(self: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'(self->$vec)
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+94
function {:inline} $1_option_$is_some'$1_optional_aggregator_Integer'(self: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'(self->$vec)
}

// struct option::Option<u8> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'u8' {
    $1_option_Option'u8'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u8''_vec(s: $1_option_Option'u8', x: Vec (int)): $1_option_Option'u8' {
    $1_option_Option'u8'(x)
}
function $IsValid'$1_option_Option'u8''(s: $1_option_Option'u8'): bool {
    $IsValid'vec'u8''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u8''(s1: $1_option_Option'u8', s2: $1_option_Option'u8'): bool {
    $IsEqual'vec'u8''(s1->$vec, s2->$vec)}

// struct option::Option<u128> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'u128' {
    $1_option_Option'u128'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u128''_vec(s: $1_option_Option'u128', x: Vec (int)): $1_option_Option'u128' {
    $1_option_Option'u128'(x)
}
function $IsValid'$1_option_Option'u128''(s: $1_option_Option'u128'): bool {
    $IsValid'vec'u128''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u128''(s1: $1_option_Option'u128', s2: $1_option_Option'u128'): bool {
    $IsEqual'vec'u128''(s1->$vec, s2->$vec)}

// struct option::Option<address> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'address' {
    $1_option_Option'address'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''($vec: Vec ($1_object_Object'$1_fungible_asset_Metadata'))
}
function {:inline} $Update'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''_vec(s: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'', x: Vec ($1_object_Object'$1_fungible_asset_Metadata')): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'' {
    $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''(x)
}
function $IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(s: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(s1: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'', s2: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''): bool {
    $IsEqual'vec'$1_object_Object'$1_fungible_asset_Metadata'''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::function_info::FunctionInfo> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'($vec: Vec ($1_function_info_FunctionInfo))
}
function {:inline} $Update'$1_option_Option'$1_function_info_FunctionInfo''_vec(s: $1_option_Option'$1_function_info_FunctionInfo', x: Vec ($1_function_info_FunctionInfo)): $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'(x)
}
function $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $IsValid'vec'$1_function_info_FunctionInfo''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1: $1_option_Option'$1_function_info_FunctionInfo', s2: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $IsEqual'vec'$1_function_info_FunctionInfo''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::aggregator::Aggregator> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'($vec: Vec ($1_aggregator_Aggregator))
}
function {:inline} $Update'$1_option_Option'$1_aggregator_Aggregator''_vec(s: $1_option_Option'$1_aggregator_Aggregator', x: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'(x)
}
function $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsValid'vec'$1_aggregator_Aggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1: $1_option_Option'$1_aggregator_Aggregator', s2: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsEqual'vec'$1_aggregator_Aggregator''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::optional_aggregator::Integer> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'($vec: Vec ($1_optional_aggregator_Integer))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec(s: $1_option_Option'$1_optional_aggregator_Integer', x: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsValid'vec'$1_optional_aggregator_Integer''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1: $1_option_Option'$1_optional_aggregator_Integer', s2: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsEqual'vec'$1_optional_aggregator_Integer''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::optional_aggregator::OptionalAggregator> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'($vec: Vec ($1_optional_aggregator_OptionalAggregator))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator', x: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1: $1_option_Option'$1_optional_aggregator_OptionalAggregator', s2: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::fungible_asset::TransferRef> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'($vec: Vec ($1_fungible_asset_TransferRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_TransferRef''_vec(s: $1_option_Option'$1_fungible_asset_TransferRef', x: Vec ($1_fungible_asset_TransferRef)): $1_option_Option'$1_fungible_asset_TransferRef' {
    $1_option_Option'$1_fungible_asset_TransferRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_TransferRef''(s: $1_option_Option'$1_fungible_asset_TransferRef'): bool {
    $IsValid'vec'$1_fungible_asset_TransferRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''(s1: $1_option_Option'$1_fungible_asset_TransferRef', s2: $1_option_Option'$1_fungible_asset_TransferRef'): bool {
    $IsEqual'vec'$1_fungible_asset_TransferRef''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::fungible_asset::BurnRef> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'($vec: Vec ($1_fungible_asset_BurnRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_BurnRef''_vec(s: $1_option_Option'$1_fungible_asset_BurnRef', x: Vec ($1_fungible_asset_BurnRef)): $1_option_Option'$1_fungible_asset_BurnRef' {
    $1_option_Option'$1_fungible_asset_BurnRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_BurnRef''(s: $1_option_Option'$1_fungible_asset_BurnRef'): bool {
    $IsValid'vec'$1_fungible_asset_BurnRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''(s1: $1_option_Option'$1_fungible_asset_BurnRef', s2: $1_option_Option'$1_fungible_asset_BurnRef'): bool {
    $IsEqual'vec'$1_fungible_asset_BurnRef''(s1->$vec, s2->$vec)}

// struct option::Option<0x1::fungible_asset::MintRef> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'($vec: Vec ($1_fungible_asset_MintRef))
}
function {:inline} $Update'$1_option_Option'$1_fungible_asset_MintRef''_vec(s: $1_option_Option'$1_fungible_asset_MintRef', x: Vec ($1_fungible_asset_MintRef)): $1_option_Option'$1_fungible_asset_MintRef' {
    $1_option_Option'$1_fungible_asset_MintRef'(x)
}
function $IsValid'$1_option_Option'$1_fungible_asset_MintRef''(s: $1_option_Option'$1_fungible_asset_MintRef'): bool {
    $IsValid'vec'$1_fungible_asset_MintRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''(s1: $1_option_Option'$1_fungible_asset_MintRef', s2: $1_option_Option'$1_fungible_asset_MintRef'): bool {
    $IsEqual'vec'$1_fungible_asset_MintRef''(s1->$vec, s2->$vec)}

// fun option::borrow_mut<u128> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+161
procedure {:inline 1} $1_option_borrow_mut'u128'(_$t0: $Mutation ($1_option_Option'u128')) returns ($ret0: $Mutation (int), $ret1: $Mutation ($1_option_Option'u128'))
{
    // declare local variables
    var $t1: $1_option_Option'u128';
    var $t2: bool;
    var $t3: $Mutation (Vec (int));
    var $t4: int;
    var $t5: $Mutation (int);
    var $t6: int;
    var $t7: int;
    var $t0: $Mutation ($1_option_Option'u128');
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'u128': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(14,5795,5796)"} true;
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // $t1 := read_ref($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+4
    assume {:print "$at(14,5886,5890)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14

    // assume WellFormed($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'u128'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14

    // if ($t2) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    assume {:print "$at(14,5928,5950)"} true;
L1:

    // $t3 := borrow_field<0x1::option::Option<#0>>.vec($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    assume {:print "$at(14,5928,5950)"} true;
    $t3 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t4 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:29+1
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := vector::borrow_mut<#0>($t3, $t4) on_abort goto L3 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    call $t5,$t3 := $1_vector_borrow_mut'u128'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(14,5928,5950)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(3,3):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    assume {:print "$at(14,5868,5956)"} true;
    $temp_0'u128' := $Dereference($t5);
    assume {:print "$track_return(3,3,0):", $temp_0'u128'} $temp_0'u128' == $temp_0'u128';

    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;
L0:

    // pack_ref_deep($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;

    // drop($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6

    // $t7 := 262145 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:33+15
    $t7 := 262145;
    assume $IsValid'u64'($t7);

    // trace_abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;
    assume {:print "$track_abort(3,3):", $t7} $t7 == $t7;

    // $t6 := move($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    $t6 := $t7;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
L2:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L3:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<0x1::aggregator::Aggregator> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+161
procedure {:inline 1} $1_option_borrow_mut'$1_aggregator_Aggregator'(_$t0: $Mutation ($1_option_Option'$1_aggregator_Aggregator')) returns ($ret0: $Mutation ($1_aggregator_Aggregator), $ret1: $Mutation ($1_option_Option'$1_aggregator_Aggregator'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_aggregator_Aggregator';
    var $t2: bool;
    var $t3: $Mutation (Vec ($1_aggregator_Aggregator));
    var $t4: int;
    var $t5: $Mutation ($1_aggregator_Aggregator);
    var $t6: int;
    var $t7: int;
    var $t0: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_option_Option'$1_aggregator_Aggregator'': $1_option_Option'$1_aggregator_Aggregator';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(14,5795,5796)"} true;
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // $t1 := read_ref($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+4
    assume {:print "$at(14,5886,5890)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14

    // assume WellFormed($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_aggregator_Aggregator'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14

    // if ($t2) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    assume {:print "$at(14,5928,5950)"} true;
L1:

    // $t3 := borrow_field<0x1::option::Option<#0>>.vec($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    assume {:print "$at(14,5928,5950)"} true;
    $t3 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t4 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:29+1
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := vector::borrow_mut<#0>($t3, $t4) on_abort goto L3 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    call $t5,$t3 := $1_vector_borrow_mut'$1_aggregator_Aggregator'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(14,5928,5950)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(3,3):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    assume {:print "$at(14,5868,5956)"} true;
    $temp_0'$1_aggregator_Aggregator' := $Dereference($t5);
    assume {:print "$track_return(3,3,0):", $temp_0'$1_aggregator_Aggregator'} $temp_0'$1_aggregator_Aggregator' == $temp_0'$1_aggregator_Aggregator';

    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    $temp_0'$1_option_Option'$1_aggregator_Aggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_aggregator_Aggregator''} $temp_0'$1_option_Option'$1_aggregator_Aggregator'' == $temp_0'$1_option_Option'$1_aggregator_Aggregator'';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;
L0:

    // pack_ref_deep($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;

    // drop($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6

    // $t7 := 262145 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:33+15
    $t7 := 262145;
    assume $IsValid'u64'($t7);

    // trace_abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;
    assume {:print "$track_abort(3,3):", $t7} $t7 == $t7;

    // $t6 := move($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    $t6 := $t7;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
L2:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L3:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<0x1::optional_aggregator::Integer> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+161
procedure {:inline 1} $1_option_borrow_mut'$1_optional_aggregator_Integer'(_$t0: $Mutation ($1_option_Option'$1_optional_aggregator_Integer')) returns ($ret0: $Mutation ($1_optional_aggregator_Integer), $ret1: $Mutation ($1_option_Option'$1_optional_aggregator_Integer'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_Integer';
    var $t2: bool;
    var $t3: $Mutation (Vec ($1_optional_aggregator_Integer));
    var $t4: int;
    var $t5: $Mutation ($1_optional_aggregator_Integer);
    var $t6: int;
    var $t7: int;
    var $t0: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $temp_0'$1_option_Option'$1_optional_aggregator_Integer'': $1_option_Option'$1_optional_aggregator_Integer';
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(14,5795,5796)"} true;
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // $t1 := read_ref($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+4
    assume {:print "$at(14,5886,5890)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14

    // assume WellFormed($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_optional_aggregator_Integer'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14

    // if ($t2) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    assume {:print "$at(14,5928,5950)"} true;
L1:

    // $t3 := borrow_field<0x1::option::Option<#0>>.vec($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    assume {:print "$at(14,5928,5950)"} true;
    $t3 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t4 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:29+1
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := vector::borrow_mut<#0>($t3, $t4) on_abort goto L3 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    call $t5,$t3 := $1_vector_borrow_mut'$1_optional_aggregator_Integer'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(14,5928,5950)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(3,3):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    assume {:print "$at(14,5868,5956)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t5);
    assume {:print "$track_return(3,3,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_Integer''} $temp_0'$1_option_Option'$1_optional_aggregator_Integer'' == $temp_0'$1_option_Option'$1_optional_aggregator_Integer'';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;
L0:

    // pack_ref_deep($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;

    // drop($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6

    // $t7 := 262145 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:33+15
    $t7 := 262145;
    assume $IsValid'u64'($t7);

    // trace_abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;
    assume {:print "$track_abort(3,3):", $t7} $t7 == $t7;

    // $t6 := move($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    $t6 := $t7;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
L2:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L3:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<0x1::optional_aggregator::OptionalAggregator> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+161
procedure {:inline 1} $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'(_$t0: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator')) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator), $ret1: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator'))
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: bool;
    var $t3: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator));
    var $t4: int;
    var $t5: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t6: int;
    var $t7: int;
    var $t0: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(14,5795,5796)"} true;
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t1 := read_ref($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+4
    assume {:print "$at(14,5886,5890)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14

    // assume WellFormed($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+14

    // if ($t2) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    assume {:print "$at(14,5928,5950)"} true;
L1:

    // $t3 := borrow_field<0x1::option::Option<#0>>.vec($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    assume {:print "$at(14,5928,5950)"} true;
    $t3 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t4 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:29+1
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := vector::borrow_mut<#0>($t3, $t4) on_abort goto L3 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+22
    call $t5,$t3 := $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(14,5928,5950)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(3,3):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    assume {:print "$at(14,5868,5956)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t5);
    assume {:print "$track_return(3,3,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t0);
    assume {:print "$track_local(3,3,0):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:78+88
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;
L0:

    // pack_ref_deep($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;

    // drop($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6

    // $t7 := 262145 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:33+15
    $t7 := 262145;
    assume $IsValid'u64'($t7);

    // trace_abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    assume {:print "$at(14,5878,5884)"} true;
    assume {:print "$track_abort(3,3):", $t7} $t7 == $t7;

    // $t6 := move($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    $t6 := $t7;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
L2:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L3:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(14,5955,5956)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:28:9+50
function  $1_string_spec_internal_check_utf8(v: Vec (int)): bool;
axiom (forall v: Vec (int) ::
(var $$res := $1_string_spec_internal_check_utf8(v);
$IsValid'bool'($$res)));

// struct string::String at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:12:5+70
datatype $1_string_String {
    $1_string_String($bytes: Vec (int))
}
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''(s->$bytes)
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''(s1->$bytes, s2->$bytes)}

// fun string::length [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:42:5+73
procedure {:inline 1} $1_string_length(_$t0: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:42:5+1
    assume {:print "$at(16,1278,1279)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::string::String>.bytes($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:9+19
    assume {:print "$at(16,1326,1345)"} true;
    $t1 := $t0->$bytes;

    // $t2 := vector::length<u8>($t1) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:9+19
    call $t2 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(16,1326,1345)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(4,4):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:9+19
    assume {:print "$track_return(4,4,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:5+1
    assume {:print "$at(16,1350,1351)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:5+1
    assume {:print "$at(16,1350,1351)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:5+1
L2:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:5+1
    assume {:print "$at(16,1350,1351)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun string::bytes [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:32:5+72
procedure {:inline 1} $1_string_bytes(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:32:5+1
    assume {:print "$at(16,1018,1019)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::string::String>.bytes($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:33:9+11
    assume {:print "$at(16,1073,1084)"} true;
    $t1 := $t0->$bytes;

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:33:9+11
    assume {:print "$track_return(4,6,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:34:5+1
    assume {:print "$at(16,1089,1090)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:34:5+1
    assume {:print "$at(16,1089,1090)"} true;
    $ret0 := $t1;
    return;

}

// fun string::utf8 [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:17:5+133
procedure {:inline 1} $1_string_utf8(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: $1_string_String;
    var $t3: int;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:17:5+1
    assume {:print "$at(16,552,553)"} true;
    assume {:print "$track_local(4,13,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: string::internal_check_utf8($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:17+27
    assume {:print "$at(16,613,640)"} true;

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:17+27
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, string::spec_internal_check_utf8($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:17+27
    assume $IsEqual'bool'($t1, $1_string_spec_internal_check_utf8($t0));

    // $t1 := opaque end: string::internal_check_utf8($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:17+27

    // if ($t1) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+13
    assume {:print "$at(16,666,679)"} true;
L1:

    // $t2 := pack 0x1::string::String($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+13
    assume {:print "$at(16,666,679)"} true;
    $t2 := $1_string_String($t0);

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:17:48+90
    assume {:print "$at(16,595,685)"} true;
    assume {:print "$track_return(4,13,0):", $t2} $t2 == $t2;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:17:48+90
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:46+13
    assume {:print "$at(16,642,655)"} true;
L0:

    // $t3 := 1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:46+13
    assume {:print "$at(16,642,655)"} true;
    $t3 := 1;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:9+6
    assume {:print "$at(16,605,611)"} true;
    assume {:print "$track_abort(4,13):", $t3} $t3 == $t3;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:5+1
    assume {:print "$at(16,684,685)"} true;
L2:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:5+1
    assume {:print "$at(16,684,685)"} true;
    $ret0 := $t2;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:5+1
L3:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:5+1
    assume {:print "$at(16,684,685)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:26:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:26:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:26:5+1
    assume {:print "$at(15,794,795)"} true;
    assume {:print "$track_local(5,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:27:10+17
    assume {:print "$at(15,848,865)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(15,848,865)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(5,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:27:9+18
    assume {:print "$track_return(5,0,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:28:5+1
    assume {:print "$at(15,870,871)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:28:5+1
    assume {:print "$at(15,870,871)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:28:5+1
L2:

    // abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:28:5+1
    assume {:print "$at(15,870,871)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::aborted [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:3+57
procedure {:inline 1} $1_error_aborted(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:3+1
    assume {:print "$at(10,3525,3526)"} true;
    assume {:print "$track_local(6,0,0):", $t0} $t0 == $t0;

    // $t1 := 7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:47+7
    $t1 := 7;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume {:print "$at(10,3559,3580)"} true;

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume {:print "$track_return(6,0,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:59+1
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:59+1
    assume {:print "$at(10,3581,3582)"} true;
    $ret0 := $t3;
    return;

}

// fun error::already_exists [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+1
    assume {:print "$at(10,3585,3586)"} true;
    assume {:print "$track_local(6,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$at(10,3626,3654)"} true;

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$track_return(6,1,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
    assume {:print "$at(10,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+1
    assume {:print "$at(10,3082,3083)"} true;
    assume {:print "$track_local(6,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$at(10,3126,3156)"} true;

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$track_return(6,4,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
    assume {:print "$at(10,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+1
    assume {:print "$at(10,3232,3233)"} true;
    assume {:print "$track_local(6,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$at(10,3273,3300)"} true;

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$track_return(6,5,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
    assume {:print "$at(10,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+1
    assume {:print "$at(10,3461,3462)"} true;
    assume {:print "$track_local(6,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$at(10,3497,3520)"} true;

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$track_return(6,6,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
    assume {:print "$at(10,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+1
    assume {:print "$at(10,3161,3162)"} true;
    assume {:print "$track_local(6,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$at(10,3201,3227)"} true;

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$track_return(6,8,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
    assume {:print "$at(10,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+1
    assume {:print "$at(10,3381,3382)"} true;
    assume {:print "$track_local(6,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$at(10,3425,3456)"} true;

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$track_return(6,9,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
    assume {:print "$at(10,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.spec.move:61:10+40
function  $1_features_spec_is_enabled(feature: int): bool;
axiom (forall feature: int ::
(var $$res := $1_features_spec_is_enabled(feature);
$IsValid'bool'($$res)));

// struct features::Features at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:742:5+61
datatype $1_features_Features {
    $1_features_Features($features: Vec (bv8))
}
function {:inline} $Update'$1_features_Features'_features(s: $1_features_Features, x: Vec (bv8)): $1_features_Features {
    $1_features_Features(x)
}
function $IsValid'$1_features_Features'(s: $1_features_Features): bool {
    $IsValid'vec'bv8''(s->$features)
}
function {:inline} $IsEqual'$1_features_Features'(s1: $1_features_Features, s2: $1_features_Features): bool {
    $IsEqual'vec'bv8''(s1->$features, s2->$features)}
var $1_features_Features_$memory: $Memory $1_features_Features;

// fun features::coin_to_fungible_asset_migration_feature_enabled [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:495:5+146
procedure {:inline 1} $1_features_coin_to_fungible_asset_migration_feature_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 60 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:496:20+32
    assume {:print "$at(8,17936,17968)"} true;
    $t0 := 60;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:496:9+44

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:496:9+44
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:496:9+44
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:496:9+44

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:496:9+44
    assume {:print "$track_return(7,19,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:497:5+1
    assume {:print "$at(8,17974,17975)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:497:5+1
    assume {:print "$at(8,17974,17975)"} true;
    $ret0 := $t1;
    return;

}

// fun features::concurrent_fungible_assets_enabled [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:413:5+126
procedure {:inline 1} $1_features_concurrent_fungible_assets_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 50 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:414:20+26
    assume {:print "$at(8,14923,14949)"} true;
    $t0 := 50;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:414:9+38

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:414:9+38
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:414:9+38
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:414:9+38

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:414:9+38
    assume {:print "$track_return(7,23,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:415:5+1
    assume {:print "$at(8,14955,14956)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:415:5+1
    assume {:print "$at(8,14955,14956)"} true;
    $ret0 := $t1;
    return;

}

// fun features::default_to_concurrent_fungible_balance_enabled [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:573:5+150
procedure {:inline 1} $1_features_default_to_concurrent_fungible_balance_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 68 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:574:20+38
    assume {:print "$at(8,20852,20890)"} true;
    $t0 := 68;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:574:9+50

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:574:9+50
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:574:9+50
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:574:9+50

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:574:9+50
    assume {:print "$track_return(7,27,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:575:5+1
    assume {:print "$at(8,20896,20897)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:575:5+1
    assume {:print "$at(8,20896,20897)"} true;
    $ret0 := $t1;
    return;

}

// fun features::dispatchable_fungible_asset_enabled [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:534:5+128
procedure {:inline 1} $1_features_dispatchable_fungible_asset_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 63 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:535:20+27
    assume {:print "$at(8,19320,19347)"} true;
    $t0 := 63;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:535:9+39

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:535:9+39
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:535:9+39
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:535:9+39

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:535:9+39
    assume {:print "$track_return(7,31,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:536:5+1
    assume {:print "$at(8,19353,19354)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:536:5+1
    assume {:print "$at(8,19353,19354)"} true;
    $ret0 := $t1;
    return;

}

// fun features::module_event_migration_enabled [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:472:5+118
procedure {:inline 1} $1_features_module_event_migration_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 57 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:20+22
    assume {:print "$at(8,17014,17036)"} true;
    $t0 := 57;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:473:9+34
    assume {:print "$track_return(7,109,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:474:5+1
    assume {:print "$at(8,17042,17043)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:474:5+1
    assume {:print "$at(8,17042,17043)"} true;
    $ret0 := $t1;
    return;

}

// fun features::new_accounts_default_to_fa_apt_store_enabled [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:543:5+146
procedure {:inline 1} $1_features_new_accounts_default_to_fa_apt_store_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 64 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:544:20+36
    assume {:print "$at(8,19663,19699)"} true;
    $t0 := 64;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:544:9+48

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:544:9+48
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:544:9+48
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:544:9+48

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:544:9+48
    assume {:print "$track_return(7,114,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:545:5+1
    assume {:print "$at(8,19705,19706)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:545:5+1
    assume {:print "$at(8,19705,19706)"} true;
    $ret0 := $t1;
    return;

}

// fun features::new_accounts_default_to_fa_store_enabled [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:679:5+138
procedure {:inline 1} $1_features_new_accounts_default_to_fa_store_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 90 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:680:20+32
    assume {:print "$at(8,24728,24760)"} true;
    $t0 := 90;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:680:9+44

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:680:9+44
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:680:9+44
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:680:9+44

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:680:9+44
    assume {:print "$track_return(7,115,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:681:5+1
    assume {:print "$at(8,24766,24767)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:681:5+1
    assume {:print "$at(8,24766,24767)"} true;
    $ret0 := $t1;
    return;

}

// struct type_info::TypeInfo at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/type_info.move:19:5+145
datatype $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int))
}
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, s->$module_name, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, x, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, s->$module_name, x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'(s->$account_address)
      && $IsValid'vec'u8''(s->$module_name)
      && $IsValid'vec'u8''(s->$struct_name)
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'(s1->$account_address, s2->$account_address)
    && $IsEqual'vec'u8''(s1->$module_name, s2->$module_name)
    && $IsEqual'vec'u8''(s1->$struct_name, s2->$struct_name)}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u128''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u128''(bytes);
$IsValid'vec'u128''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): Vec ($1_object_Object'$1_fungible_asset_Metadata');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'vec'$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(bytes: Vec (int)): Vec ($1_function_info_FunctionInfo);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(bytes);
$IsValid'vec'$1_function_info_FunctionInfo''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): Vec ($1_aggregator_Aggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'vec'$1_aggregator_Aggregator''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): Vec ($1_optional_aggregator_Integer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'vec'$1_optional_aggregator_Integer''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): Vec ($1_optional_aggregator_OptionalAggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'vec'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(bytes: Vec (int)): Vec ($1_fungible_asset_TransferRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_TransferRef''(bytes);
$IsValid'vec'$1_fungible_asset_TransferRef''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(bytes: Vec (int)): Vec ($1_fungible_asset_BurnRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_BurnRef''(bytes);
$IsValid'vec'$1_fungible_asset_BurnRef''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): Vec ($1_fungible_asset_FungibleStore);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'vec'$1_fungible_asset_FungibleStore''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(bytes: Vec (int)): Vec ($1_fungible_asset_MintRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_MintRef''(bytes);
$IsValid'vec'$1_fungible_asset_MintRef''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u8''(bytes: Vec (int)): $1_option_Option'u8';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u8''(bytes);
$IsValid'$1_option_Option'u8''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u128''(bytes: Vec (int)): $1_option_Option'u128';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u128''(bytes);
$IsValid'$1_option_Option'u128''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(bytes: Vec (int)): $1_option_Option'$1_function_info_FunctionInfo';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(bytes);
$IsValid'$1_option_Option'$1_function_info_FunctionInfo''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): $1_option_Option'$1_aggregator_Aggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'$1_option_Option'$1_aggregator_Aggregator''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_Integer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_Integer''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_TransferRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_TransferRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_TransferRef''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_BurnRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_BurnRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_BurnRef''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(bytes: Vec (int)): $1_option_Option'$1_fungible_asset_MintRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_fungible_asset_MintRef''(bytes);
$IsValid'$1_option_Option'$1_fungible_asset_MintRef''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_features_Features'(bytes: Vec (int)): $1_features_Features;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_features_Features'(bytes);
$IsValid'$1_features_Features'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(bytes: Vec (int)): Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(bytes);
$IsValid'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(bytes: Vec (int)): Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(bytes);
$IsValid'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'address_u64''(bytes: Vec (int)): Table int (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'address_u64''(bytes);
$IsValid'$1_table_Table'address_u64''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'address_vec'u64'''(bytes: Vec (int)): Table int (Vec (int));
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'address_vec'u64'''(bytes);
$IsValid'$1_table_Table'address_vec'u64'''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): Table int ($1_object_Object'$1_fungible_asset_Metadata');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes: Vec (int)): Table int ($1_permissioned_signer_StoredPermission);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes);
$IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(bytes: Vec (int)): $1_permissioned_signer_GrantedPermissionHandles;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_permissioned_signer_GrantedPermissionHandles'(bytes);
$IsValid'$1_permissioned_signer_GrantedPermissionHandles'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(bytes: Vec (int)): $1_permissioned_signer_PermissionStorage;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_permissioned_signer_PermissionStorage'(bytes);
$IsValid'$1_permissioned_signer_PermissionStorage'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_object_TransferEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_object_TransferEvent''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_DepositEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_WithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CoinRegister'(bytes: Vec (int)): $1_account_CoinRegister;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CoinRegister'(bytes);
$IsValid'$1_account_CoinRegister'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(bytes: Vec (int)): $1_account_CoinRegisterEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(bytes);
$IsValid'$1_account_CoinRegisterEvent'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes: Vec (int)): $1_object_ConstructorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes);
$IsValid'$1_object_ConstructorRef'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_DeriveRef'(bytes: Vec (int)): $1_object_DeriveRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_DeriveRef'(bytes);
$IsValid'$1_object_DeriveRef'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): $1_object_Object'$1_fungible_asset_FungibleStore';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'$1_object_Object'$1_fungible_asset_FungibleStore''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(bytes: Vec (int)): $1_object_Object'$1_fungible_asset_Metadata';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(bytes);
$IsValid'$1_object_Object'$1_fungible_asset_Metadata''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes: Vec (int)): $1_object_ObjectCore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes);
$IsValid'$1_object_ObjectCore'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TombStone'(bytes: Vec (int)): $1_object_TombStone;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TombStone'(bytes);
$IsValid'$1_object_TombStone'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Transfer'(bytes: Vec (int)): $1_object_Transfer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Transfer'(bytes);
$IsValid'$1_object_Transfer'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes: Vec (int)): $1_object_TransferEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes);
$IsValid'$1_object_TransferEvent'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferPermission'(bytes: Vec (int)): $1_object_TransferPermission;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferPermission'(bytes);
$IsValid'$1_object_TransferPermission'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferRef'(bytes: Vec (int)): $1_object_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferRef'(bytes);
$IsValid'$1_object_TransferRef'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Untransferable'(bytes: Vec (int)): $1_object_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Untransferable'(bytes);
$IsValid'$1_object_Untransferable'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(bytes: Vec (int)): $1_function_info_FunctionInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(bytes);
$IsValid'$1_function_info_FunctionInfo'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes: Vec (int)): $1_aggregator_Aggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes);
$IsValid'$1_aggregator_Aggregator'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u64''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u128';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u128''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes: Vec (int)): $1_optional_aggregator_Integer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes);
$IsValid'$1_optional_aggregator_Integer'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): $1_optional_aggregator_OptionalAggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'$1_optional_aggregator_OptionalAggregator'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(bytes: Vec (int)): $1_fungible_asset_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(bytes);
$IsValid'$1_fungible_asset_TransferRef'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(bytes: Vec (int)): $1_fungible_asset_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(bytes);
$IsValid'$1_fungible_asset_Untransferable'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(bytes: Vec (int)): $1_fungible_asset_BurnRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(bytes);
$IsValid'$1_fungible_asset_BurnRef'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(bytes: Vec (int)): $1_fungible_asset_ConcurrentFungibleBalance;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(bytes);
$IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(bytes: Vec (int)): $1_fungible_asset_ConcurrentSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(bytes);
$IsValid'$1_fungible_asset_ConcurrentSupply'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(bytes: Vec (int)): $1_fungible_asset_Deposit;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(bytes);
$IsValid'$1_fungible_asset_Deposit'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(bytes: Vec (int)): $1_fungible_asset_DispatchFunctionStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(bytes);
$IsValid'$1_fungible_asset_DispatchFunctionStore'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(bytes: Vec (int)): $1_fungible_asset_FungibleAsset;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(bytes);
$IsValid'$1_fungible_asset_FungibleAsset'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(bytes: Vec (int)): $1_fungible_asset_FungibleStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(bytes);
$IsValid'$1_fungible_asset_FungibleStore'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(bytes: Vec (int)): $1_fungible_asset_Metadata;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(bytes);
$IsValid'$1_fungible_asset_Metadata'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(bytes: Vec (int)): $1_fungible_asset_MintRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(bytes);
$IsValid'$1_fungible_asset_MintRef'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Supply'(bytes: Vec (int)): $1_fungible_asset_Supply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Supply'(bytes);
$IsValid'$1_fungible_asset_Supply'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(bytes: Vec (int)): $1_fungible_asset_Withdraw;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(bytes);
$IsValid'$1_fungible_asset_Withdraw'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_WithdrawPermission'(bytes: Vec (int)): $1_fungible_asset_WithdrawPermission;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_WithdrawPermission'(bytes);
$IsValid'$1_fungible_asset_WithdrawPermission'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(bytes: Vec (int)): $1_dispatchable_fungible_asset_TransferRefStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(bytes);
$IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(bytes: Vec (int)): $1_primary_fungible_store_DeriveRefPod;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(bytes);
$IsValid'$1_primary_fungible_store_DeriveRefPod'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes: Vec (int)): $1_coin_DepositEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes);
$IsValid'$1_coin_DepositEvent'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes: Vec (int)): $1_coin_WithdrawEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes);
$IsValid'$1_coin_WithdrawEvent'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'#0''(bytes: Vec (int)): $1_coin_Coin'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'#0''(bytes);
$IsValid'$1_coin_Coin'#0''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(bytes: Vec (int)): $1_coin_CoinConversionMap;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinConversionMap'(bytes);
$IsValid'$1_coin_CoinConversionMap'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'#0''(bytes: Vec (int)): $1_coin_CoinInfo'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'#0''(bytes);
$IsValid'$1_coin_CoinInfo'#0''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'#0''(bytes: Vec (int)): $1_coin_CoinStore'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'#0''(bytes);
$IsValid'$1_coin_CoinStore'#0''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairCreation'(bytes: Vec (int)): $1_coin_PairCreation;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairCreation'(bytes);
$IsValid'$1_coin_PairCreation'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairedCoinType'(bytes: Vec (int)): $1_coin_PairedCoinType;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairedCoinType'(bytes);
$IsValid'$1_coin_PairedCoinType'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(bytes: Vec (int)): $1_coin_PairedFungibleAssetRefs;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_PairedFungibleAssetRefs'(bytes);
$IsValid'$1_coin_PairedFungibleAssetRefs'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$supply'#0''(bytes: Vec (int)): $1_coin_Ghost$supply'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$supply'#0''(bytes);
$IsValid'$1_coin_Ghost$supply'#0''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'#0''(bytes: Vec (int)): $1_coin_Ghost$aggregate_supply'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'#0''(bytes);
$IsValid'$1_coin_Ghost$aggregate_supply'#0''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(bytes: Vec (int)): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(bytes);
$IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(bytes: Vec (int)): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(bytes);
$IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(bytes: Vec (int)): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(bytes);
$IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u128'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u128'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_TransferRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_BurnRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_MintRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_TransferRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_BurnRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_fungible_asset_MintRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_features_Features'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_features_Features'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'address_u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'address_u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'address_vec'u64'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'address_vec'u64'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_permissioned_signer_GrantedPermissionHandles'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_permissioned_signer_PermissionStorage'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CoinRegister'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CoinRegister'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_DeriveRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_DeriveRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TombStone'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TombStone'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Transfer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Transfer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferPermission'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferPermission'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Supply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Supply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_WithdrawPermission'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_WithdrawPermission'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Coin'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Coin'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinConversionMap'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinInfo'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinInfo'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinStore'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinStore'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairCreation'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairCreation'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairedCoinType'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairedCoinType'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_PairedFungibleAssetRefs'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$supply'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$supply'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/chain_status.move:35:5+90
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/chain_status.move:12:5+34
datatype $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker($dummy_field: bool)
}
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.spec.move:57:10+111
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)->$microseconds
}

// struct timestamp::CurrentTimeMicroseconds at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:12:5+73
datatype $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds($microseconds: int)
}
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'(s->$microseconds)
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:61:5+153
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:62:48+16
    assume {:print "$at(214,2511,2527)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<0x1::timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:62:9+56
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(214,2472,2528)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(23,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<0x1::timestamp::CurrentTimeMicroseconds>.microseconds($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:62:9+69
    $t3 := $t1->$microseconds;

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:62:9+69
    assume {:print "$track_return(23,0,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(214,2546,2547)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(214,2546,2547)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:63:5+1
L2:

    // abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(214,2546,2547)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun timestamp::now_seconds [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:67:5+123
procedure {:inline 1} $1_timestamp_now_seconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := timestamp::now_microseconds() on_abort goto L2 with $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:68:9+18
    assume {:print "$at(214,2680,2698)"} true;
    call $t0 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(214,2680,2698)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(23,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := 1000000 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:68:30+23
    $t2 := 1000000;
    assume $IsValid'u64'($t2);

    // $t3 := /($t0, $t2) on_abort goto L2 with $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:68:9+44
    call $t3 := $Div($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(214,2680,2724)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(23,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:68:9+44
    assume {:print "$track_return(23,1,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(214,2729,2730)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(214,2729,2730)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:69:5+1
L2:

    // abort($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(214,2729,2730)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/create_signer.spec.move:47:10+46
function  $1_create_signer_spec_create_signer(addr: int): $signer;
axiom (forall addr: int ::
(var $$res := $1_create_signer_spec_create_signer(addr);
$IsValid'signer'($$res)));

// struct copyable_any::Any at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/copyable_any.move:12:5+92
datatype $1_copyable_any_Any {
    $1_copyable_any_Any($type_name: $1_string_String, $data: Vec (int))
}
function {:inline} $Update'$1_copyable_any_Any'_type_name(s: $1_copyable_any_Any, x: $1_string_String): $1_copyable_any_Any {
    $1_copyable_any_Any(x, s->$data)
}
function {:inline} $Update'$1_copyable_any_Any'_data(s: $1_copyable_any_Any, x: Vec (int)): $1_copyable_any_Any {
    $1_copyable_any_Any(s->$type_name, x)
}
function $IsValid'$1_copyable_any_Any'(s: $1_copyable_any_Any): bool {
    $IsValid'$1_string_String'(s->$type_name)
      && $IsValid'vec'u8''(s->$data)
}
function {:inline} $IsEqual'$1_copyable_any_Any'(s1: $1_copyable_any_Any, s2: $1_copyable_any_Any): bool {
    $IsEqual'$1_string_String'(s1->$type_name, s2->$type_name)
    && $IsEqual'vec'u8''(s1->$data, s2->$data)}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:14:10+54
function  $1_permissioned_signer_spec_is_permissioned_signer_impl(s: $signer): bool;
axiom (forall s: $signer ::
(var $$res := $1_permissioned_signer_spec_is_permissioned_signer_impl(s);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:21:10+287
function {:inline} $1_permissioned_signer_spec_is_permissioned_signer(s: $signer): bool {
    (if (!$1_features_spec_is_enabled(84)) then (false) else ($1_permissioned_signer_spec_is_permissioned_signer_impl(s)))
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:37:10+48
function  $1_permissioned_signer_spec_permission_address(s: $signer): int;
axiom (forall s: $signer ::
(var $$res := $1_permissioned_signer_spec_permission_address(s);
$IsValid'address'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:121:10+95
function  $1_permissioned_signer_spec_check_permission_exists'$1_object_TransferPermission'(s: $signer, perm: $1_object_TransferPermission): bool;
axiom (forall s: $signer, perm: $1_object_TransferPermission ::
(var $$res := $1_permissioned_signer_spec_check_permission_exists'$1_object_TransferPermission'(s, perm);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:162:10+113
function  $1_permissioned_signer_spec_check_permission_consume'$1_fungible_asset_WithdrawPermission'(s: $signer, threshold: int, perm: $1_fungible_asset_WithdrawPermission): bool;
axiom (forall s: $signer, threshold: int, perm: $1_fungible_asset_WithdrawPermission ::
(var $$res := $1_permissioned_signer_spec_check_permission_consume'$1_fungible_asset_WithdrawPermission'(s, threshold, perm);
$IsValid'bool'($$res)));

// struct permissioned_signer::GrantedPermissionHandles at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.move:64:5+188
datatype $1_permissioned_signer_GrantedPermissionHandles {
    $1_permissioned_signer_GrantedPermissionHandles($active_handles: Vec (int))
}
function {:inline} $Update'$1_permissioned_signer_GrantedPermissionHandles'_active_handles(s: $1_permissioned_signer_GrantedPermissionHandles, x: Vec (int)): $1_permissioned_signer_GrantedPermissionHandles {
    $1_permissioned_signer_GrantedPermissionHandles(x)
}
function $IsValid'$1_permissioned_signer_GrantedPermissionHandles'(s: $1_permissioned_signer_GrantedPermissionHandles): bool {
    $IsValid'vec'address''(s->$active_handles)
}
function {:inline} $IsEqual'$1_permissioned_signer_GrantedPermissionHandles'(s1: $1_permissioned_signer_GrantedPermissionHandles, s2: $1_permissioned_signer_GrantedPermissionHandles): bool {
    $IsEqual'vec'address''(s1->$active_handles, s2->$active_handles)}
var $1_permissioned_signer_GrantedPermissionHandles_$memory: $Memory $1_permissioned_signer_GrantedPermissionHandles;

// enum permissioned_signer::PermissionStorage at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.move:99:5+257
datatype $1_permissioned_signer_PermissionStorage {
    $1_permissioned_signer_PermissionStorage_V1($perms_V1: Table int ($1_permissioned_signer_StoredPermission))
}
function {:inline} $Update'$1_permissioned_signer_PermissionStorage_V1'_perms(s: $1_permissioned_signer_PermissionStorage, x: Table int ($1_permissioned_signer_StoredPermission)): $1_permissioned_signer_PermissionStorage {
    $1_permissioned_signer_PermissionStorage_V1(x)
}
function $IsValid'$1_permissioned_signer_PermissionStorage_V1'(s: $1_permissioned_signer_PermissionStorage): bool {
    if s is $1_permissioned_signer_PermissionStorage_V1 then
    $IsValid'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(s->$perms_V1)
    else false
}
function {:inline} $Update'$1_permissioned_signer_PermissionStorage'_Table_int_$1_permissioned_signer_StoredPermission_perms(s: $1_permissioned_signer_PermissionStorage, x: Table int ($1_permissioned_signer_StoredPermission)): $1_permissioned_signer_PermissionStorage {
     if s is $1_permissioned_signer_PermissionStorage_V1 then
    $Update'$1_permissioned_signer_PermissionStorage_V1'_perms(s, x)
    else s
}
function $IsValid'$1_permissioned_signer_PermissionStorage'(s: $1_permissioned_signer_PermissionStorage): bool {
     if s is $1_permissioned_signer_PermissionStorage_V1 then
    $IsValid'$1_permissioned_signer_PermissionStorage_V1'(s)
    else false
}
function {:inline} $IsEqual'$1_permissioned_signer_PermissionStorage'(s1: $1_permissioned_signer_PermissionStorage, s2: $1_permissioned_signer_PermissionStorage): bool {
     if s1 is $1_permissioned_signer_PermissionStorage_V1 && s2 is $1_permissioned_signer_PermissionStorage_V1 then
    $IsEqual'$1_big_ordered_map_BigOrderedMap'$1_copyable_any_Any_$1_permissioned_signer_StoredPermission''(s1->$perms_V1, s2->$perms_V1)
    else false
}
var $1_permissioned_signer_PermissionStorage_$memory: $Memory $1_permissioned_signer_PermissionStorage;

// enum permissioned_signer::StoredPermission at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.move:108:5+196
datatype $1_permissioned_signer_StoredPermission {
    $1_permissioned_signer_StoredPermission_Unlimited(),
    $1_permissioned_signer_StoredPermission_Capacity($0_Capacity: int)
}
function $IsValid'$1_permissioned_signer_StoredPermission_Unlimited'(s: $1_permissioned_signer_StoredPermission): bool {
    true
}
function {:inline} $Update'$1_permissioned_signer_StoredPermission_Capacity'_0(s: $1_permissioned_signer_StoredPermission, x: int): $1_permissioned_signer_StoredPermission {
    $1_permissioned_signer_StoredPermission_Capacity(x)
}
function $IsValid'$1_permissioned_signer_StoredPermission_Capacity'(s: $1_permissioned_signer_StoredPermission): bool {
    if s is $1_permissioned_signer_StoredPermission_Capacity then
    $IsValid'u256'(s->$0_Capacity)
    else false
}
function {:inline} $Update'$1_permissioned_signer_StoredPermission'_int_0(s: $1_permissioned_signer_StoredPermission, x: int): $1_permissioned_signer_StoredPermission {
     if s is $1_permissioned_signer_StoredPermission_Capacity then
    $Update'$1_permissioned_signer_StoredPermission_Capacity'_0(s, x)
    else s
}
function $IsValid'$1_permissioned_signer_StoredPermission'(s: $1_permissioned_signer_StoredPermission): bool {
     if s is $1_permissioned_signer_StoredPermission_Unlimited then
    $IsValid'$1_permissioned_signer_StoredPermission_Unlimited'(s)
    else if s is $1_permissioned_signer_StoredPermission_Capacity then
    $IsValid'$1_permissioned_signer_StoredPermission_Capacity'(s)
    else false
}
function {:inline} $IsEqual'$1_permissioned_signer_StoredPermission'(s1: $1_permissioned_signer_StoredPermission, s2: $1_permissioned_signer_StoredPermission): bool {
    s1 == s2
}

// struct guid::GUID at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:7:5+50
datatype $1_guid_GUID {
    $1_guid_GUID($id: $1_guid_ID)
}
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'(s->$id)
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:12:5+209
datatype $1_guid_ID {
    $1_guid_ID($creation_num: int, $addr: int)
}
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, s->$addr)
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(s->$creation_num, x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'(s->$creation_num)
      && $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:5+1
    assume {:print "$at(174,836,837)"} true;
    assume {:print "$track_local(36,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(36,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$at(174,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$track_local(36,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:25:44+1
    assume {:print "$at(174,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:25:29+16
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(174,987,1003)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(36,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack 0x1::guid::ID($t3, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:27:17+70
    assume {:print "$at(174,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack 0x1::guid::GUID($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$at(174,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:80+211
    assume {:print "$at(174,911,1122)"} true;
    assume {:print "$track_return(36,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:23:80+211
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(36,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(174,1121,1122)"} true;
L1:

    // return $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(174,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:32:5+1
L2:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(174,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct event::EventHandle<0x1::account::CoinRegisterEvent> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::account::KeyRotationEvent> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::object::TransferEvent> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_counter(s: $1_event_EventHandle'$1_object_TransferEvent', x: int): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_guid(s: $1_event_EventHandle'$1_object_TransferEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''(s1: $1_event_EventHandle'$1_object_TransferEvent', s2: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::coin::DepositEvent> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_counter(s: $1_event_EventHandle'$1_coin_DepositEvent', x: int): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_guid(s: $1_event_EventHandle'$1_coin_DepositEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''(s1: $1_event_EventHandle'$1_coin_DepositEvent', s2: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::coin::WithdrawEvent> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_counter(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: int): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_guid(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''(s1: $1_event_EventHandle'$1_coin_WithdrawEvent', s2: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<0x1::reconfiguration::NewEpochEvent> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:37:5+224
datatype $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<0x1::object::TransferEvent> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_object_TransferEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_object_TransferEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_object_TransferEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_object_TransferEvent'': $1_event_EventHandle'$1_object_TransferEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+1
    assume {:print "$at(164,1731,1732)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:48:22+1
    assume {:print "$at(164,1860,1861)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$at(164,1822,1890)"} true;
    $t2 := $1_event_EventHandle'$1_object_TransferEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<0x1::coin::DepositEvent> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_coin_DepositEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_coin_DepositEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_coin_DepositEvent'': $1_event_EventHandle'$1_coin_DepositEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+1
    assume {:print "$at(164,1731,1732)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:48:22+1
    assume {:print "$at(164,1860,1861)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$at(164,1822,1890)"} true;
    $t2 := $1_event_EventHandle'$1_coin_DepositEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<0x1::coin::WithdrawEvent> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_coin_WithdrawEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_coin_WithdrawEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_coin_WithdrawEvent'': $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:46:5+1
    assume {:print "$at(164,1731,1732)"} true;
    assume {:print "$track_local(37,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:48:22+1
    assume {:print "$at(164,1860,1861)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack 0x1::event::EventHandle<#0>($t1, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$at(164,1822,1890)"} true;
    $t2 := $1_event_EventHandle'$1_coin_WithdrawEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:47:9+68
    assume {:print "$track_return(37,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/event.move:51:5+1
    assume {:print "$at(164,1895,1896)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:162:10+212
function {:inline} $1_account_spec_exists_at($1_account_Account_$memory: $Memory $1_account_Account, addr: int): bool {
    ($1_features_spec_is_enabled(91) || $ResourceExists($1_account_Account_$memory, addr))
}

// struct account::Account at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:61:5+401
datatype $1_account_Account {
    $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability')
}
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, x, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, x, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, x, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, x, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, x, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''(s->$authentication_key)
      && $IsValid'u64'(s->$sequence_number)
      && $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s->$coin_register_events)
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s->$key_rotation_events)
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s->$rotation_capability_offer)
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s->$signer_capability_offer)
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''(s1->$authentication_key, s2->$authentication_key)
    && $IsEqual'u64'(s1->$sequence_number, s2->$sequence_number)
    && $IsEqual'u64'(s1->$guid_creation_num, s2->$guid_creation_num)
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1->$coin_register_events, s2->$coin_register_events)
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1->$key_rotation_events, s2->$key_rotation_events)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1->$rotation_capability_offer, s2->$rotation_capability_offer)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1->$signer_capability_offer, s2->$signer_capability_offer)}
var $1_account_Account_$memory: $Memory $1_account_Account;

// struct account::CapabilityOffer<0x1::account::RotationCapability> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:86:5+68
datatype $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CapabilityOffer<0x1::account::SignerCapability> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:86:5+68
datatype $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CoinRegister at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:81:5+98
datatype $1_account_CoinRegister {
    $1_account_CoinRegister($account: int, $type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegister'_account(s: $1_account_CoinRegister, x: int): $1_account_CoinRegister {
    $1_account_CoinRegister(x, s->$type_info)
}
function {:inline} $Update'$1_account_CoinRegister'_type_info(s: $1_account_CoinRegister, x: $1_type_info_TypeInfo): $1_account_CoinRegister {
    $1_account_CoinRegister(s->$account, x)
}
function $IsValid'$1_account_CoinRegister'(s: $1_account_CoinRegister): bool {
    $IsValid'address'(s->$account)
      && $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegister'(s1: $1_account_CoinRegister, s2: $1_account_CoinRegister): bool {
    $IsEqual'address'(s1->$account, s2->$account)
    && $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::CoinRegisterEvent at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:76:5+77
datatype $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::KeyRotationEvent at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:71:5+135
datatype $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, s->$new_authentication_key)
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(s->$old_authentication_key, x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''(s->$old_authentication_key)
      && $IsValid'vec'u8''(s->$new_authentication_key)
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''(s1->$old_authentication_key, s2->$old_authentication_key)
    && $IsEqual'vec'u8''(s1->$new_authentication_key, s2->$new_authentication_key)}

// struct account::RotationCapability at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:88:5+62
datatype $1_account_RotationCapability {
    $1_account_RotationCapability($account: int)
}
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:90:5+60
datatype $1_account_SignerCapability {
    $1_account_SignerCapability($account: int)
}
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::new_event_handle<0x1::coin::DepositEvent> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1205:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_coin_DepositEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_coin_DepositEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_coin_DepositEvent'': $1_event_EventHandle'$1_coin_DepositEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:656:9+39
    assume {:print "$at(97,32702,32741)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<0x1::account::Account>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:657:9+36
    assume {:print "$at(97,32750,32786)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1205:5+1
    assume {:print "$at(96,62055,62056)"} true;
    assume {:print "$track_local(39,0,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:640:9+46
    assume {:print "$at(97,32069,32115)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:656:9+39
    assume {:print "$at(97,32702,32741)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<0x1::account::Account>($t4)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:657:9+36
    assume {:print "$at(97,32750,32786)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1206:33+20
    assume {:print "$at(96,62185,62205)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(96,62185,62205)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,0):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1206:9+45
    call $t8 := $1_event_new_event_handle'$1_coin_DepositEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(96,62161,62206)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,0):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1206:9+45
    assume {:print "$track_return(39,0,0):", $t8} $t8 == $t8;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1207:5+1
    assume {:print "$at(96,62211,62212)"} true;
L1:

    // return $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1207:5+1
    assume {:print "$at(96,62211,62212)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1207:5+1
L2:

    // abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1207:5+1
    assume {:print "$at(96,62211,62212)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<0x1::coin::WithdrawEvent> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1205:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_coin_WithdrawEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_coin_WithdrawEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_coin_WithdrawEvent'': $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:656:9+39
    assume {:print "$at(97,32702,32741)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<0x1::account::Account>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:657:9+36
    assume {:print "$at(97,32750,32786)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1205:5+1
    assume {:print "$at(96,62055,62056)"} true;
    assume {:print "$track_local(39,0,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:640:9+46
    assume {:print "$at(97,32069,32115)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:656:9+39
    assume {:print "$at(97,32702,32741)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<0x1::account::Account>($t4)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:657:9+36
    assume {:print "$at(97,32750,32786)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1206:33+20
    assume {:print "$at(96,62185,62205)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(96,62185,62205)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,0):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1206:9+45
    call $t8 := $1_event_new_event_handle'$1_coin_WithdrawEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(96,62161,62206)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(39,0):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1206:9+45
    assume {:print "$track_return(39,0,0):", $t8} $t8 == $t8;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1207:5+1
    assume {:print "$at(96,62211,62212)"} true;
L1:

    // return $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1207:5+1
    assume {:print "$at(96,62211,62212)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1207:5+1
L2:

    // abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1207:5+1
    assume {:print "$at(96,62211,62212)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::create_account_if_does_not_exist [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:276:5+419
procedure {:inline 1} $1_account_create_account_if_does_not_exist(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: Vec (int);
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: bool;
    var $t11: Vec (int);
    var $t12: $signer;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: bool;
    var $t0: int;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, bcs::$to_bytes<address>($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:122:9+56
    assume {:print "$at(97,7171,7227)"} true;
    assume ($t3 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[account_address]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:276:5+1
    assume {:print "$at(96,13904,13905)"} true;
    assume {:print "$track_local(39,4,0):", $t0} $t0 == $t0;

    // $t4 := exists<0x1::account::Account>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:360:9+21
    assume {:print "$at(96,17759,17780)"} true;
    $t4 := $ResourceExists($1_account_Account_$memory, $t0);

    // if ($t4) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:13+36
    assume {:print "$at(96,13988,14024)"} true;
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:9+333
L1:

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:9+333
    assume {:print "$at(96,13984,14317)"} true;
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+15
    assume {:print "$at(96,14065,14080)"} true;
L0:

    // $t5 := 0x0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:36+12
    assume {:print "$at(96,14084,14096)"} true;
    $t5 := 0;
    assume $IsValid'address'($t5);

    // $t6 := !=($t0, $t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+31
    $t6 := !$IsEqual'address'($t0, $t5);

    // if ($t6) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:52+15
L4:

    // $t7 := 0x1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:71+16
    assume {:print "$at(96,14119,14135)"} true;
    $t7 := 1;
    assume $IsValid'address'($t7);

    // $t8 := !=($t0, $t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:52+35
    $t8 := !$IsEqual'address'($t0, $t7);

    // $t1 := $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:52+35
    $t1 := $t8;

    // trace_local[$t2]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:52+35
    assume {:print "$track_local(39,4,1):", $t8} $t8 == $t8;

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
L10:

    // if ($t1) goto L6 else goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    assume {:print "$at(96,14065,14170)"} true;
    if ($t1) { goto L6; } else { goto L5; }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:91+15
L6:

    // $t9 := 0x3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:110+12
    assume {:print "$at(96,14158,14170)"} true;
    $t9 := 3;
    assume $IsValid'address'($t9);

    // $t10 := !=($t0, $t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:91+31
    $t10 := !$IsEqual'address'($t0, $t9);

    // $t2 := $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:91+31
    $t2 := $t10;

    // trace_local[$t4]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:91+31
    assume {:print "$track_local(39,4,2):", $t10} $t10 == $t10;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    assume {:print "$at(96,14040,14046)"} true;
L9:

    // if ($t2) goto L8 else goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    assume {:print "$at(96,14040,14046)"} true;
    if ($t2) { goto L8; } else { goto L7; }

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume {:print "$at(96,14265,14306)"} true;
L8:

    // assume Identical($t11, bcs::$to_bytes<address>($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:170:9+45
    assume {:print "$at(97,9092,9137)"} true;
    assume ($t11 == $1_bcs_$to_bytes'address'($t0));

    // $t12 := opaque begin: account::create_account_unchecked($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume {:print "$at(96,14265,14306)"} true;

    // assume Identical($t13, Or(Neq<num>(Len<u8>($t11), 32), exists<0x1::account::Account>($t0))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume ($t13 == (!$IsEqual'num'(LenVec($t11), 32) || $ResourceExists($1_account_Account_$memory, $t0)));

    // if ($t13) goto L14 else goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    if ($t13) { goto L14; } else { goto L13; }

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
L14:

    // trace_abort($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume {:print "$at(96,14265,14306)"} true;
    assume {:print "$track_abort(39,4):", $t14} $t14 == $t14;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    goto L12;

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
L13:

    // modifies global<0x1::account::Account>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume {:print "$at(96,14265,14306)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_account_Account';
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t0, $temp_0'$1_account_Account');
    } else {
        $1_account_Account_$memory := $ResourceRemove($1_account_Account_$memory, $t0);
    }

    // assume WellFormed($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume $IsValid'signer'($t12) && $1_signer_is_txn_signer($t12) && $1_signer_is_txn_signer_addr($t12->$addr);

    // assume Eq<num>(Len<u8>($t11), 32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume $IsEqual'num'(LenVec($t11), 32);

    // assume Eq<address>(signer::$address_of($t12), $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume $IsEqual'address'($1_signer_$address_of($t12), $t0);

    // assume exists<0x1::account::Account>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41
    assume $ResourceExists($1_account_Account_$memory, $t0);

    // $t12 := opaque end: account::create_account_unchecked($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41

    // drop($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:282:13+41

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:9+333
    assume {:print "$at(96,13984,14317)"} true;
L2:

    // goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:277:9+333
    assume {:print "$at(96,13984,14317)"} true;
    goto L11;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:280:41+24
    assume {:print "$at(96,14212,14236)"} true;
L7:

    // $t15 := 5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:280:41+24
    assume {:print "$at(96,14212,14236)"} true;
    $t15 := 5;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L12 with $t14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:280:17+49
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(96,14188,14237)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(39,4):", $t14} $t14 == $t14;
        goto L12;
    }

    // trace_abort($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    assume {:print "$at(96,14040,14046)"} true;
    assume {:print "$track_abort(39,4):", $t16} $t16 == $t16;

    // $t14 := move($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    $t14 := $t16;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:278:13+6
    goto L12;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    assume {:print "$at(96,14065,14170)"} true;
L5:

    // $t17 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    assume {:print "$at(96,14065,14170)"} true;
    $t17 := false;
    assume $IsValid'bool'($t17);

    // $t2 := $t17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    $t2 := $t17;

    // trace_local[$t4]($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    assume {:print "$track_local(39,4,2):", $t17} $t17 == $t17;

    // goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+105
    goto L9;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
L3:

    // $t18 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    assume {:print "$at(96,14065,14135)"} true;
    $t18 := false;
    assume $IsValid'bool'($t18);

    // $t1 := $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    $t1 := $t18;

    // trace_local[$t2]($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    assume {:print "$track_local(39,4,1):", $t18} $t18 == $t18;

    // goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:279:17+70
    goto L10;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:284:5+1
    assume {:print "$at(96,14322,14323)"} true;
L11:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:284:5+1
    assume {:print "$at(96,14322,14323)"} true;
    return;

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:284:5+1
L12:

    // abort($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:284:5+1
    assume {:print "$at(96,14322,14323)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun account::create_guid [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1189:5+460
procedure {:inline 1} $1_account_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $Mutation ($1_account_Account);
    var $t4: $1_guid_GUID;
    var $t5: int;
    var $t6: int;
    var $t7: $1_account_Account;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: Vec (int);
    var $t12: $Mutation ($1_account_Account);
    var $t13: $Mutation (int);
    var $t14: $1_guid_GUID;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t0: $signer;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t5, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:640:9+46
    assume {:print "$at(97,32069,32115)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:656:9+39
    assume {:print "$at(97,32702,32741)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // assume Identical($t7, global<0x1::account::Account>($t6)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:657:9+36
    assume {:print "$at(97,32750,32786)"} true;
    assume ($t7 == $ResourceValue($1_account_Account_$memory, $t6));

    // trace_local[account_signer]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1189:5+1
    assume {:print "$at(96,61371,61372)"} true;
    assume {:print "$track_local(39,8,0):", $t0} $t0 == $t0;

    // $t8 := signer::address_of($t0) on_abort goto L8 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1190:20+34
    assume {:print "$at(96,61469,61503)"} true;
    call $t8 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(96,61469,61503)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // trace_local[addr]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1190:20+34
    assume {:print "$track_local(39,8,1):", $t8} $t8 == $t8;

    // trace_local[addr]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:404:16+22
    assume {:print "$at(96,19311,19333)"} true;
    assume {:print "$track_local(39,8,2):", $t8} $t8 == $t8;

    // $t10 := opaque begin: features::is_default_account_resource_enabled() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume {:print "$at(96,19379,19426)"} true;

    // assume WellFormed($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume $IsValid'bool'($t10);

    // assume Eq<bool>($t10, features::spec_is_enabled(91)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume $IsEqual'bool'($t10, $1_features_spec_is_enabled(91));

    // $t10 := opaque end: features::is_default_account_resource_enabled() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47

    // if ($t10) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:9+214
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:406:13+38
    assume {:print "$at(96,19442,19480)"} true;
L1:

    // assume Identical($t11, bcs::$to_bytes<address>($t8)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:122:9+56
    assume {:print "$at(97,7171,7227)"} true;
    assume ($t11 == $1_bcs_$to_bytes'address'($t8));

    // account::create_account_if_does_not_exist($t8) on_abort goto L8 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:406:13+38
    assume {:print "$at(96,19442,19480)"} true;
    call $1_account_create_account_if_does_not_exist($t8);
    if ($abort_flag) {
        assume {:print "$at(96,19442,19480)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1192:23+18
    assume {:print "$at(96,61565,61583)"} true;
L6:

    // $t12 := borrow_global<0x1::account::Account>($t8) on_abort goto L8 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1192:23+18
    assume {:print "$at(96,61565,61583)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t8));
    }
    if ($abort_flag) {
        assume {:print "$at(96,61565,61583)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // trace_local[account]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1192:23+18
    $temp_0'$1_account_Account' := $Dereference($t12);
    assume {:print "$track_local(39,8,3):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t13 := borrow_field<0x1::account::Account>.guid_creation_num($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1193:39+30
    assume {:print "$at(96,61623,61653)"} true;
    $t13 := $ChildMutation($t12, 2, $Dereference($t12)->$guid_creation_num);

    // $t14 := guid::create($t8, $t13) on_abort goto L8 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1193:20+50
    call $t14,$t13 := $1_guid_create($t8, $t13);
    if ($abort_flag) {
        assume {:print "$at(96,61604,61654)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // write_back[Reference($t12).guid_creation_num (u64)]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1193:20+50
    $t12 := $UpdateMutation($t12, $Update'$1_account_Account'_guid_creation_num($Dereference($t12), $Dereference($t13)));

    // trace_local[guid]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1193:20+50
    assume {:print "$track_local(39,8,4):", $t14} $t14 == $t14;

    // $t15 := get_field<0x1::account::Account>.guid_creation_num($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1195:13+25
    assume {:print "$at(96,61685,61710)"} true;
    $t15 := $Dereference($t12)->$guid_creation_num;

    // pack_ref_deep($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1195:13+25

    // write_back[0x1::account::Account@]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1195:13+25
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // $t16 := 1125899906842624 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1195:41+21
    $t16 := 1125899906842624;
    assume $IsValid'u64'($t16);

    // $t17 := <($t15, $t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1195:13+49
    call $t17 := $Lt($t15, $t16);

    // if ($t17) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1194:9+6
    assume {:print "$at(96,61664,61670)"} true;
    if ($t17) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1198:9+4
    assume {:print "$at(96,61821,61825)"} true;
L3:

    // trace_return[0]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1189:82+383
    assume {:print "$at(96,61448,61831)"} true;
    assume {:print "$track_return(39,8,0):", $t14} $t14 == $t14;

    // goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1189:82+383
    goto L7;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1196:33+31
    assume {:print "$at(96,61768,61799)"} true;
L2:

    // $t18 := 20 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1196:33+31
    assume {:print "$at(96,61768,61799)"} true;
    $t18 := 20;
    assume $IsValid'u64'($t18);

    // $t19 := error::out_of_range($t18) on_abort goto L8 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1196:13+52
    call $t19 := $1_error_out_of_range($t18);
    if ($abort_flag) {
        assume {:print "$at(96,61748,61800)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // trace_abort($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1194:9+6
    assume {:print "$at(96,61664,61670)"} true;
    assume {:print "$track_abort(39,8):", $t19} $t19 == $t19;

    // $t9 := move($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1194:9+6
    $t9 := $t19;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1194:9+6
    goto L8;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume {:print "$at(96,19519,19534)"} true;
L0:

    // $t20 := opaque begin: account::exists_at($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume {:print "$at(96,19519,19534)"} true;

    // assume WellFormed($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, account::spec_exists_at($t8)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume $IsEqual'bool'($t20, $1_account_spec_exists_at($1_account_Account_$memory, $t8));

    // $t20 := opaque end: account::exists_at($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15

    // if ($t20) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    if ($t20) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
L5:

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    assume {:print "$at(96,19511,19517)"} true;
    goto L6;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:55+23
L4:

    // $t21 := 2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:55+23
    assume {:print "$at(96,19553,19576)"} true;
    $t21 := 2;
    assume $IsValid'u64'($t21);

    // $t22 := error::not_found($t21) on_abort goto L8 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:38+41
    call $t22 := $1_error_not_found($t21);
    if ($abort_flag) {
        assume {:print "$at(96,19536,19577)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(39,8):", $t9} $t9 == $t9;
        goto L8;
    }

    // trace_abort($t22) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    assume {:print "$at(96,19511,19517)"} true;
    assume {:print "$track_abort(39,8):", $t22} $t22 == $t22;

    // $t9 := move($t22) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    $t9 := $t22;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    goto L8;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1199:5+1
    assume {:print "$at(96,61830,61831)"} true;
L7:

    // return $t14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1199:5+1
    assume {:print "$at(96,61830,61831)"} true;
    $ret0 := $t14;
    return;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1199:5+1
L8:

    // abort($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1199:5+1
    assume {:print "$at(96,61830,61831)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun account::register_coin<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1213:5+714
procedure {:inline 1} $1_account_register_coin'#0'(_$t0: int) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_type_info_TypeInfo;
    var $t5: $1_account_CoinRegister;
    var $t6: bool;
    var $t7: Vec (int);
    var $t8: $Mutation ($1_account_Account);
    var $t9: $Mutation ($1_event_EventHandle'$1_account_CoinRegisterEvent');
    var $t10: $1_type_info_TypeInfo;
    var $t11: $1_account_CoinRegisterEvent;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t0: int;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1213:5+1
    assume {:print "$at(96,62412,62413)"} true;
    assume {:print "$track_local(39,27,0):", $t0} $t0 == $t0;

    // $t2 := features::module_event_migration_enabled() on_abort goto L9 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1214:13+47
    assume {:print "$at(96,62509,62556)"} true;
    call $t2 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(96,62509,62556)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // if ($t2) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1214:9+615
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1217:30+12
    assume {:print "$at(96,62645,62657)"} true;
L1:

    // $t4 := type_info::type_of<#0>() on_abort goto L9 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1218:32+30
    assume {:print "$at(96,62690,62720)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t4 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(96,62690,62720)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t5 := pack 0x1::account::CoinRegister($t0, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1216:17+138
    assume {:print "$at(96,62601,62739)"} true;
    $t5 := $1_account_CoinRegister($t0, $t4);

    // opaque begin: event::emit<0x1::account::CoinRegister>($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1215:13+182
    assume {:print "$at(96,62572,62754)"} true;

    // opaque end: event::emit<0x1::account::CoinRegister>($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1215:13+182

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1214:9+615
    assume {:print "$at(96,62505,63120)"} true;
L4:

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1214:9+615
    assume {:print "$at(96,62505,63120)"} true;
    goto L8;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:404:16+22
    assume {:print "$at(96,19311,19333)"} true;
L0:

    // trace_local[$t3]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:404:16+22
    assume {:print "$at(96,19311,19333)"} true;
    assume {:print "$track_local(39,27,1):", $t0} $t0 == $t0;

    // $t6 := opaque begin: features::is_default_account_resource_enabled() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume {:print "$at(96,19379,19426)"} true;

    // assume WellFormed($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, features::spec_is_enabled(91)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47
    assume $IsEqual'bool'($t6, $1_features_spec_is_enabled(91));

    // $t6 := opaque end: features::is_default_account_resource_enabled() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:13+47

    // if ($t6) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:405:9+214
    if ($t6) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:406:13+38
    assume {:print "$at(96,19442,19480)"} true;
L3:

    // assume Identical($t7, bcs::$to_bytes<address>($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:122:9+56
    assume {:print "$at(97,7171,7227)"} true;
    assume ($t7 == $1_bcs_$to_bytes'address'($t0));

    // account::create_account_if_does_not_exist($t0) on_abort goto L9 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:406:13+38
    assume {:print "$at(96,19442,19480)"} true;
    call $1_account_create_account_if_does_not_exist($t0);
    if ($abort_flag) {
        assume {:print "$at(96,19442,19480)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1223:27+26
    assume {:print "$at(96,62849,62875)"} true;
L7:

    // $t8 := borrow_global<0x1::account::Account>($t0) on_abort goto L9 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1223:27+26
    assume {:print "$at(96,62849,62875)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(96,62849,62875)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t9 := borrow_field<0x1::account::Account>.coin_register_events($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1225:17+33
    assume {:print "$at(96,62943,62976)"} true;
    $t9 := $ChildMutation($t8, 3, $Dereference($t8)->$coin_register_events);

    // $t10 := type_info::type_of<#0>() on_abort goto L9 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1227:32+30
    assume {:print "$at(96,63045,63075)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t10 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(96,63045,63075)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // $t11 := pack 0x1::account::CoinRegisterEvent($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1226:17+100
    assume {:print "$at(96,62994,63094)"} true;
    $t11 := $1_account_CoinRegisterEvent($t10);

    // opaque begin: event::emit_event<0x1::account::CoinRegisterEvent>($t9, $t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1224:13+220
    assume {:print "$at(96,62889,63109)"} true;

    // opaque end: event::emit_event<0x1::account::CoinRegisterEvent>($t9, $t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1224:13+220

    // write_back[Reference($t8).coin_register_events (0x1::event::EventHandle<0x1::account::CoinRegisterEvent>)]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1224:13+220
    $t8 := $UpdateMutation($t8, $Update'$1_account_Account'_coin_register_events($Dereference($t8), $Dereference($t9)));

    // pack_ref_deep($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1224:13+220

    // write_back[0x1::account::Account@]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1224:13+220
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1224:13+220
    goto L4;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume {:print "$at(96,19519,19534)"} true;
L2:

    // $t12 := opaque begin: account::exists_at($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume {:print "$at(96,19519,19534)"} true;

    // assume WellFormed($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume $IsValid'bool'($t12);

    // assume Eq<bool>($t12, account::spec_exists_at($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15
    assume $IsEqual'bool'($t12, $1_account_spec_exists_at($1_account_Account_$memory, $t0));

    // $t12 := opaque end: account::exists_at($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:21+15

    // if ($t12) goto L6 else goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    if ($t12) { goto L6; } else { goto L5; }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
L6:

    // goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    assume {:print "$at(96,19511,19517)"} true;
    goto L7;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:55+23
L5:

    // $t13 := 2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:55+23
    assume {:print "$at(96,19553,19576)"} true;
    $t13 := 2;
    assume $IsValid'u64'($t13);

    // $t14 := error::not_found($t13) on_abort goto L9 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:38+41
    call $t14 := $1_error_not_found($t13);
    if ($abort_flag) {
        assume {:print "$at(96,19536,19577)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(39,27):", $t3} $t3 == $t3;
        goto L9;
    }

    // trace_abort($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    assume {:print "$at(96,19511,19517)"} true;
    assume {:print "$track_abort(39,27):", $t14} $t14 == $t14;

    // $t3 := move($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    $t3 := $t14;

    // goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:408:13+6
    goto L9;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1231:5+1
    assume {:print "$at(96,63125,63126)"} true;
L8:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1231:5+1
    assume {:print "$at(96,63125,63126)"} true;
    return;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1231:5+1
L9:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.move:1231:5+1
    assume {:print "$at(96,63125,63126)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:60:10+50
function  $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:60:10+50
function  $1_object_spec_exists_at'$1_fungible_asset_Metadata'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_fungible_asset_Metadata'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:60:10+50
function  $1_object_spec_exists_at'$1_coin_PairedCoinType'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_coin_PairedCoinType'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:567:10+75
function  $1_object_spec_create_object_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_object_spec_create_object_address(source, seed);
$IsValid'address'($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:569:10+92
function  $1_object_spec_create_user_derived_object_address(source: int, derive_from: int): int;
axiom (forall source: int, derive_from: int ::
(var $$res := $1_object_spec_create_user_derived_object_address(source, derive_from);
$IsValid'address'($$res)));

// struct object::ConstructorRef at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:136:5+167
datatype $1_object_ConstructorRef {
    $1_object_ConstructorRef($self: int, $can_delete: bool)
}
function {:inline} $Update'$1_object_ConstructorRef'_self(s: $1_object_ConstructorRef, x: int): $1_object_ConstructorRef {
    $1_object_ConstructorRef(x, s->$can_delete)
}
function {:inline} $Update'$1_object_ConstructorRef'_can_delete(s: $1_object_ConstructorRef, x: bool): $1_object_ConstructorRef {
    $1_object_ConstructorRef(s->$self, x)
}
function $IsValid'$1_object_ConstructorRef'(s: $1_object_ConstructorRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'bool'(s->$can_delete)
}
function {:inline} $IsEqual'$1_object_ConstructorRef'(s1: $1_object_ConstructorRef, s2: $1_object_ConstructorRef): bool {
    s1 == s2
}

// struct object::DeriveRef at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:165:5+63
datatype $1_object_DeriveRef {
    $1_object_DeriveRef($self: int)
}
function {:inline} $Update'$1_object_DeriveRef'_self(s: $1_object_DeriveRef, x: int): $1_object_DeriveRef {
    $1_object_DeriveRef(x)
}
function $IsValid'$1_object_DeriveRef'(s: $1_object_DeriveRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_DeriveRef'(s1: $1_object_DeriveRef, s2: $1_object_DeriveRef): bool {
    s1 == s2
}

// struct object::Object<0x1::fungible_asset::FungibleStore> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:131:5+78
datatype $1_object_Object'$1_fungible_asset_FungibleStore' {
    $1_object_Object'$1_fungible_asset_FungibleStore'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_fungible_asset_FungibleStore''_inner(s: $1_object_Object'$1_fungible_asset_FungibleStore', x: int): $1_object_Object'$1_fungible_asset_FungibleStore' {
    $1_object_Object'$1_fungible_asset_FungibleStore'(x)
}
function $IsValid'$1_object_Object'$1_fungible_asset_FungibleStore''(s: $1_object_Object'$1_fungible_asset_FungibleStore'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_fungible_asset_FungibleStore''(s1: $1_object_Object'$1_fungible_asset_FungibleStore', s2: $1_object_Object'$1_fungible_asset_FungibleStore'): bool {
    s1 == s2
}

// struct object::Object<0x1::fungible_asset::Metadata> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:131:5+78
datatype $1_object_Object'$1_fungible_asset_Metadata' {
    $1_object_Object'$1_fungible_asset_Metadata'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_fungible_asset_Metadata''_inner(s: $1_object_Object'$1_fungible_asset_Metadata', x: int): $1_object_Object'$1_fungible_asset_Metadata' {
    $1_object_Object'$1_fungible_asset_Metadata'(x)
}
function $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(s1: $1_object_Object'$1_fungible_asset_Metadata', s2: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    s1 == s2
}

// struct object::ObjectCore at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:100:5+551
datatype $1_object_ObjectCore {
    $1_object_ObjectCore($guid_creation_num: int, $owner: int, $allow_ungated_transfer: bool, $transfer_events: $1_event_EventHandle'$1_object_TransferEvent')
}
function {:inline} $Update'$1_object_ObjectCore'_guid_creation_num(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(x, s->$owner, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_owner(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, x, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_allow_ungated_transfer(s: $1_object_ObjectCore, x: bool): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, x, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_transfer_events(s: $1_object_ObjectCore, x: $1_event_EventHandle'$1_object_TransferEvent'): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, s->$allow_ungated_transfer, x)
}
function $IsValid'$1_object_ObjectCore'(s: $1_object_ObjectCore): bool {
    $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'address'(s->$owner)
      && $IsValid'bool'(s->$allow_ungated_transfer)
      && $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s->$transfer_events)
}
function {:inline} $IsEqual'$1_object_ObjectCore'(s1: $1_object_ObjectCore, s2: $1_object_ObjectCore): bool {
    s1 == s2
}
var $1_object_ObjectCore_$memory: $Memory $1_object_ObjectCore;

// struct object::TombStone at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:114:5+170
datatype $1_object_TombStone {
    $1_object_TombStone($original_owner: int)
}
function {:inline} $Update'$1_object_TombStone'_original_owner(s: $1_object_TombStone, x: int): $1_object_TombStone {
    $1_object_TombStone(x)
}
function $IsValid'$1_object_TombStone'(s: $1_object_TombStone): bool {
    $IsValid'address'(s->$original_owner)
}
function {:inline} $IsEqual'$1_object_TombStone'(s1: $1_object_TombStone, s2: $1_object_TombStone): bool {
    s1 == s2
}
var $1_object_TombStone_$memory: $Memory $1_object_TombStone;

// struct object::Transfer at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:183:5+108
datatype $1_object_Transfer {
    $1_object_Transfer($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_Transfer'_object(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_from(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_to(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, s->$from, x)
}
function $IsValid'$1_object_Transfer'(s: $1_object_Transfer): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_Transfer'(s1: $1_object_Transfer, s2: $1_object_Transfer): bool {
    s1 == s2
}

// struct object::TransferEvent at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:175:5+113
datatype $1_object_TransferEvent {
    $1_object_TransferEvent($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_TransferEvent'_object(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_from(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_to(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, s->$from, x)
}
function $IsValid'$1_object_TransferEvent'(s: $1_object_TransferEvent): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_TransferEvent'(s1: $1_object_TransferEvent, s2: $1_object_TransferEvent): bool {
    s1 == s2
}

// struct object::TransferPermission at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:170:5+80
datatype $1_object_TransferPermission {
    $1_object_TransferPermission($object: int)
}
function {:inline} $Update'$1_object_TransferPermission'_object(s: $1_object_TransferPermission, x: int): $1_object_TransferPermission {
    $1_object_TransferPermission(x)
}
function $IsValid'$1_object_TransferPermission'(s: $1_object_TransferPermission): bool {
    $IsValid'address'(s->$object)
}
function {:inline} $IsEqual'$1_object_TransferPermission'(s1: $1_object_TransferPermission, s2: $1_object_TransferPermission): bool {
    s1 == s2
}

// struct object::TransferRef at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:153:5+65
datatype $1_object_TransferRef {
    $1_object_TransferRef($self: int)
}
function {:inline} $Update'$1_object_TransferRef'_self(s: $1_object_TransferRef, x: int): $1_object_TransferRef {
    $1_object_TransferRef(x)
}
function $IsValid'$1_object_TransferRef'(s: $1_object_TransferRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_TransferRef'(s1: $1_object_TransferRef, s2: $1_object_TransferRef): bool {
    s1 == s2
}

// struct object::Untransferable at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:121:5+32
datatype $1_object_Untransferable {
    $1_object_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_object_Untransferable'_dummy_field(s: $1_object_Untransferable, x: bool): $1_object_Untransferable {
    $1_object_Untransferable(x)
}
function $IsValid'$1_object_Untransferable'(s: $1_object_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_object_Untransferable'(s1: $1_object_Untransferable, s2: $1_object_Untransferable): bool {
    s1 == s2
}
var $1_object_Untransferable_$memory: $Memory $1_object_Untransferable;

// fun object::address_to_object<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:5+278
procedure {:inline 1} $1_object_address_to_object'$1_fungible_asset_FungibleStore'(_$t0: int) returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:5+1
    assume {:print "$at(185,8470,8471)"} true;
    assume {:print "$track_local(40,6,0):", $t0} $t0 == $t0;

    // $t1 := exists<0x1::object::ObjectCore>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:17+26
    assume {:print "$at(185,8553,8579)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
L1:

    // $t2 := opaque begin: object::exists_at<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;

    // $t3 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    havoc $t3;

    // if ($t3) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    if ($t3) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
L7:

    // trace_abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
    assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    goto L5;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
L6:

    // assume WellFormed($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, object::spec_exists_at<#0>($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume $IsEqual'bool'($t2, $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'($t0));

    // $t2 := opaque end: object::exists_at<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20

    // if ($t2) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:203:9+27
    assume {:print "$at(185,8715,8742)"} true;
L3:

    // $t5 := pack 0x1::object::Object<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:203:9+27
    assume {:print "$at(185,8715,8742)"} true;
    $t5 := $1_object_Object'$1_fungible_asset_FungibleStore'($t0);

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:70+213
    assume {:print "$at(185,8535,8748)"} true;
    assume {:print "$track_return(40,6,0):", $t5} $t5 == $t5;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:70+213
    goto L4;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:56+24
    assume {:print "$at(185,8679,8703)"} true;
L2:

    // $t6 := 7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:56+24
    assume {:print "$at(185,8679,8703)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(185,8662,8704)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    assume {:print "$at(185,8632,8638)"} true;
    assume {:print "$track_abort(40,6):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    $t4 := $t7;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    goto L5;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:62+22
    assume {:print "$at(185,8598,8620)"} true;
L0:

    // $t8 := 2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:62+22
    assume {:print "$at(185,8598,8620)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:45+40
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(185,8581,8621)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    assume {:print "$at(185,8545,8551)"} true;
    assume {:print "$track_abort(40,6):", $t9} $t9 == $t9;

    // $t4 := move($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    $t4 := $t9;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    goto L5;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
L4:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
    $ret0 := $t5;
    return;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
L5:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:5+278
procedure {:inline 1} $1_object_address_to_object'$1_fungible_asset_Metadata'(_$t0: int) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_Metadata';
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:5+1
    assume {:print "$at(185,8470,8471)"} true;
    assume {:print "$track_local(40,6,0):", $t0} $t0 == $t0;

    // $t1 := exists<0x1::object::ObjectCore>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:17+26
    assume {:print "$at(185,8553,8579)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
L1:

    // $t2 := opaque begin: object::exists_at<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;

    // $t3 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    havoc $t3;

    // if ($t3) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    if ($t3) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
L7:

    // trace_abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
    assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    goto L5;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
L6:

    // assume WellFormed($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume {:print "$at(185,8640,8660)"} true;
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, object::spec_exists_at<#0>($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20
    assume $IsEqual'bool'($t2, $1_object_spec_exists_at'$1_fungible_asset_Metadata'($t0));

    // $t2 := opaque end: object::exists_at<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:17+20

    // if ($t2) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:203:9+27
    assume {:print "$at(185,8715,8742)"} true;
L3:

    // $t5 := pack 0x1::object::Object<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:203:9+27
    assume {:print "$at(185,8715,8742)"} true;
    $t5 := $1_object_Object'$1_fungible_asset_Metadata'($t0);

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:70+213
    assume {:print "$at(185,8535,8748)"} true;
    assume {:print "$track_return(40,6,0):", $t5} $t5 == $t5;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:200:70+213
    goto L4;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:56+24
    assume {:print "$at(185,8679,8703)"} true;
L2:

    // $t6 := 7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:56+24
    assume {:print "$at(185,8679,8703)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(185,8662,8704)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    assume {:print "$at(185,8632,8638)"} true;
    assume {:print "$track_abort(40,6):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    $t4 := $t7;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:202:9+6
    goto L5;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:62+22
    assume {:print "$at(185,8598,8620)"} true;
L0:

    // $t8 := 2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:62+22
    assume {:print "$at(185,8598,8620)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:45+40
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(185,8581,8621)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,6):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    assume {:print "$at(185,8545,8551)"} true;
    assume {:print "$track_abort(40,6):", $t9} $t9 == $t9;

    // $t4 := move($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    $t4 := $t9;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:201:9+6
    goto L5;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
L4:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
    $ret0 := $t5;
    return;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
L5:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:204:5+1
    assume {:print "$at(185,8747,8748)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::can_generate_delete_ref [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:390:5+93
procedure {:inline 1} $1_object_can_generate_delete_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:390:5+1
    assume {:print "$at(185,17126,17127)"} true;
    assume {:print "$track_local(40,9,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.can_delete($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:391:9+14
    assume {:print "$at(185,17199,17213)"} true;
    $t1 := $t0->$can_delete;

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:391:9+14
    assume {:print "$track_return(40,9,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:392:5+1
    assume {:print "$at(185,17218,17219)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:392:5+1
    assume {:print "$at(185,17218,17219)"} true;
    $ret0 := $t1;
    return;

}

// fun object::convert<0x1::fungible_asset::Metadata, 0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:254:5+115
procedure {:inline 1} $1_object_convert'$1_fungible_asset_Metadata_$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:254:5+1
    assume {:print "$at(185,10859,10860)"} true;
    assume {:print "$track_local(40,10,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:255:30+12
    assume {:print "$at(185,10955,10967)"} true;
    $t1 := $t0->$inner;

    // $t2 := object::address_to_object<#1>($t1) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:255:9+34
    call $t2 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(185,10934,10968)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(40,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:255:9+34
    assume {:print "$track_return(40,10,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:256:5+1
    assume {:print "$at(185,10973,10974)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:256:5+1
    assume {:print "$at(185,10973,10974)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:256:5+1
L2:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:256:5+1
    assume {:print "$at(185,10973,10974)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::create_named_object [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:260:5+284
procedure {:inline 1} $1_object_create_named_object(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: bool;
    var $t11: $1_object_ConstructorRef;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:162:9+50
    assume {:print "$at(186,6936,6986)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, object::spec_create_object_address($t4, $t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:163:9+65
    assume {:print "$at(186,6995,7060)"} true;
    assume ($t5 == $1_object_spec_create_object_address($t4, $t1));

    // trace_local[creator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:260:5+1
    assume {:print "$at(185,11180,11181)"} true;
    assume {:print "$track_local(40,12,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:260:5+1
    assume {:print "$track_local(40,12,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L2 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:261:31+27
    assume {:print "$at(185,11295,11322)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(185,11295,11322)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[creator_address]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:261:31+27
    assume {:print "$track_local(40,12,2):", $t6} $t6 == $t6;

    // $t8 := opaque begin: object::create_object_address($t6, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume {:print "$at(185,11347,11392)"} true;

    // $t9 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    havoc $t9;

    // if ($t9) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    if ($t9) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
L4:

    // trace_abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume {:print "$at(185,11347,11392)"} true;
    assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
L3:

    // assume WellFormed($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume {:print "$at(185,11347,11392)"} true;
    assume $IsValid'address'($t8);

    // assume Eq<address>($t8, object::spec_create_object_address($t6, $t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume $IsEqual'address'($t8, $1_object_spec_create_object_address($t6, $t1));

    // $t8 := opaque end: object::create_object_address($t6, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45

    // trace_local[obj_addr]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:262:24+45
    assume {:print "$track_local(40,12,3):", $t8} $t8 == $t8;

    // $t10 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:263:59+5
    assume {:print "$at(185,11452,11457)"} true;
    $t10 := false;
    assume $IsValid'bool'($t10);

    // $t11 := object::create_object_internal($t6, $t8, $t10) on_abort goto L2 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:263:9+56
    call $t11 := $1_object_create_object_internal($t6, $t8, $t10);
    if ($abort_flag) {
        assume {:print "$at(185,11402,11458)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,12):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:263:9+56
    assume {:print "$track_return(40,12,0):", $t11} $t11 == $t11;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:264:5+1
    assume {:print "$at(185,11463,11464)"} true;
L1:

    // return $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:264:5+1
    assume {:print "$at(185,11463,11464)"} true;
    $ret0 := $t11;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:264:5+1
L2:

    // abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:264:5+1
    assume {:print "$at(185,11463,11464)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::create_object_internal [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:327:5+766
procedure {:inline 1} $1_object_create_object_internal(_$t0: int, _$t1: int, _$t2: bool) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t3: $signer;
    var $t4: int;
    var $t5: $1_guid_GUID;
    var $t6: bool;
    var $t7: $signer;
    var $t8: int;
    var $t9: $Mutation (int);
    var $t10: $1_guid_GUID;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: $1_event_EventHandle'$1_object_TransferEvent';
    var $t15: $1_object_ObjectCore;
    var $t16: $1_object_ConstructorRef;
    var $t17: int;
    var $t18: int;
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[creator_address]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:327:5+1
    assume {:print "$at(185,14718,14719)"} true;
    assume {:print "$track_local(40,18,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:327:5+1
    assume {:print "$track_local(40,18,1):", $t1} $t1 == $t1;

    // trace_local[can_delete]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:327:5+1
    assume {:print "$track_local(40,18,2):", $t2} $t2 == $t2;

    // $t6 := exists<0x1::object::ObjectCore>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:18+26
    assume {:print "$at(185,14872,14898)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t6) goto L0 else goto L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:17+27
    if ($t6) { goto L0; } else { goto L1; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume {:print "$at(185,14969,14990)"} true;
L1:

    // $t7 := opaque begin: create_signer::create_signer($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume {:print "$at(185,14969,14990)"} true;

    // assume WellFormed($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume $IsValid'signer'($t7) && $1_signer_is_txn_signer($t7) && $1_signer_is_txn_signer_addr($t7->$addr);

    // assume Eq<address>(signer::$address_of($t7), $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume $IsEqual'address'($1_signer_$address_of($t7), $t1);

    // assume Eq<signer>($t7, create_signer::spec_create_signer($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume $IsEqual'signer'($t7, $1_create_signer_spec_create_signer($t1));

    // $t7 := opaque end: create_signer::create_signer($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21

    // trace_local[object_signer]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:334:29+21
    assume {:print "$track_local(40,18,3):", $t7} $t7 == $t7;

    // $t8 := 1125899906842624 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:335:33+22
    assume {:print "$at(185,15024,15046)"} true;
    $t8 := 1125899906842624;
    assume $IsValid'u64'($t8);

    // $t4 := $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:335:33+22
    $t4 := $t8;

    // trace_local[guid_creation_num]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:335:33+22
    assume {:print "$track_local(40,18,4):", $t4} $t4 == $t4;

    // $t9 := borrow_local($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:57+22
    assume {:print "$at(185,15104,15126)"} true;
    $t9 := $Mutation($Local(4), EmptyVec(), $t4);

    // $t10 := guid::create($t1, $t9) on_abort goto L3 with $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:36+44
    call $t10,$t9 := $1_guid_create($t1, $t9);
    if ($abort_flag) {
        assume {:print "$at(185,15083,15127)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // write_back[LocalRoot($t4)@]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:36+44
    $t4 := $Dereference($t9);

    // trace_local[guid_creation_num]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:36+44
    assume {:print "$track_local(40,18,4):", $t4} $t4 == $t4;

    // trace_local[transfer_events_guid]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:336:36+44
    assume {:print "$track_local(40,18,5):", $t10} $t10 == $t10;

    // $t12 := move($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:341:17+17
    assume {:print "$at(185,15216,15233)"} true;
    $t12 := $t4;

    // $t13 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:343:41+4
    assume {:print "$at(185,15315,15319)"} true;
    $t13 := true;
    assume $IsValid'bool'($t13);

    // $t14 := event::new_event_handle<0x1::object::TransferEvent>($t10) on_abort goto L3 with $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:344:34+45
    assume {:print "$at(185,15354,15399)"} true;
    call $t14 := $1_event_new_event_handle'$1_object_TransferEvent'($t10);
    if ($abort_flag) {
        assume {:print "$at(185,15354,15399)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t15 := pack 0x1::object::ObjectCore($t12, $t0, $t13, $t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:340:13+227
    assume {:print "$at(185,15187,15414)"} true;
    $t15 := $1_object_ObjectCore($t12, $t0, $t13, $t14);

    // move_to<0x1::object::ObjectCore>($t15, $t7) on_abort goto L3 with $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:338:9+287
    assume {:print "$at(185,15138,15425)"} true;
    if ($ResourceExists($1_object_ObjectCore_$memory, $t7->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $t7->$addr, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(185,15138,15425)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t16 := pack 0x1::object::ConstructorRef($t1, $t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:347:9+43
    assume {:print "$at(185,15435,15478)"} true;
    $t16 := $1_object_ConstructorRef($t1, $t2);

    // trace_return[0]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:331:23+631
    assume {:print "$at(185,14853,15484)"} true;
    assume {:print "$track_return(40,18,0):", $t16} $t16 == $t16;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:331:23+631
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:68+14
    assume {:print "$at(185,14922,14936)"} true;
L0:

    // $t17 := 1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:68+14
    assume {:print "$at(185,14922,14936)"} true;
    $t17 := 1;
    assume $IsValid'u64'($t17);

    // $t18 := error::already_exists($t17) on_abort goto L3 with $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:46+37
    call $t18 := $1_error_already_exists($t17);
    if ($abort_flag) {
        assume {:print "$at(185,14900,14937)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(40,18):", $t11} $t11 == $t11;
        goto L3;
    }

    // trace_abort($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:9+6
    assume {:print "$at(185,14863,14869)"} true;
    assume {:print "$track_abort(40,18):", $t18} $t18 == $t18;

    // $t11 := move($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:9+6
    $t11 := $t18;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:332:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(185,15483,15484)"} true;
L2:

    // return $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(185,15483,15484)"} true;
    $ret0 := $t16;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:348:5+1
L3:

    // abort($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(185,15483,15484)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun object::create_sticky_object_at_address [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:289:5+215
procedure {:inline 1} $1_object_create_sticky_object_at_address(_$t0: int, _$t1: int) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_object_ConstructorRef;
    var $t4: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_address]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:289:5+1
    assume {:print "$at(185,12876,12877)"} true;
    assume {:print "$track_local(40,20,0):", $t0} $t0 == $t0;

    // trace_local[object_address]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:289:5+1
    assume {:print "$track_local(40,20,1):", $t1} $t1 == $t1;

    // $t2 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:293:63+5
    assume {:print "$at(185,13079,13084)"} true;
    $t2 := false;
    assume $IsValid'bool'($t2);

    // $t3 := object::create_object_internal($t0, $t1, $t2) on_abort goto L2 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:293:9+60
    call $t3 := $1_object_create_object_internal($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(185,13025,13085)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,20):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:293:9+60
    assume {:print "$track_return(40,20,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:294:5+1
    assume {:print "$at(185,13090,13091)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:294:5+1
    assume {:print "$at(185,13090,13091)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:294:5+1
L2:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:294:5+1
    assume {:print "$at(185,13090,13091)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::object_address<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:249:5+91
procedure {:inline 1} $1_object_object_address'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:249:5+1
    assume {:print "$at(185,10722,10723)"} true;
    assume {:print "$track_local(40,21,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:250:9+12
    assume {:print "$at(185,10795,10807)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:250:9+12
    assume {:print "$track_return(40,21,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:251:5+1
    assume {:print "$at(185,10812,10813)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:251:5+1
    assume {:print "$at(185,10812,10813)"} true;
    $ret0 := $t1;
    return;

}

// fun object::object_address<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:249:5+91
procedure {:inline 1} $1_object_object_address'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:249:5+1
    assume {:print "$at(185,10722,10723)"} true;
    assume {:print "$track_local(40,21,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:250:9+12
    assume {:print "$at(185,10795,10807)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:250:9+12
    assume {:print "$track_return(40,21,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:251:5+1
    assume {:print "$at(185,10812,10813)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:251:5+1
    assume {:print "$at(185,10812,10813)"} true;
    $ret0 := $t1;
    return;

}

// fun object::create_user_derived_object [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:268:5+277
procedure {:inline 1} $1_object_create_user_derived_object(_$t0: int, _$t1: $1_object_DeriveRef) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: bool;
    var $t9: $1_object_ConstructorRef;
    var $t0: int;
    var $t1: $1_object_DeriveRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, object::spec_create_user_derived_object_address($t0, select object::DeriveRef.self<0x1::object::DeriveRef>($t1))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:185:9+89
    assume {:print "$at(186,7868,7957)"} true;
    assume ($t3 == $1_object_spec_create_user_derived_object_address($t0, $t1->$self));

    // trace_local[creator_address]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:268:5+1
    assume {:print "$at(185,11650,11651)"} true;
    assume {:print "$track_local(40,22,0):", $t0} $t0 == $t0;

    // trace_local[derive_ref]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:268:5+1
    assume {:print "$track_local(40,22,1):", $t1} $t1 == $t1;

    // $t4 := get_field<0x1::object::DeriveRef>.self($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:76+15
    assume {:print "$at(185,11839,11854)"} true;
    $t4 := $t1->$self;

    // $t5 := opaque begin: object::create_user_derived_object_address($t0, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68

    // $t6 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
    havoc $t6;

    // if ($t6) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
L4:

    // trace_abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
    assume {:print "$at(185,11787,11855)"} true;
    assume {:print "$track_abort(40,22):", $t7} $t7 == $t7;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
L3:

    // assume WellFormed($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
    assume {:print "$at(185,11787,11855)"} true;
    assume $IsValid'address'($t5);

    // assume Eq<address>($t5, object::spec_create_user_derived_object_address($t0, $t4)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
    assume $IsEqual'address'($t5, $1_object_spec_create_user_derived_object_address($t0, $t4));

    // $t5 := opaque end: object::create_user_derived_object_address($t0, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68

    // trace_local[$t4]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:269:24+68
    assume {:print "$track_local(40,22,2):", $t5} $t5 == $t5;

    // $t8 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:270:59+5
    assume {:print "$at(185,11915,11920)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t9 := object::create_object_internal($t0, $t5, $t8) on_abort goto L2 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:270:9+56
    call $t9 := $1_object_create_object_internal($t0, $t5, $t8);
    if ($abort_flag) {
        assume {:print "$at(185,11865,11921)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,22):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:270:9+56
    assume {:print "$track_return(40,22,0):", $t9} $t9 == $t9;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:271:5+1
    assume {:print "$at(185,11926,11927)"} true;
L1:

    // return $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:271:5+1
    assume {:print "$at(185,11926,11927)"} true;
    $ret0 := $t9;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:271:5+1
L2:

    // abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:271:5+1
    assume {:print "$at(185,11926,11927)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::disable_ungated_transfer [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:454:5+191
procedure {:inline 1} $1_object_disable_ungated_transfer(_$t0: $1_object_TransferRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: int;
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: bool;
    var $t6: $Mutation (bool);
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:454:5+1
    assume {:print "$at(185,19153,19154)"} true;
    assume {:print "$track_local(40,26,0):", $t0} $t0 == $t0;

    // $t2 := get_field<0x1::object::TransferRef>.self($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:455:52+8
    assume {:print "$at(185,19281,19289)"} true;
    $t2 := $t0->$self;

    // $t3 := borrow_global<0x1::object::ObjectCore>($t2) on_abort goto L2 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:455:22+39
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t2));
    }
    if ($abort_flag) {
        assume {:print "$at(185,19251,19290)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(40,26):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:455:22+39
    $temp_0'$1_object_ObjectCore' := $Dereference($t3);
    assume {:print "$track_local(40,26,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t5 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:41+5
    assume {:print "$at(185,19332,19337)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // $t6 := borrow_field<0x1::object::ObjectCore>.allow_ungated_transfer($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:9+29
    $t6 := $ChildMutation($t3, 2, $Dereference($t3)->$allow_ungated_transfer);

    // write_ref($t6, $t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:9+37
    $t6 := $UpdateMutation($t6, $t5);

    // write_back[Reference($t3).allow_ungated_transfer (bool)]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:9+37
    $t3 := $UpdateMutation($t3, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t3), $Dereference($t6)));

    // write_back[0x1::object::ObjectCore@]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:456:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(185,19343,19344)"} true;
L1:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(185,19343,19344)"} true;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:457:5+1
L2:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(185,19343,19344)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_derive_ref [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:370:5+108
procedure {:inline 1} $1_object_generate_derive_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_DeriveRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_DeriveRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:370:5+1
    assume {:print "$at(185,16430,16431)"} true;
    assume {:print "$track_local(40,29,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:371:27+8
    assume {:print "$at(185,16522,16530)"} true;
    $t1 := $t0->$self;

    // $t2 := pack 0x1::object::DeriveRef($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:371:9+28
    $t2 := $1_object_DeriveRef($t1);

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:371:9+28
    assume {:print "$track_return(40,29,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:372:5+1
    assume {:print "$at(185,16537,16538)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:372:5+1
    assume {:print "$at(185,16537,16538)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_signer [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:375:5+96
procedure {:inline 1} $1_object_generate_signer(_$t0: $1_object_ConstructorRef) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:375:5+1
    assume {:print "$at(185,16591,16592)"} true;
    assume {:print "$track_local(40,32,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:23+8
    assume {:print "$at(185,16672,16680)"} true;
    $t1 := $t0->$self;

    // $t2 := opaque begin: create_signer::create_signer($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23

    // assume WellFormed($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume Eq<address>(signer::$address_of($t2), $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23
    assume $IsEqual'address'($1_signer_$address_of($t2), $t1);

    // assume Eq<signer>($t2, create_signer::spec_create_signer($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23
    assume $IsEqual'signer'($t2, $1_create_signer_spec_create_signer($t1));

    // $t2 := opaque end: create_signer::create_signer($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:376:9+23
    assume {:print "$track_return(40,32,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:377:5+1
    assume {:print "$at(185,16686,16687)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:377:5+1
    assume {:print "$at(185,16686,16687)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_transfer_ref [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:364:5+219
procedure {:inline 1} $1_object_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_TransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_object_TransferRef;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:364:5+1
    assume {:print "$at(185,16090,16091)"} true;
    assume {:print "$track_local(40,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:41+8
    assume {:print "$at(185,16200,16208)"} true;
    $t1 := $t0->$self;

    // $t2 := exists<0x1::object::Untransferable>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:18+32
    $t2 := $ResourceExists($1_object_Untransferable_$memory, $t1);

    // if ($t2) goto L0 else goto L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:17+33
    if ($t2) { goto L0; } else { goto L1; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:366:29+8
    assume {:print "$at(185,16293,16301)"} true;
L1:

    // $t3 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:366:29+8
    assume {:print "$at(185,16293,16301)"} true;
    $t3 := $t0->$self;

    // $t4 := pack 0x1::object::TransferRef($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:366:9+30
    $t4 := $1_object_TransferRef($t3);

    // trace_return[0]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:364:73+151
    assume {:print "$at(185,16158,16309)"} true;
    assume {:print "$track_return(40,34,0):", $t4} $t4 == $t4;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:364:73+151
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:9+6
    assume {:print "$at(185,16168,16174)"} true;
L0:

    // $t5 := 9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:77+25
    assume {:print "$at(185,16236,16261)"} true;
    $t5 := 9;
    assume $IsValid'u64'($t5);

    // $t6 := error::permission_denied($t5) on_abort goto L3 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:52+51
    call $t6 := $1_error_permission_denied($t5);
    if ($abort_flag) {
        assume {:print "$at(185,16211,16262)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(40,34):", $t7} $t7 == $t7;
        goto L3;
    }

    // trace_abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:9+6
    assume {:print "$at(185,16168,16174)"} true;
    assume {:print "$track_abort(40,34):", $t6} $t6 == $t6;

    // $t7 := move($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:9+6
    $t7 := $t6;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:365:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:367:5+1
    assume {:print "$at(185,16308,16309)"} true;
L2:

    // return $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:367:5+1
    assume {:print "$at(185,16308,16309)"} true;
    $ret0 := $t4;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:367:5+1
L3:

    // abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:367:5+1
    assume {:print "$at(185,16308,16309)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::is_burnt<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:195:5+100
procedure {:inline 1} $1_object_is_burnt'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:195:5+1
    assume {:print "$at(185,8289,8290)"} true;
    assume {:print "$track_local(40,37,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::Object<#0>>.inner($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:196:27+12
    assume {:print "$at(185,8370,8382)"} true;
    $t1 := $t0->$inner;

    // $t2 := exists<0x1::object::TombStone>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:196:9+31
    $t2 := $ResourceExists($1_object_TombStone_$memory, $t1);

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:196:9+31
    assume {:print "$track_return(40,37,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:197:5+1
    assume {:print "$at(185,8388,8389)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:197:5+1
    assume {:print "$at(185,8388,8389)"} true;
    $ret0 := $t2;
    return;

}

// fun object::object_exists<0x1::coin::PairedCoinType> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:212:5+122
procedure {:inline 1} $1_object_object_exists'$1_coin_PairedCoinType'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:212:5+1
    assume {:print "$at(185,8987,8988)"} true;
    assume {:print "$track_local(40,41,0):", $t0} $t0 == $t0;

    // $t2 := exists<0x1::object::ObjectCore>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+26
    assume {:print "$at(185,9053,9079)"} true;
    $t2 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t2) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
L1:

    // $t3 := opaque begin: object::exists_at<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    assume {:print "$at(185,9083,9103)"} true;

    // $t4 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    havoc $t4;

    // if ($t4) goto L6 else goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    if ($t4) { goto L6; } else { goto L5; }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
L6:

    // trace_abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    assume {:print "$at(185,9083,9103)"} true;
    assume {:print "$track_abort(40,41):", $t5} $t5 == $t5;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    goto L4;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
L5:

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    assume {:print "$at(185,9083,9103)"} true;
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, object::spec_exists_at<#0>($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    assume $IsEqual'bool'($t3, $1_object_spec_exists_at'$1_coin_PairedCoinType'($t0));

    // $t3 := opaque end: object::exists_at<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20

    // $t1 := $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    $t1 := $t3;

    // trace_local[$t2]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:39+20
    assume {:print "$track_local(40,41,1):", $t3} $t3 == $t3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
L2:

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
    assume {:print "$at(185,9053,9103)"} true;
    assume {:print "$track_return(40,41,0):", $t1} $t1 == $t1;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
    goto L3;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
L0:

    // $t6 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
    assume {:print "$at(185,9053,9103)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t1 := $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
    $t1 := $t6;

    // trace_local[$t2]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
    assume {:print "$track_local(40,41,1):", $t6} $t6 == $t6;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:213:9+50
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:214:5+1
    assume {:print "$at(185,9108,9109)"} true;
L3:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:214:5+1
    assume {:print "$at(185,9108,9109)"} true;
    $ret0 := $t1;
    return;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:214:5+1
L4:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:214:5+1
    assume {:print "$at(185,9108,9109)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:385:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$1_fungible_asset_FungibleStore'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:385:5+1
    assume {:print "$at(185,16912,16913)"} true;
    assume {:print "$track_local(40,42,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:30+8
    assume {:print "$at(185,17023,17031)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:9+30
    call $t2 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(185,17002,17032)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(40,42):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:9+30
    assume {:print "$track_return(40,42,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
L2:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:385:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:385:5+1
    assume {:print "$at(185,16912,16913)"} true;
    assume {:print "$track_local(40,42,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:30+8
    assume {:print "$at(185,17023,17031)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:9+30
    call $t2 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(185,17002,17032)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(40,42):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:386:9+30
    assume {:print "$track_return(40,42,0):", $t2} $t2 == $t2;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
L1:

    // return $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
L2:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:387:5+1
    assume {:print "$at(185,17037,17038)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::owns<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:696:5+893
procedure {:inline 1} $1_object_owns'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: int) returns ($ret0: bool)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_object_ObjectCore;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t14: $1_object_ObjectCore;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: bool;
    var $t23: $1_object_ObjectCore;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t5, select object::Object.inner<0x1::object::Object<#0>>($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:555:9+37
    assume {:print "$at(186,22475,22512)"} true;
    assume ($t5 == $t0->$inner);

    // assume Identical($t6, global<0x1::object::ObjectCore>($t5)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:556:9+53
    assume {:print "$at(186,22521,22574)"} true;
    assume ($t6 == $ResourceValue($1_object_ObjectCore_$memory, $t5));

    // assume Identical($t7, select object::ObjectCore.owner<0x1::object::ObjectCore>($t6)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:557:9+37
    assume {:print "$at(186,22583,22620)"} true;
    assume ($t7 == $t6->$owner);

    // trace_local[object]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:696:5+1
    assume {:print "$at(185,29188,29189)"} true;
    assume {:print "$track_local(40,44,0):", $t0} $t0 == $t0;

    // trace_local[owner]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:696:5+1
    assume {:print "$track_local(40,44,1):", $t1} $t1 == $t1;

    // $t8 := object::object_address<#0>($t0) on_abort goto L13 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:697:31+23
    assume {:print "$at(185,29305,29328)"} true;
    call $t8 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(185,29305,29328)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // trace_local[current_address]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:697:31+23
    assume {:print "$track_local(40,44,2):", $t8} $t8 == $t8;

    // $t10 := exists<0x1::object::ObjectCore>($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:700:13+35
    assume {:print "$at(185,29360,29395)"} true;
    $t10 := $ResourceExists($1_object_ObjectCore_$memory, $t8);

    // if ($t10) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:699:9+6
    assume {:print "$at(185,29339,29345)"} true;
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:704:13+15
    assume {:print "$at(185,29475,29490)"} true;
L1:

    // $t11 := ==($t8, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:704:13+24
    assume {:print "$at(185,29475,29499)"} true;
    $t11 := $IsEqual'address'($t8, $t1);

    // if ($t11) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:704:9+65
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:705:20+4
    assume {:print "$at(185,29522,29526)"} true;
L3:

    // $t12 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:705:20+4
    assume {:print "$at(185,29522,29526)"} true;
    $t12 := true;
    assume $IsValid'bool'($t12);

    // trace_return[0]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:705:13+11
    assume {:print "$track_return(40,44,0):", $t12} $t12 == $t12;

    // $t13 := move($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:705:13+11
    $t13 := $t12;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:705:13+11
    goto L12;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:708:22+42
    assume {:print "$at(185,29560,29602)"} true;
L2:

    // $t14 := get_global<0x1::object::ObjectCore>($t8) on_abort goto L13 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:708:22+42
    assume {:print "$at(185,29560,29602)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($1_object_ObjectCore_$memory, $t8);
    }
    if ($abort_flag) {
        assume {:print "$at(185,29560,29602)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // $t15 := get_field<0x1::object::ObjectCore>.owner($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:709:31+12
    assume {:print "$at(185,29634,29646)"} true;
    $t15 := $t14->$owner;

    // trace_local[$t9]($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:709:31+12
    assume {:print "$track_local(40,44,3):", $t15} $t15 == $t15;

    // $t16 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:711:21+1
    assume {:print "$at(185,29669,29670)"} true;
    $t16 := 0;
    assume $IsValid'u8'($t16);

    // trace_local[count]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:711:21+1
    assume {:print "$track_local(40,44,4):", $t16} $t16 == $t16;

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume {:print "$at(185,29687,29692)"} true;
L10:

    // $t3 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume {:print "$at(185,29687,29692)"} true;
    havoc $t3;

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'address'($t3);

    // $t4 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t4;

    // assume WellFormed($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'u8'($t4);

    // $t17 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t17;

    // assume WellFormed($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'bool'($t17);

    // $t18 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t18;

    // assume WellFormed($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'u8'($t18);

    // $t19 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t19;

    // assume WellFormed($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'u8'($t19);

    // $t20 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t20;

    // assume WellFormed($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'u8'($t20);

    // $t21 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t21;

    // assume WellFormed($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'bool'($t21);

    // $t22 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t22;

    // assume WellFormed($t22) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'bool'($t22);

    // $t23 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t23;

    // assume WellFormed($t23) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'$1_object_ObjectCore'($t23);

    // $t24 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    havoc $t24;

    // assume WellFormed($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume $IsValid'address'($t24);

    // trace_local[$t9]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume {:print "$info(): enter loop, variable(s) $t9, count havocked and reassigned"} true;
    assume {:print "$track_local(40,44,3):", $t3} $t3 == $t3;

    // trace_local[count]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume {:print "$track_local(40,44,4):", $t4} $t4 == $t4;

    // assume Not(AbortFlag()) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+5
    assume !$abort_flag;

    // $t17 := !=($t1, $t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:16+24
    $t17 := !$IsEqual'address'($t1, $t3);

    // if ($t17) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:9+381
    if ($t17) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:713:21+5
    assume {:print "$at(185,29735,29740)"} true;
L5:

    // $t18 := 1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:713:29+1
    assume {:print "$at(185,29743,29744)"} true;
    $t18 := 1;
    assume $IsValid'u8'($t18);

    // $t19 := +($t4, $t18) on_abort goto L13 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:713:21+9
    call $t19 := $AddU8($t4, $t18);
    if ($abort_flag) {
        assume {:print "$at(185,29735,29744)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // trace_local[count]($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:713:13+17
    assume {:print "$track_local(40,44,4):", $t19} $t19 == $t19;

    // $t20 := 8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:29+22
    assume {:print "$at(185,29774,29796)"} true;
    $t20 := 8;
    assume $IsValid'u8'($t20);

    // $t21 := <($t19, $t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:21+30
    call $t21 := $Lt($t19, $t20);

    // if ($t21) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:13+6
    if ($t21) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:715:18+35
    assume {:print "$at(185,29855,29890)"} true;
L7:

    // $t22 := exists<0x1::object::ObjectCore>($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:715:18+35
    assume {:print "$at(185,29855,29890)"} true;
    $t22 := $ResourceExists($1_object_ObjectCore_$memory, $t3);

    // if ($t22) goto L8 else goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:715:17+36
    if ($t22) { goto L8; } else { goto L9; }

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:716:24+5
    assume {:print "$at(185,29917,29922)"} true;
L9:

    // $t25 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:716:24+5
    assume {:print "$at(185,29917,29922)"} true;
    $t25 := false;
    assume $IsValid'bool'($t25);

    // trace_return[0]($t25) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:716:17+12
    assume {:print "$track_return(40,44,0):", $t25} $t25 == $t25;

    // $t13 := move($t25) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:716:17+12
    $t13 := $t25;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:716:17+12
    goto L12;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:719:26+42
    assume {:print "$at(185,29964,30006)"} true;
L8:

    // $t23 := get_global<0x1::object::ObjectCore>($t3) on_abort goto L13 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:719:26+42
    assume {:print "$at(185,29964,30006)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $ResourceValue($1_object_ObjectCore_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(185,29964,30006)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // $t24 := get_field<0x1::object::ObjectCore>.owner($t23) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:720:31+12
    assume {:print "$at(185,30038,30050)"} true;
    $t24 := $t23->$owner;

    // trace_local[$t9]($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:720:13+30
    assume {:print "$track_local(40,44,3):", $t24} $t24 == $t24;

    // goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:712:9+381
    assume {:print "$at(185,29680,30061)"} true;
    goto L11;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:73+16
    assume {:print "$at(185,29818,29834)"} true;
L6:

    // $t26 := 6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:73+16
    assume {:print "$at(185,29818,29834)"} true;
    $t26 := 6;
    assume $IsValid'u64'($t26);

    // $t27 := error::out_of_range($t26) on_abort goto L13 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:53+37
    call $t27 := $1_error_out_of_range($t26);
    if ($abort_flag) {
        assume {:print "$at(185,29798,29835)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // trace_abort($t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:13+6
    assume {:print "$at(185,29758,29764)"} true;
    assume {:print "$track_abort(40,44):", $t27} $t27 == $t27;

    // $t9 := move($t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:13+6
    $t9 := $t27;

    // goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:714:13+6
    goto L13;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:722:9+4
    assume {:print "$at(185,30071,30075)"} true;
L4:

    // $t28 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:722:9+4
    assume {:print "$at(185,30071,30075)"} true;
    $t28 := true;
    assume $IsValid'bool'($t28);

    // trace_return[0]($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:696:90+808
    assume {:print "$at(185,29273,30081)"} true;
    assume {:print "$track_return(40,44,0):", $t28} $t28 == $t28;

    // $t13 := move($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:696:90+808
    $t13 := $t28;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:696:90+808
    goto L12;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:701:30+22
    assume {:print "$at(185,29426,29448)"} true;
L0:

    // $t29 := 2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:701:30+22
    assume {:print "$at(185,29426,29448)"} true;
    $t29 := 2;
    assume $IsValid'u64'($t29);

    // $t30 := error::not_found($t29) on_abort goto L13 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:701:13+40
    call $t30 := $1_error_not_found($t29);
    if ($abort_flag) {
        assume {:print "$at(185,29409,29449)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(40,44):", $t9} $t9 == $t9;
        goto L13;
    }

    // trace_abort($t30) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:699:9+6
    assume {:print "$at(185,29339,29345)"} true;
    assume {:print "$track_abort(40,44):", $t30} $t30 == $t30;

    // $t9 := move($t30) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:699:9+6
    $t9 := $t30;

    // goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:699:9+6
    goto L13;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:701:30+22
    // Loop invariant checking block for the loop started with header: L10
    assume {:print "$at(185,29426,29448)"} true;
L11:

    // stop() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:701:30+22
    assume {:print "$at(185,29426,29448)"} true;
    assume false;
    return;

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:723:5+1
    assume {:print "$at(185,30080,30081)"} true;
L12:

    // return $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:723:5+1
    assume {:print "$at(185,30080,30081)"} true;
    $ret0 := $t13;
    return;

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:723:5+1
L13:

    // abort($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:723:5+1
    assume {:print "$at(185,30080,30081)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun object::set_untransferable [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:460:5+290
procedure {:inline 1} $1_object_set_untransferable(_$t0: $1_object_ConstructorRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: $signer;
    var $t3: int;
    var $t4: $Mutation ($1_object_ObjectCore);
    var $t5: int;
    var $t6: bool;
    var $t7: $Mutation (bool);
    var $t8: $signer;
    var $t9: bool;
    var $t10: $1_object_Untransferable;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:460:5+1
    assume {:print "$at(185,19387,19388)"} true;
    assume {:print "$track_local(40,46,0):", $t0} $t0 == $t0;

    // $t3 := get_field<0x1::object::ConstructorRef>.self($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:461:52+8
    assume {:print "$at(185,19512,19520)"} true;
    $t3 := $t0->$self;

    // $t4 := borrow_global<0x1::object::ObjectCore>($t3) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:461:22+39
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $Mutation($Global($t3), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t3));
    }
    if ($abort_flag) {
        assume {:print "$at(185,19482,19521)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,46):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:461:22+39
    $temp_0'$1_object_ObjectCore' := $Dereference($t4);
    assume {:print "$track_local(40,46,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t6 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:462:41+5
    assume {:print "$at(185,19563,19568)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t7 := borrow_field<0x1::object::ObjectCore>.allow_ungated_transfer($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:462:9+29
    $t7 := $ChildMutation($t4, 2, $Dereference($t4)->$allow_ungated_transfer);

    // write_ref($t7, $t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:462:9+37
    $t7 := $UpdateMutation($t7, $t6);

    // write_back[Reference($t4).allow_ungated_transfer (bool)]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:462:9+37
    $t4 := $UpdateMutation($t4, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t4), $Dereference($t7)));

    // write_back[0x1::object::ObjectCore@]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:462:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t4),
        $Dereference($t4));

    // $t8 := object::generate_signer($t0) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:463:29+20
    assume {:print "$at(185,19598,19618)"} true;
    call $t8 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(185,19598,19618)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,46):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object_signer]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:463:29+20
    assume {:print "$track_local(40,46,2):", $t8} $t8 == $t8;

    // $t9 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:464:33+17
    assume {:print "$at(185,19652,19669)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := pack 0x1::object::Untransferable($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:464:33+17
    $t10 := $1_object_Untransferable($t9);

    // move_to<0x1::object::Untransferable>($t10, $t8) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:464:9+42
    if ($ResourceExists($1_object_Untransferable_$memory, $t8->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_Untransferable_$memory := $ResourceUpdate($1_object_Untransferable_$memory, $t8->$addr, $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(185,19628,19670)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(40,46):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:465:5+1
    assume {:print "$at(185,19676,19677)"} true;
L1:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:465:5+1
    assume {:print "$at(185,19676,19677)"} true;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:465:5+1
L2:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:465:5+1
    assume {:print "$at(185,19676,19677)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::unburn<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:640:5+1349
procedure {:inline 1} $1_object_unburn'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore') returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_object_ObjectCore;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_object_ObjectCore);
    var $t8: $Mutation (int);
    var $t9: int;
    var $t10: $1_object_TombStone;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: $1_object_TransferPermission;
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: $1_object_ObjectCore;
    var $t20: int;
    var $t21: int;
    var $t22: bool;
    var $t23: $1_object_TombStone;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: bool;
    var $t28: $1_object_TombStone;
    var $t29: int;
    var $t30: int;
    var $t31: bool;
    var $t32: $Mutation ($1_object_ObjectCore);
    var $t33: int;
    var $t34: bool;
    var $t35: bool;
    var $t36: int;
    var $t37: $1_object_Transfer;
    var $t38: $Mutation (int);
    var $t39: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t40: int;
    var $t41: $1_object_TransferEvent;
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: int;
    var $t49: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_permissioned_signer_PermissionStorage': $1_permissioned_signer_PermissionStorage;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t9, select object::Object.inner<0x1::object::Object<#0>>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:505:9+34
    assume {:print "$at(186,20046,20080)"} true;
    assume ($t9 == $t1->$inner);

    // assume Identical($t10, global<0x1::object::TombStone>($t9)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:508:9+58
    assume {:print "$at(186,20181,20239)"} true;
    assume ($t10 == $ResourceValue($1_object_TombStone_$memory, $t9));

    // assume Identical($t11, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:509:9+64
    assume {:print "$at(186,20248,20312)"} true;
    assume ($t11 == $1_signer_$address_of($t0));

    // assume Identical($t12, select object::ObjectCore.owner<0x1::object::ObjectCore>(global<0x1::object::ObjectCore>($t9))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:510:9+75
    assume {:print "$at(186,20321,20396)"} true;
    assume ($t12 == $ResourceValue($1_object_ObjectCore_$memory, $t9)->$owner);

    // trace_local[original_owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:640:5+1
    assume {:print "$at(185,26824,26825)"} true;
    assume {:print "$track_local(40,52,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:640:5+1
    assume {:print "$track_local(40,52,1):", $t1} $t1 == $t1;

    // $t13 := get_field<0x1::object::Object<#0>>.inner($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:644:27+12
    assume {:print "$at(185,26982,26994)"} true;
    $t13 := $t1->$inner;

    // trace_local[object_addr]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:644:27+12
    assume {:print "$track_local(40,52,2):", $t13} $t13 == $t13;

    // $t14 := exists<0x1::object::TombStone>($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:645:17+30
    assume {:print "$at(185,27012,27042)"} true;
    $t14 := $ResourceExists($1_object_TombStone_$memory, $t13);

    // if ($t14) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:645:9+6
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:58+14
    assume {:print "$at(185,27163,27177)"} true;
L1:

    // $t15 := pack 0x1::object::TransferPermission($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:74+42
    assume {:print "$at(185,27179,27221)"} true;
    $t15 := $1_object_TransferPermission($t13);

    // $t16 := opaque begin: permissioned_signer::check_permission_exists<0x1::object::TransferPermission>($t0, $t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104

    // $t17 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
    havoc $t17;

    // if ($t17) goto L19 else goto L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
    if ($t17) { goto L19; } else { goto L18; }

    // label L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
L19:

    // trace_abort($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
    assume {:print "$at(185,27118,27222)"} true;
    assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;

    // goto L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
    goto L17;

    // label L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
L18:

    // modifies global<0x1::permissioned_signer::PermissionStorage>(permissioned_signer::spec_permission_address($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
    assume {:print "$at(185,27118,27222)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_permissioned_signer_PermissionStorage';
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceUpdate($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0), $temp_0'$1_permissioned_signer_PermissionStorage');
    } else {
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceRemove($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0));
    }

    // assume WellFormed($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
    assume $IsValid'bool'($t16);

    // assume Eq<bool>($t16, permissioned_signer::spec_check_permission_exists<0x1::object::TransferPermission>($t0, $t15)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104
    assume $IsEqual'bool'($t16, $1_permissioned_signer_spec_check_permission_exists'$1_object_TransferPermission'($t0, $t15));

    // $t16 := opaque end: permissioned_signer::check_permission_exists<0x1::object::TransferPermission>($t0, $t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:647:13+104

    // if ($t16) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:646:9+6
    assume {:print "$at(185,27097,27103)"} true;
    if ($t16) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:652:27+38
    assume {:print "$at(185,27448,27486)"} true;
L3:

    // $t19 := get_global<0x1::object::ObjectCore>($t13) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:652:27+38
    assume {:print "$at(185,27448,27486)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $ResourceValue($1_object_ObjectCore_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(185,27448,27486)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_local[object_core]($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:652:27+38
    assume {:print "$track_local(40,52,3):", $t19} $t19 == $t19;

    // $t20 := get_field<0x1::object::ObjectCore>.owner($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:653:13+17
    assume {:print "$at(185,27500,27517)"} true;
    $t20 := $t19->$owner;

    // $t21 := signer::address_of($t0) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:653:34+34
    call $t21 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(185,27521,27555)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // $t22 := ==($t20, $t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:653:13+55
    $t22 := $IsEqual'address'($t20, $t21);

    // if ($t22) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:653:9+670
    if ($t22) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:653:70+96
L5:

    // $t23 := move_from<0x1::object::TombStone>($t13) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:654:51+33
    assume {:print "$at(185,27609,27642)"} true;
    if (!$ResourceExists($1_object_TombStone_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $ResourceValue($1_object_TombStone_$memory, $t13);
        $1_object_TombStone_$memory := $ResourceRemove($1_object_TombStone_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(185,27609,27642)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // $t24 := unpack 0x1::object::TombStone($t23) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:654:17+31
    $t24 := $t23->$original_owner;

    // drop($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:654:17+31

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:643:38+1219
    assume {:print "$at(185,26954,28173)"} true;
L14:

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:643:38+1219
    assume {:print "$at(185,26954,28173)"} true;
    goto L16;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:655:20+17
    assume {:print "$at(185,27663,27680)"} true;
L4:

    // $t25 := get_field<0x1::object::ObjectCore>.owner($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:655:20+17
    assume {:print "$at(185,27663,27680)"} true;
    $t25 := $t19->$owner;

    // $t26 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:655:41+12
    $t26 := 115792089237316195423570985008687907853269984665640564039457584007913129639935;
    assume $IsValid'address'($t26);

    // $t27 := ==($t25, $t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:655:20+33
    $t27 := $IsEqual'address'($t25, $t26);

    // if ($t27) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:655:16+507
    if ($t27) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:657:69+33
    assume {:print "$at(185,27805,27838)"} true;
L7:

    // $t28 := move_from<0x1::object::TombStone>($t13) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:657:69+33
    assume {:print "$at(185,27805,27838)"} true;
    if (!$ResourceExists($1_object_TombStone_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t28 := $ResourceValue($1_object_TombStone_$memory, $t13);
        $1_object_TombStone_$memory := $ResourceRemove($1_object_TombStone_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(185,27805,27838)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // $t29 := unpack 0x1::object::TombStone($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:657:17+49
    $t29 := $t28->$original_owner;

    // trace_local[$t17]($t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:657:17+49
    assume {:print "$track_local(40,52,4):", $t29} $t29 == $t29;

    // $t30 := signer::address_of($t0) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:659:40+34
    assume {:print "$at(185,27900,27934)"} true;
    call $t30 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(185,27900,27934)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // $t31 := ==($t29, $t30) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:659:17+57
    $t31 := $IsEqual'address'($t29, $t30);

    // if ($t31) goto L9 else goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:658:13+6
    assume {:print "$at(185,27852,27858)"} true;
    if ($t31) { goto L9; } else { goto L8; }

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:557:16+18
    assume {:print "$at(185,23219,23237)"} true;
L9:

    // trace_local[$t19]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:557:16+18
    assume {:print "$at(185,23219,23237)"} true;
    assume {:print "$track_local(40,52,5):", $t13} $t13 == $t13;

    // trace_local[$t28]($t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:557:16+18
    assume {:print "$track_local(40,52,6):", $t29} $t29 == $t29;

    // $t32 := borrow_global<0x1::object::ObjectCore>($t13) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:558:27+37
    assume {:print "$at(185,23316,23353)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t32 := $Mutation($Global($t13), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t13));
    }
    if ($abort_flag) {
        assume {:print "$at(185,23316,23353)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_local[object_core]($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:558:27+37
    $temp_0'$1_object_ObjectCore' := $Dereference($t32);
    assume {:print "$track_local(40,52,7):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t33 := get_field<0x1::object::ObjectCore>.owner($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:559:13+17
    assume {:print "$at(185,23367,23384)"} true;
    $t33 := $Dereference($t32)->$owner;

    // $t34 := !=($t33, $t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:559:13+23
    $t34 := !$IsEqual'address'($t33, $t29);

    // if ($t34) goto L11 else goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:559:9+666
    if ($t34) { goto L11; } else { goto L10; }

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:560:17+47
    assume {:print "$at(185,23410,23457)"} true;
L11:

    // $t35 := features::module_event_migration_enabled() on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:560:17+47
    assume {:print "$at(185,23410,23457)"} true;
    call $t35 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(185,23410,23457)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // if ($t35) goto L13 else goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:560:13+576
    if ($t35) { goto L13; } else { goto L12; }

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:563:25+6
    assume {:print "$at(185,23545,23551)"} true;
L13:

    // $t36 := get_field<0x1::object::ObjectCore>.owner($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:564:31+17
    assume {:print "$at(185,23583,23600)"} true;
    $t36 := $Dereference($t32)->$owner;

    // $t37 := pack 0x1::object::Transfer($t13, $t36, $t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:562:21+141
    assume {:print "$at(185,23510,23651)"} true;
    $t37 := $1_object_Transfer($t13, $t36, $t29);

    // opaque begin: event::emit<0x1::object::Transfer>($t37) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:561:17+193
    assume {:print "$at(185,23477,23670)"} true;

    // opaque end: event::emit<0x1::object::Transfer>($t37) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:561:17+193

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:578:13+17
    assume {:print "$at(185,23996,24013)"} true;
L15:

    // $t38 := borrow_field<0x1::object::ObjectCore>.owner($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:578:13+17
    assume {:print "$at(185,23996,24013)"} true;
    $t38 := $ChildMutation($t32, 1, $Dereference($t32)->$owner);

    // trace_local[$t47]($t38) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:578:13+22
    $temp_0'address' := $Dereference($t38);
    assume {:print "$track_local(40,52,8):", $temp_0'address'} $temp_0'address' == $temp_0'address';

    // write_ref($t38, $t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:578:13+22
    $t38 := $UpdateMutation($t38, $t29);

    // write_back[Reference($t32).owner (address)]($t38) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:578:13+22
    $t32 := $UpdateMutation($t32, $Update'$1_object_ObjectCore'_owner($Dereference($t32), $Dereference($t38)));

    // write_back[0x1::object::ObjectCore@]($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:578:13+22
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t32),
        $Dereference($t32));

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:559:38+637
    assume {:print "$at(185,23392,24029)"} true;
    goto L14;

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:570:21+32
    assume {:print "$at(185,23748,23780)"} true;
L12:

    // $t39 := borrow_field<0x1::object::ObjectCore>.transfer_events($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:570:21+32
    assume {:print "$at(185,23748,23780)"} true;
    $t39 := $ChildMutation($t32, 3, $Dereference($t32)->$transfer_events);

    // $t40 := get_field<0x1::object::ObjectCore>.owner($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:573:31+17
    assume {:print "$at(185,23880,23897)"} true;
    $t40 := $Dereference($t32)->$owner;

    // $t41 := pack 0x1::object::TransferEvent($t13, $t40, $t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:571:21+146
    assume {:print "$at(185,23802,23948)"} true;
    $t41 := $1_object_TransferEvent($t13, $t40, $t29);

    // opaque begin: event::emit_event<0x1::object::TransferEvent>($t39, $t41) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:569:17+258
    assume {:print "$at(185,23709,23967)"} true;

    // opaque end: event::emit_event<0x1::object::TransferEvent>($t39, $t41) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:569:17+258

    // write_back[Reference($t32).transfer_events (0x1::event::EventHandle<0x1::object::TransferEvent>)]($t39) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:569:17+258
    $t32 := $UpdateMutation($t32, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t32), $Dereference($t39)));

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:569:17+258
    goto L15;

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:559:9+666
    assume {:print "$at(185,23363,24029)"} true;
L10:

    // drop($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:559:9+666
    assume {:print "$at(185,23363,24029)"} true;

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:559:9+666
    goto L14;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:660:42+17
    assume {:print "$at(185,27977,27994)"} true;
L8:

    // $t42 := 4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:660:42+17
    assume {:print "$at(185,27977,27994)"} true;
    $t42 := 4;
    assume $IsValid'u64'($t42);

    // $t43 := error::permission_denied($t42) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:660:17+43
    call $t43 := $1_error_permission_denied($t42);
    if ($abort_flag) {
        assume {:print "$at(185,27952,27995)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_abort($t43) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:658:13+6
    assume {:print "$at(185,27852,27858)"} true;
    assume {:print "$track_abort(40,52):", $t43} $t43 == $t43;

    // $t18 := move($t43) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:658:13+6
    $t18 := $t43;

    // goto L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:658:13+6
    goto L17;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:663:16+74
    assume {:print "$at(185,28092,28166)"} true;
L6:

    // $t44 := 4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:664:44+17
    assume {:print "$at(185,28137,28154)"} true;
    $t44 := 4;
    assume $IsValid'u64'($t44);

    // $t45 := error::permission_denied($t44) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:664:19+43
    call $t45 := $1_error_permission_denied($t44);
    if ($abort_flag) {
        assume {:print "$at(185,28112,28155)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_abort($t45) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:664:13+49
    assume {:print "$at(185,28106,28155)"} true;
    assume {:print "$track_abort(40,52):", $t45} $t45 == $t45;

    // $t18 := move($t45) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:664:13+49
    $t18 := $t45;

    // goto L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:664:13+49
    goto L17;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:646:9+6
    assume {:print "$at(185,27097,27103)"} true;
L2:

    // $t46 := 9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:648:38+25
    assume {:print "$at(185,27261,27286)"} true;
    $t46 := 9;
    assume $IsValid'u64'($t46);

    // $t47 := error::permission_denied($t46) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:648:13+51
    call $t47 := $1_error_permission_denied($t46);
    if ($abort_flag) {
        assume {:print "$at(185,27236,27287)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_abort($t47) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:646:9+6
    assume {:print "$at(185,27097,27103)"} true;
    assume {:print "$track_abort(40,52):", $t47} $t47 == $t47;

    // $t18 := move($t47) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:646:9+6
    $t18 := $t47;

    // goto L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:646:9+6
    goto L17;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:645:9+6
    assume {:print "$at(185,27004,27010)"} true;
L0:

    // $t48 := 8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:645:73+17
    assume {:print "$at(185,27068,27085)"} true;
    $t48 := 8;
    assume $IsValid'u64'($t48);

    // $t49 := error::invalid_argument($t48) on_abort goto L17 with $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:645:49+42
    call $t49 := $1_error_invalid_argument($t48);
    if ($abort_flag) {
        assume {:print "$at(185,27044,27086)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(40,52):", $t18} $t18 == $t18;
        goto L17;
    }

    // trace_abort($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:645:9+6
    assume {:print "$at(185,27004,27010)"} true;
    assume {:print "$track_abort(40,52):", $t49} $t49 == $t49;

    // $t18 := move($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:645:9+6
    $t18 := $t49;

    // goto L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:645:9+6
    goto L17;

    // label L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:666:5+1
    assume {:print "$at(185,28172,28173)"} true;
L16:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:666:5+1
    assume {:print "$at(185,28172,28173)"} true;
    return;

    // label L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:666:5+1
L17:

    // abort($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.move:666:5+1
    assume {:print "$at(185,28172,28173)"} true;
    $abort_code := $t18;
    $abort_flag := true;
    return;

}

// struct function_info::FunctionInfo at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/function_info.move:20:5+142
datatype $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo($module_address: int, $module_name: $1_string_String, $function_name: $1_string_String)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_module_address(s: $1_function_info_FunctionInfo, x: int): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(x, s->$module_name, s->$function_name)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_module_name(s: $1_function_info_FunctionInfo, x: $1_string_String): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(s->$module_address, x, s->$function_name)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_function_name(s: $1_function_info_FunctionInfo, x: $1_string_String): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(s->$module_address, s->$module_name, x)
}
function $IsValid'$1_function_info_FunctionInfo'(s: $1_function_info_FunctionInfo): bool {
    $IsValid'address'(s->$module_address)
      && $IsValid'$1_string_String'(s->$module_name)
      && $IsValid'$1_string_String'(s->$function_name)
}
function {:inline} $IsEqual'$1_function_info_FunctionInfo'(s1: $1_function_info_FunctionInfo, s2: $1_function_info_FunctionInfo): bool {
    $IsEqual'address'(s1->$module_address, s2->$module_address)
    && $IsEqual'$1_string_String'(s1->$module_name, s2->$module_name)
    && $IsEqual'$1_string_String'(s1->$function_name, s2->$function_name)}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.spec.move:144:10+323
function {:inline} $1_optional_aggregator_optional_aggregator_value(optional_aggregator: $1_optional_aggregator_OptionalAggregator): int {
    (if ($1_optional_aggregator_$is_parallelizable(optional_aggregator)) then ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'(optional_aggregator->$aggregator))) else ($1_option_$borrow'$1_optional_aggregator_Integer'(optional_aggregator->$integer)->$value))
}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:157:5+141
function {:inline} $1_optional_aggregator_$is_parallelizable(optional_aggregator: $1_optional_aggregator_OptionalAggregator): bool {
    $1_option_$is_some'$1_aggregator_Aggregator'(optional_aggregator->$aggregator)
}

// struct optional_aggregator::Integer at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:25:5+74
datatype $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer($value: int, $limit: int)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_value(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(x, s->$limit)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_limit(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(s->$value, x)
}
function $IsValid'$1_optional_aggregator_Integer'(s: $1_optional_aggregator_Integer): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$limit)
}
function {:inline} $IsEqual'$1_optional_aggregator_Integer'(s1: $1_optional_aggregator_Integer, s2: $1_optional_aggregator_Integer): bool {
    s1 == s2
}

// struct optional_aggregator::OptionalAggregator at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:69:5+175
datatype $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator($aggregator: $1_option_Option'$1_aggregator_Aggregator', $integer: $1_option_Option'$1_optional_aggregator_Integer')
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_aggregator(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_aggregator_Aggregator'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(x, s->$integer)
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_integer(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(s->$aggregator, x)
}
function $IsValid'$1_optional_aggregator_OptionalAggregator'(s: $1_optional_aggregator_OptionalAggregator): bool {
    $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s->$aggregator)
      && $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s->$integer)
}
function {:inline} $IsEqual'$1_optional_aggregator_OptionalAggregator'(s1: $1_optional_aggregator_OptionalAggregator, s2: $1_optional_aggregator_OptionalAggregator): bool {
    $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1->$aggregator, s2->$aggregator)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1->$integer, s2->$integer)}

// fun optional_aggregator::add [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:124:5+427
procedure {:inline 1} $1_optional_aggregator_add(_$t0: $Mutation ($1_optional_aggregator_OptionalAggregator), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator))
{
    // declare local variables
    var $t2: $1_option_Option'$1_aggregator_Aggregator';
    var $t3: bool;
    var $t4: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $t5: $Mutation ($1_aggregator_Aggregator);
    var $t6: int;
    var $t7: $1_aggregator_Aggregator;
    var $t8: bool;
    var $t9: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $t10: $Mutation ($1_optional_aggregator_Integer);
    var $t0: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t1: int;
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[optional_aggregator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:124:5+1
    assume {:print "$at(112,4397,4398)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,2,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[value]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:124:5+1
    assume {:print "$track_local(47,2,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::optional_aggregator::OptionalAggregator>.aggregator($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:29+31
    assume {:print "$at(112,4501,4532)"} true;
    $t2 := $Dereference($t0)->$aggregator;

    // $t3 := opaque begin: option::is_some<0x1::aggregator::Aggregator>($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:13+48

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:13+48
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, option::spec_is_some<0x1::aggregator::Aggregator>($t2)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:13+48
    assume $IsEqual'bool'($t3, $1_option_spec_is_some'$1_aggregator_Aggregator'($t2));

    // $t3 := opaque end: option::is_some<0x1::aggregator::Aggregator>($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:13+48

    // if ($t3) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:9+337
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:126:49+35
    assume {:print "$at(112,4585,4620)"} true;
L1:

    // $t4 := borrow_field<0x1::optional_aggregator::OptionalAggregator>.aggregator($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:126:49+35
    assume {:print "$at(112,4585,4620)"} true;
    $t4 := $ChildMutation($t0, 0, $Dereference($t0)->$aggregator);

    // $t5 := option::borrow_mut<0x1::aggregator::Aggregator>($t4) on_abort goto L4 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:126:30+55
    call $t5,$t4 := $1_option_borrow_mut'$1_aggregator_Aggregator'($t4);
    if ($abort_flag) {
        assume {:print "$at(112,4566,4621)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // opaque begin: aggregator::add($t5, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    assume {:print "$at(112,4635,4669)"} true;

    // $t7 := read_ref($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    $t7 := $Dereference($t5);

    // assume Identical($t8, Or(Gt(Add(aggregator::spec_aggregator_get_val($t5), $t1), aggregator::spec_get_limit($t5)), Gt(Add(aggregator::spec_aggregator_get_val($t5), $t1), 340282366920938463463374607431768211455))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    assume ($t8 == ((($1_aggregator_spec_aggregator_get_val($Dereference($t5)) + $t1) > $1_aggregator_spec_get_limit($Dereference($t5))) || (($1_aggregator_spec_aggregator_get_val($Dereference($t5)) + $t1) > 340282366920938463463374607431768211455)));

    // if ($t8) goto L7 else goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    if ($t8) { goto L7; } else { goto L5; }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
L6:

    // trace_abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    assume {:print "$at(112,4635,4669)"} true;
    assume {:print "$track_abort(47,2):", $t6} $t6 == $t6;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    goto L4;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
L5:

    // $t5 := havoc[mut]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    assume {:print "$at(112,4635,4669)"} true;
    havoc $temp_0'$1_aggregator_Aggregator';
    $t5 := $UpdateMutation($t5, $temp_0'$1_aggregator_Aggregator');

    // assume WellFormed($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    assume $IsValid'$1_aggregator_Aggregator'($Dereference($t5));

    // assume Eq<u128>(aggregator::spec_get_limit($t5), aggregator::spec_get_limit($t7)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    assume $IsEqual'u128'($1_aggregator_spec_get_limit($Dereference($t5)), $1_aggregator_spec_get_limit($t7));

    // assume Eq<0x1::aggregator::Aggregator>(Freeze(false)($t5), aggregator::spec_aggregator_set_val($t7, Add(aggregator::spec_aggregator_get_val($t7), $t1))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    assume $IsEqual'$1_aggregator_Aggregator'($Dereference($t5), $1_aggregator_spec_aggregator_set_val($t7, ($1_aggregator_spec_aggregator_get_val($t7) + $t1)));

    // opaque end: aggregator::add($t5, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34

    // write_back[Reference($t4).vec (vector<0x1::aggregator::Aggregator>)/[]]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    $t4 := $UpdateMutation($t4, (var $$sel0 := $Dereference($t4)->$vec; $Update'$1_option_Option'$1_aggregator_Aggregator''_vec($Dereference($t4), UpdateVec($$sel0, ReadVec($t5->p, LenVec($t4->p) + 1), $Dereference($t5)))));

    // write_back[Reference($t0).aggregator (0x1::option::Option<0x1::aggregator::Aggregator>)]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_aggregator($Dereference($t0), $Dereference($t4)));

    // trace_local[optional_aggregator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:127:13+34
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,2,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:9+337
    assume {:print "$at(112,4481,4818)"} true;
L2:

    // trace_local[optional_aggregator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:9+337
    assume {:print "$at(112,4481,4818)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,2,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // pack_ref_deep($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:9+337

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:125:9+337
    goto L3;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:129:46+32
    assume {:print "$at(112,4733,4765)"} true;
L0:

    // $t9 := borrow_field<0x1::optional_aggregator::OptionalAggregator>.integer($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:129:46+32
    assume {:print "$at(112,4733,4765)"} true;
    $t9 := $ChildMutation($t0, 1, $Dereference($t0)->$integer);

    // $t10 := option::borrow_mut<0x1::optional_aggregator::Integer>($t9) on_abort goto L4 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:129:27+52
    call $t10,$t9 := $1_option_borrow_mut'$1_optional_aggregator_Integer'($t9);
    if ($abort_flag) {
        assume {:print "$at(112,4714,4766)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // optional_aggregator::add_integer($t10, $t1) on_abort goto L4 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:130:13+27
    assume {:print "$at(112,4780,4807)"} true;
    call $t10 := $1_optional_aggregator_add_integer($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(112,4780,4807)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,2):", $t6} $t6 == $t6;
        goto L4;
    }

    // write_back[Reference($t9).vec (vector<0x1::optional_aggregator::Integer>)/[]]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:130:13+27
    $t9 := $UpdateMutation($t9, (var $$sel0 := $Dereference($t9)->$vec; $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec($Dereference($t9), UpdateVec($$sel0, ReadVec($t10->p, LenVec($t9->p) + 1), $Dereference($t10)))));

    // write_back[Reference($t0).integer (0x1::option::Option<0x1::optional_aggregator::Integer>)]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:130:13+27
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_integer($Dereference($t0), $Dereference($t9)));

    // trace_local[optional_aggregator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:130:13+27
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,2,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:130:13+27
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:132:5+1
    assume {:print "$at(112,4823,4824)"} true;
L3:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:132:5+1
    assume {:print "$at(112,4823,4824)"} true;
    $ret0 := $t0;
    return;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:132:5+1
L4:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:132:5+1
    assume {:print "$at(112,4823,4824)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

    // label L7 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L7:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t4) at <internal>:1:1+10

    // goto L6 at <internal>:1:1+10
    goto L6;

}

// fun optional_aggregator::sub [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:135:5+427
procedure {:inline 1} $1_optional_aggregator_sub(_$t0: $Mutation ($1_optional_aggregator_OptionalAggregator), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_OptionalAggregator))
{
    // declare local variables
    var $t2: $1_option_Option'$1_aggregator_Aggregator';
    var $t3: bool;
    var $t4: $Mutation ($1_option_Option'$1_aggregator_Aggregator');
    var $t5: $Mutation ($1_aggregator_Aggregator);
    var $t6: int;
    var $t7: $1_aggregator_Aggregator;
    var $t8: bool;
    var $t9: $Mutation ($1_option_Option'$1_optional_aggregator_Integer');
    var $t10: $Mutation ($1_optional_aggregator_Integer);
    var $t0: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t1: int;
    var $temp_0'$1_aggregator_Aggregator': $1_aggregator_Aggregator;
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[optional_aggregator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:135:5+1
    assume {:print "$at(112,4912,4913)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,5,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // trace_local[value]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:135:5+1
    assume {:print "$track_local(47,5,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::optional_aggregator::OptionalAggregator>.aggregator($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:29+31
    assume {:print "$at(112,5016,5047)"} true;
    $t2 := $Dereference($t0)->$aggregator;

    // $t3 := opaque begin: option::is_some<0x1::aggregator::Aggregator>($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:13+48

    // assume WellFormed($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:13+48
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, option::spec_is_some<0x1::aggregator::Aggregator>($t2)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:13+48
    assume $IsEqual'bool'($t3, $1_option_spec_is_some'$1_aggregator_Aggregator'($t2));

    // $t3 := opaque end: option::is_some<0x1::aggregator::Aggregator>($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:13+48

    // if ($t3) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:9+337
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:137:49+35
    assume {:print "$at(112,5100,5135)"} true;
L1:

    // $t4 := borrow_field<0x1::optional_aggregator::OptionalAggregator>.aggregator($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:137:49+35
    assume {:print "$at(112,5100,5135)"} true;
    $t4 := $ChildMutation($t0, 0, $Dereference($t0)->$aggregator);

    // $t5 := option::borrow_mut<0x1::aggregator::Aggregator>($t4) on_abort goto L4 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:137:30+55
    call $t5,$t4 := $1_option_borrow_mut'$1_aggregator_Aggregator'($t4);
    if ($abort_flag) {
        assume {:print "$at(112,5081,5136)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,5):", $t6} $t6 == $t6;
        goto L4;
    }

    // opaque begin: aggregator::sub($t5, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    assume {:print "$at(112,5150,5184)"} true;

    // $t7 := read_ref($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    $t7 := $Dereference($t5);

    // assume Identical($t8, Lt(aggregator::spec_aggregator_get_val($t5), $t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    assume ($t8 == ($1_aggregator_spec_aggregator_get_val($Dereference($t5)) < $t1));

    // if ($t8) goto L7 else goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    if ($t8) { goto L7; } else { goto L5; }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
L6:

    // trace_abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    assume {:print "$at(112,5150,5184)"} true;
    assume {:print "$track_abort(47,5):", $t6} $t6 == $t6;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    goto L4;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
L5:

    // $t5 := havoc[mut]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    assume {:print "$at(112,5150,5184)"} true;
    havoc $temp_0'$1_aggregator_Aggregator';
    $t5 := $UpdateMutation($t5, $temp_0'$1_aggregator_Aggregator');

    // assume WellFormed($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    assume $IsValid'$1_aggregator_Aggregator'($Dereference($t5));

    // assume Eq<u128>(aggregator::spec_get_limit($t5), aggregator::spec_get_limit($t7)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    assume $IsEqual'u128'($1_aggregator_spec_get_limit($Dereference($t5)), $1_aggregator_spec_get_limit($t7));

    // assume Eq<0x1::aggregator::Aggregator>(Freeze(false)($t5), aggregator::spec_aggregator_set_val($t7, Sub(aggregator::spec_aggregator_get_val($t7), $t1))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    assume $IsEqual'$1_aggregator_Aggregator'($Dereference($t5), $1_aggregator_spec_aggregator_set_val($t7, ($1_aggregator_spec_aggregator_get_val($t7) - $t1)));

    // opaque end: aggregator::sub($t5, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34

    // write_back[Reference($t4).vec (vector<0x1::aggregator::Aggregator>)/[]]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    $t4 := $UpdateMutation($t4, (var $$sel0 := $Dereference($t4)->$vec; $Update'$1_option_Option'$1_aggregator_Aggregator''_vec($Dereference($t4), UpdateVec($$sel0, ReadVec($t5->p, LenVec($t4->p) + 1), $Dereference($t5)))));

    // write_back[Reference($t0).aggregator (0x1::option::Option<0x1::aggregator::Aggregator>)]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_aggregator($Dereference($t0), $Dereference($t4)));

    // trace_local[optional_aggregator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:138:13+34
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,5,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:9+337
    assume {:print "$at(112,4996,5333)"} true;
L2:

    // trace_local[optional_aggregator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:9+337
    assume {:print "$at(112,4996,5333)"} true;
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,5,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // pack_ref_deep($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:9+337

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:136:9+337
    goto L3;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:140:46+32
    assume {:print "$at(112,5248,5280)"} true;
L0:

    // $t9 := borrow_field<0x1::optional_aggregator::OptionalAggregator>.integer($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:140:46+32
    assume {:print "$at(112,5248,5280)"} true;
    $t9 := $ChildMutation($t0, 1, $Dereference($t0)->$integer);

    // $t10 := option::borrow_mut<0x1::optional_aggregator::Integer>($t9) on_abort goto L4 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:140:27+52
    call $t10,$t9 := $1_option_borrow_mut'$1_optional_aggregator_Integer'($t9);
    if ($abort_flag) {
        assume {:print "$at(112,5229,5281)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,5):", $t6} $t6 == $t6;
        goto L4;
    }

    // optional_aggregator::sub_integer($t10, $t1) on_abort goto L4 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:141:13+27
    assume {:print "$at(112,5295,5322)"} true;
    call $t10 := $1_optional_aggregator_sub_integer($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(112,5295,5322)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,5):", $t6} $t6 == $t6;
        goto L4;
    }

    // write_back[Reference($t9).vec (vector<0x1::optional_aggregator::Integer>)/[]]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:141:13+27
    $t9 := $UpdateMutation($t9, (var $$sel0 := $Dereference($t9)->$vec; $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec($Dereference($t9), UpdateVec($$sel0, ReadVec($t10->p, LenVec($t9->p) + 1), $Dereference($t10)))));

    // write_back[Reference($t0).integer (0x1::option::Option<0x1::optional_aggregator::Integer>)]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:141:13+27
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_OptionalAggregator'_integer($Dereference($t0), $Dereference($t9)));

    // trace_local[optional_aggregator]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:141:13+27
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t0);
    assume {:print "$track_local(47,5,0):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:141:13+27
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:143:5+1
    assume {:print "$at(112,5338,5339)"} true;
L3:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:143:5+1
    assume {:print "$at(112,5338,5339)"} true;
    $ret0 := $t0;
    return;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:143:5+1
L4:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:143:5+1
    assume {:print "$at(112,5338,5339)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

    // label L7 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L7:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t4) at <internal>:1:1+10

    // goto L6 at <internal>:1:1+10
    goto L6;

}

// fun optional_aggregator::add_integer [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:39:5+242
procedure {:inline 1} $1_optional_aggregator_add_integer(_$t0: $Mutation ($1_optional_aggregator_Integer), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_Integer))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation (int);
    var $t10: int;
    var $t11: int;
    var $t0: $Mutation ($1_optional_aggregator_Integer);
    var $t1: int;
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[integer]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:39:5+1
    assume {:print "$at(112,1284,1285)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,6,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[value]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:39:5+1
    assume {:print "$track_local(47,6,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::optional_aggregator::Integer>.limit($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:41:23+13
    assume {:print "$at(112,1377,1390)"} true;
    $t2 := $Dereference($t0)->$limit;

    // $t3 := get_field<0x1::optional_aggregator::Integer>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:41:39+13
    $t3 := $Dereference($t0)->$value;

    // $t4 := -($t2, $t3) on_abort goto L3 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:41:22+31
    call $t4 := $Sub($t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(112,1376,1407)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(47,6):", $t5} $t5 == $t5;
        goto L3;
    }

    // $t6 := <=($t1, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:41:13+40
    call $t6 := $Le($t1, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:40:9+6
    assume {:print "$at(112,1346,1352)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:44:25+13
    assume {:print "$at(112,1498,1511)"} true;
L1:

    // $t7 := get_field<0x1::optional_aggregator::Integer>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:44:25+13
    assume {:print "$at(112,1498,1511)"} true;
    $t7 := $Dereference($t0)->$value;

    // $t8 := +($t7, $t1) on_abort goto L3 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:44:25+21
    call $t8 := $AddU128($t7, $t1);
    if ($abort_flag) {
        assume {:print "$at(112,1498,1519)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(47,6):", $t5} $t5 == $t5;
        goto L3;
    }

    // $t9 := borrow_field<0x1::optional_aggregator::Integer>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+13
    $t9 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t9, $t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+37
    $t9 := $UpdateMutation($t9, $t8);

    // write_back[Reference($t0).value (u128)]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+37
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_Integer'_value($Dereference($t0), $Dereference($t9)));

    // trace_local[integer]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:44:9+37
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,6,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[integer]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:39:57+190
    assume {:print "$at(112,1336,1526)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,6,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:39:57+190
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:40:9+6
    assume {:print "$at(112,1346,1352)"} true;
L0:

    // drop($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:40:9+6
    assume {:print "$at(112,1346,1352)"} true;

    // $t10 := 1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:42:33+20
    assume {:print "$at(112,1441,1461)"} true;
    $t10 := 1;
    assume $IsValid'u64'($t10);

    // $t11 := error::out_of_range($t10) on_abort goto L3 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:42:13+41
    call $t11 := $1_error_out_of_range($t10);
    if ($abort_flag) {
        assume {:print "$at(112,1421,1462)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(47,6):", $t5} $t5 == $t5;
        goto L3;
    }

    // trace_abort($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:40:9+6
    assume {:print "$at(112,1346,1352)"} true;
    assume {:print "$track_abort(47,6):", $t11} $t11 == $t11;

    // $t5 := move($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:40:9+6
    $t5 := $t11;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:40:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:45:5+1
    assume {:print "$at(112,1525,1526)"} true;
L2:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:45:5+1
    assume {:print "$at(112,1525,1526)"} true;
    $ret0 := $t0;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:45:5+1
L3:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:45:5+1
    assume {:print "$at(112,1525,1526)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun optional_aggregator::sub_integer [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:48:5+191
procedure {:inline 1} $1_optional_aggregator_sub_integer(_$t0: $Mutation ($1_optional_aggregator_Integer), _$t1: int) returns ($ret0: $Mutation ($1_optional_aggregator_Integer))
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation (int);
    var $t8: int;
    var $t9: int;
    var $t0: $Mutation ($1_optional_aggregator_Integer);
    var $t1: int;
    var $temp_0'$1_optional_aggregator_Integer': $1_optional_aggregator_Integer;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[integer]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:48:5+1
    assume {:print "$at(112,1600,1601)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[value]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:48:5+1
    assume {:print "$track_local(47,13,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::optional_aggregator::Integer>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:26+13
    assume {:print "$at(112,1679,1692)"} true;
    $t2 := $Dereference($t0)->$value;

    // $t3 := <=($t1, $t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:17+22
    call $t3 := $Le($t1, $t2);

    // if ($t3) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:9+6
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:50:25+13
    assume {:print "$at(112,1763,1776)"} true;
L1:

    // $t4 := get_field<0x1::optional_aggregator::Integer>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:50:25+13
    assume {:print "$at(112,1763,1776)"} true;
    $t4 := $Dereference($t0)->$value;

    // $t5 := -($t4, $t1) on_abort goto L3 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:50:25+21
    call $t5 := $Sub($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(112,1763,1784)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,13):", $t6} $t6 == $t6;
        goto L3;
    }

    // $t7 := borrow_field<0x1::optional_aggregator::Integer>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:50:9+13
    $t7 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t7, $t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:50:9+37
    $t7 := $UpdateMutation($t7, $t5);

    // write_back[Reference($t0).value (u128)]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:50:9+37
    $t0 := $UpdateMutation($t0, $Update'$1_optional_aggregator_Integer'_value($Dereference($t0), $Dereference($t7)));

    // trace_local[integer]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:50:9+37
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // trace_local[integer]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:48:57+139
    assume {:print "$at(112,1652,1791)"} true;
    $temp_0'$1_optional_aggregator_Integer' := $Dereference($t0);
    assume {:print "$track_local(47,13,0):", $temp_0'$1_optional_aggregator_Integer'} $temp_0'$1_optional_aggregator_Integer' == $temp_0'$1_optional_aggregator_Integer';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:48:57+139
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:9+6
    assume {:print "$at(112,1662,1668)"} true;
L0:

    // drop($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:9+6
    assume {:print "$at(112,1662,1668)"} true;

    // $t8 := 2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:61+21
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::out_of_range($t8) on_abort goto L3 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:41+42
    call $t9 := $1_error_out_of_range($t8);
    if ($abort_flag) {
        assume {:print "$at(112,1694,1736)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(47,13):", $t6} $t6 == $t6;
        goto L3;
    }

    // trace_abort($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:9+6
    assume {:print "$at(112,1662,1668)"} true;
    assume {:print "$track_abort(47,13):", $t9} $t9 == $t9;

    // $t6 := move($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:9+6
    $t6 := $t9;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:49:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:51:5+1
    assume {:print "$at(112,1790,1791)"} true;
L2:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:51:5+1
    assume {:print "$at(112,1790,1791)"} true;
    $ret0 := $t0;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:51:5+1
L3:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/aggregator/optional_aggregator.move:51:5+1
    assume {:print "$at(112,1790,1791)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct fungible_asset::TransferRef at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:190:5+77
datatype $1_fungible_asset_TransferRef {
    $1_fungible_asset_TransferRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_TransferRef'_metadata(s: $1_fungible_asset_TransferRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_TransferRef {
    $1_fungible_asset_TransferRef(x)
}
function $IsValid'$1_fungible_asset_TransferRef'(s: $1_fungible_asset_TransferRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_TransferRef'(s1: $1_fungible_asset_TransferRef, s2: $1_fungible_asset_TransferRef): bool {
    s1 == s2
}

// struct fungible_asset::Untransferable at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:144:5+32
datatype $1_fungible_asset_Untransferable {
    $1_fungible_asset_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_fungible_asset_Untransferable'_dummy_field(s: $1_fungible_asset_Untransferable, x: bool): $1_fungible_asset_Untransferable {
    $1_fungible_asset_Untransferable(x)
}
function $IsValid'$1_fungible_asset_Untransferable'(s: $1_fungible_asset_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_fungible_asset_Untransferable'(s1: $1_fungible_asset_Untransferable, s2: $1_fungible_asset_Untransferable): bool {
    s1 == s2
}
var $1_fungible_asset_Untransferable_$memory: $Memory $1_fungible_asset_Untransferable;

// struct fungible_asset::BurnRef at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:205:5+73
datatype $1_fungible_asset_BurnRef {
    $1_fungible_asset_BurnRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_BurnRef'_metadata(s: $1_fungible_asset_BurnRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_BurnRef {
    $1_fungible_asset_BurnRef(x)
}
function $IsValid'$1_fungible_asset_BurnRef'(s: $1_fungible_asset_BurnRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_BurnRef'(s1: $1_fungible_asset_BurnRef, s2: $1_fungible_asset_BurnRef): bool {
    s1 == s2
}

// struct fungible_asset::ConcurrentFungibleBalance at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:171:5+132
datatype $1_fungible_asset_ConcurrentFungibleBalance {
    $1_fungible_asset_ConcurrentFungibleBalance($balance: $1_aggregator_v2_Aggregator'u64')
}
function {:inline} $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance(s: $1_fungible_asset_ConcurrentFungibleBalance, x: $1_aggregator_v2_Aggregator'u64'): $1_fungible_asset_ConcurrentFungibleBalance {
    $1_fungible_asset_ConcurrentFungibleBalance(x)
}
function $IsValid'$1_fungible_asset_ConcurrentFungibleBalance'(s: $1_fungible_asset_ConcurrentFungibleBalance): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u64''(s->$balance)
}
function {:inline} $IsEqual'$1_fungible_asset_ConcurrentFungibleBalance'(s1: $1_fungible_asset_ConcurrentFungibleBalance, s2: $1_fungible_asset_ConcurrentFungibleBalance): bool {
    s1 == s2
}
var $1_fungible_asset_ConcurrentFungibleBalance_$memory: $Memory $1_fungible_asset_ConcurrentFungibleBalance;

// struct fungible_asset::ConcurrentSupply at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:118:5+74
datatype $1_fungible_asset_ConcurrentSupply {
    $1_fungible_asset_ConcurrentSupply($current: $1_aggregator_v2_Aggregator'u128')
}
function {:inline} $Update'$1_fungible_asset_ConcurrentSupply'_current(s: $1_fungible_asset_ConcurrentSupply, x: $1_aggregator_v2_Aggregator'u128'): $1_fungible_asset_ConcurrentSupply {
    $1_fungible_asset_ConcurrentSupply(x)
}
function $IsValid'$1_fungible_asset_ConcurrentSupply'(s: $1_fungible_asset_ConcurrentSupply): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u128''(s->$current)
}
function {:inline} $IsEqual'$1_fungible_asset_ConcurrentSupply'(s1: $1_fungible_asset_ConcurrentSupply, s2: $1_fungible_asset_ConcurrentSupply): bool {
    s1 == s2
}
var $1_fungible_asset_ConcurrentSupply_$memory: $Memory $1_fungible_asset_ConcurrentSupply;

// struct fungible_asset::Deposit at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:220:5+83
datatype $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit($store: int, $amount: int)
}
function {:inline} $Update'$1_fungible_asset_Deposit'_store(s: $1_fungible_asset_Deposit, x: int): $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_Deposit'_amount(s: $1_fungible_asset_Deposit, x: int): $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit(s->$store, x)
}
function $IsValid'$1_fungible_asset_Deposit'(s: $1_fungible_asset_Deposit): bool {
    $IsValid'address'(s->$store)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_Deposit'(s1: $1_fungible_asset_Deposit, s2: $1_fungible_asset_Deposit): bool {
    s1 == s2
}

// struct fungible_asset::DispatchFunctionStore at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:158:5+185
datatype $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore($withdraw_function: $1_option_Option'$1_function_info_FunctionInfo', $deposit_function: $1_option_Option'$1_function_info_FunctionInfo', $derived_balance_function: $1_option_Option'$1_function_info_FunctionInfo')
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_withdraw_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(x, s->$deposit_function, s->$derived_balance_function)
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_deposit_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(s->$withdraw_function, x, s->$derived_balance_function)
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_derived_balance_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(s->$withdraw_function, s->$deposit_function, x)
}
function $IsValid'$1_fungible_asset_DispatchFunctionStore'(s: $1_fungible_asset_DispatchFunctionStore): bool {
    $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$withdraw_function)
      && $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$deposit_function)
      && $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$derived_balance_function)
}
function {:inline} $IsEqual'$1_fungible_asset_DispatchFunctionStore'(s1: $1_fungible_asset_DispatchFunctionStore, s2: $1_fungible_asset_DispatchFunctionStore): bool {
    $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$withdraw_function, s2->$withdraw_function)
    && $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$deposit_function, s2->$deposit_function)
    && $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$derived_balance_function, s2->$derived_balance_function)}
var $1_fungible_asset_DispatchFunctionStore_$memory: $Memory $1_fungible_asset_DispatchFunctionStore;

// struct fungible_asset::FungibleAsset at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:178:5+85
datatype $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset($metadata: $1_object_Object'$1_fungible_asset_Metadata', $amount: int)
}
function {:inline} $Update'$1_fungible_asset_FungibleAsset'_metadata(s: $1_fungible_asset_FungibleAsset, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_FungibleAsset'_amount(s: $1_fungible_asset_FungibleAsset, x: int): $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset(s->$metadata, x)
}
function $IsValid'$1_fungible_asset_FungibleAsset'(s: $1_fungible_asset_FungibleAsset): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_FungibleAsset'(s1: $1_fungible_asset_FungibleAsset, s2: $1_fungible_asset_FungibleAsset): bool {
    s1 == s2
}

// struct fungible_asset::FungibleStore at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:148:5+324
datatype $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore($metadata: $1_object_Object'$1_fungible_asset_Metadata', $balance: int, $frozen: bool)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_metadata(s: $1_fungible_asset_FungibleStore, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(x, s->$balance, s->$frozen)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_balance(s: $1_fungible_asset_FungibleStore, x: int): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(s->$metadata, x, s->$frozen)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_frozen(s: $1_fungible_asset_FungibleStore, x: bool): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(s->$metadata, s->$balance, x)
}
function $IsValid'$1_fungible_asset_FungibleStore'(s: $1_fungible_asset_FungibleStore): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
      && $IsValid'u64'(s->$balance)
      && $IsValid'bool'(s->$frozen)
}
function {:inline} $IsEqual'$1_fungible_asset_FungibleStore'(s1: $1_fungible_asset_FungibleStore, s2: $1_fungible_asset_FungibleStore): bool {
    s1 == s2
}
var $1_fungible_asset_FungibleStore_$memory: $Memory $1_fungible_asset_FungibleStore;

// struct fungible_asset::Metadata at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:124:5+797
datatype $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $icon_uri: $1_string_String, $project_uri: $1_string_String)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_name(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(x, s->$symbol, s->$decimals, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_symbol(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, x, s->$decimals, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_decimals(s: $1_fungible_asset_Metadata, x: int): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, x, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_icon_uri(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, s->$decimals, x, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_project_uri(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, s->$decimals, s->$icon_uri, x)
}
function $IsValid'$1_fungible_asset_Metadata'(s: $1_fungible_asset_Metadata): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_string_String'(s->$icon_uri)
      && $IsValid'$1_string_String'(s->$project_uri)
}
function {:inline} $IsEqual'$1_fungible_asset_Metadata'(s1: $1_fungible_asset_Metadata, s2: $1_fungible_asset_Metadata): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_string_String'(s1->$icon_uri, s2->$icon_uri)
    && $IsEqual'$1_string_String'(s1->$project_uri, s2->$project_uri)}
var $1_fungible_asset_Metadata_$memory: $Memory $1_fungible_asset_Metadata;

// struct fungible_asset::MintRef at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:184:5+73
datatype $1_fungible_asset_MintRef {
    $1_fungible_asset_MintRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_MintRef'_metadata(s: $1_fungible_asset_MintRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_MintRef {
    $1_fungible_asset_MintRef(x)
}
function $IsValid'$1_fungible_asset_MintRef'(s: $1_fungible_asset_MintRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_MintRef'(s1: $1_fungible_asset_MintRef, s2: $1_fungible_asset_MintRef): bool {
    s1 == s2
}

// struct fungible_asset::Supply at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:111:5+133
datatype $1_fungible_asset_Supply {
    $1_fungible_asset_Supply($current: int, $maximum: $1_option_Option'u128')
}
function {:inline} $Update'$1_fungible_asset_Supply'_current(s: $1_fungible_asset_Supply, x: int): $1_fungible_asset_Supply {
    $1_fungible_asset_Supply(x, s->$maximum)
}
function {:inline} $Update'$1_fungible_asset_Supply'_maximum(s: $1_fungible_asset_Supply, x: $1_option_Option'u128'): $1_fungible_asset_Supply {
    $1_fungible_asset_Supply(s->$current, x)
}
function $IsValid'$1_fungible_asset_Supply'(s: $1_fungible_asset_Supply): bool {
    $IsValid'u128'(s->$current)
      && $IsValid'$1_option_Option'u128''(s->$maximum)
}
function {:inline} $IsEqual'$1_fungible_asset_Supply'(s1: $1_fungible_asset_Supply, s2: $1_fungible_asset_Supply): bool {
    $IsEqual'u128'(s1->$current, s2->$current)
    && $IsEqual'$1_option_Option'u128''(s1->$maximum, s2->$maximum)}
var $1_fungible_asset_Supply_$memory: $Memory $1_fungible_asset_Supply;

// struct fungible_asset::Withdraw at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:227:5+84
datatype $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw($store: int, $amount: int)
}
function {:inline} $Update'$1_fungible_asset_Withdraw'_store(s: $1_fungible_asset_Withdraw, x: int): $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_Withdraw'_amount(s: $1_fungible_asset_Withdraw, x: int): $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw(s->$store, x)
}
function $IsValid'$1_fungible_asset_Withdraw'(s: $1_fungible_asset_Withdraw): bool {
    $IsValid'address'(s->$store)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_Withdraw'(s1: $1_fungible_asset_Withdraw, s2: $1_fungible_asset_Withdraw): bool {
    s1 == s2
}

// enum fungible_asset::WithdrawPermission at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:214:5+96
datatype $1_fungible_asset_WithdrawPermission {
    $1_fungible_asset_WithdrawPermission_ByStore($store_address_ByStore: int)
}
function {:inline} $Update'$1_fungible_asset_WithdrawPermission_ByStore'_store_address(s: $1_fungible_asset_WithdrawPermission, x: int): $1_fungible_asset_WithdrawPermission {
    $1_fungible_asset_WithdrawPermission_ByStore(x)
}
function $IsValid'$1_fungible_asset_WithdrawPermission_ByStore'(s: $1_fungible_asset_WithdrawPermission): bool {
    if s is $1_fungible_asset_WithdrawPermission_ByStore then
    $IsValid'address'(s->$store_address_ByStore)
    else false
}
function {:inline} $Update'$1_fungible_asset_WithdrawPermission'_int_store_address(s: $1_fungible_asset_WithdrawPermission, x: int): $1_fungible_asset_WithdrawPermission {
     if s is $1_fungible_asset_WithdrawPermission_ByStore then
    $Update'$1_fungible_asset_WithdrawPermission_ByStore'_store_address(s, x)
    else s
}
function $IsValid'$1_fungible_asset_WithdrawPermission'(s: $1_fungible_asset_WithdrawPermission): bool {
     if s is $1_fungible_asset_WithdrawPermission_ByStore then
    $IsValid'$1_fungible_asset_WithdrawPermission_ByStore'(s)
    else false
}
function {:inline} $IsEqual'$1_fungible_asset_WithdrawPermission'(s1: $1_fungible_asset_WithdrawPermission, s2: $1_fungible_asset_WithdrawPermission): bool {
    s1 == s2
}

// fun fungible_asset::generate_transfer_ref [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:489:5+207
procedure {:inline 1} $1_fungible_asset_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_TransferRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:489:5+1
    assume {:print "$at(168,20437,20438)"} true;
    assume {:print "$track_local(48,4,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:490:24+62
    assume {:print "$at(168,20542,20604)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,20542,20604)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,4):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack 0x1::fungible_asset::TransferRef($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:491:9+24
    assume {:print "$at(168,20614,20638)"} true;
    $t3 := $1_fungible_asset_TransferRef($t1);

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:491:9+24
    assume {:print "$track_return(48,4,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:492:5+1
    assume {:print "$at(168,20643,20644)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:492:5+1
    assume {:print "$at(168,20643,20644)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:492:5+1
L2:

    // abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:492:5+1
    assume {:print "$at(168,20643,20644)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::is_untransferable<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:322:5+137
procedure {:inline 1} $1_fungible_asset_is_untransferable'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:322:5+1
    assume {:print "$at(168,13444,13445)"} true;
    assume {:print "$track_local(48,5,0):", $t0} $t0 == $t0;

    // $t1 := object::object_address<#0>($t0) on_abort goto L2 with $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:323:32+33
    assume {:print "$at(168,13541,13574)"} true;
    call $t1 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,13541,13574)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,5):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := exists<0x1::fungible_asset::Untransferable>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:323:9+57
    $t3 := $ResourceExists($1_fungible_asset_Untransferable_$memory, $t1);

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:323:9+57
    assume {:print "$track_return(48,5,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:324:5+1
    assume {:print "$at(168,13580,13581)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:324:5+1
    assume {:print "$at(168,13580,13581)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:324:5+1
L2:

    // abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:324:5+1
    assume {:print "$at(168,13580,13581)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::add_fungibility [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:266:5+1830
procedure {:inline 1} $1_fungible_asset_add_fungibility(_$t0: $1_object_ConstructorRef, _$t1: $1_option_Option'u128', _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int, _$t5: $1_string_String, _$t6: $1_string_String) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t7: $signer;
    var $t8: $signer;
    var $t9: $signer;
    var $t10: $1_aggregator_v2_Aggregator'u128';
    var $t11: $1_fungible_asset_ConcurrentSupply;
    var $t12: bool;
    var $t13: int;
    var $t14: $signer;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: $1_fungible_asset_Metadata;
    var $t30: bool;
    var $t31: $1_option_Option'u128';
    var $t32: bool;
    var $t33: $1_aggregator_v2_Aggregator'u128';
    var $t34: $1_fungible_asset_ConcurrentSupply;
    var $t35: $1_object_Object'$1_fungible_asset_Metadata';
    var $t36: $Mutation ($1_option_Option'u128');
    var $t37: int;
    var $t38: $1_option_Option'u128';
    var $t39: bool;
    var $t40: $1_aggregator_v2_Aggregator'u128';
    var $t41: int;
    var $t42: $1_option_Option'u128';
    var $t43: $1_fungible_asset_Supply;
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: int;
    var $t49: int;
    var $t50: int;
    var $t51: int;
    var $t52: int;
    var $t53: int;
    var $t54: int;
    var $t55: int;
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_option_Option'u128';
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $temp_0'$1_aggregator_v2_Aggregator'u128'': $1_aggregator_v2_Aggregator'u128';
    var $temp_0'$1_fungible_asset_ConcurrentSupply': $1_fungible_asset_ConcurrentSupply;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'signer': $signer;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:266:5+1
    assume {:print "$at(168,11077,11078)"} true;
    assume {:print "$track_local(48,9,0):", $t0} $t0 == $t0;

    // trace_local[maximum_supply]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,2):", $t2} $t2 == $t2;

    // trace_local[symbol]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,3):", $t3} $t3 == $t3;

    // trace_local[decimals]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,4):", $t4} $t4 == $t4;

    // trace_local[icon_uri]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,5):", $t5} $t5 == $t5;

    // trace_local[project_uri]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:266:5+1
    assume {:print "$track_local(48,9,6):", $t6} $t6 == $t6;

    // $t12 := object::can_generate_delete_ref($t0) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:275:18+48
    assume {:print "$at(168,11351,11399)"} true;
    call $t12 := $1_object_can_generate_delete_ref($t0);
    if ($abort_flag) {
        assume {:print "$at(168,11351,11399)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // if ($t12) goto L0 else goto L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:275:17+49
    if ($t12) { goto L0; } else { goto L1; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:276:39+40
    assume {:print "$at(168,11487,11527)"} true;
L1:

    // $t14 := object::generate_signer($t0) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:276:39+40
    assume {:print "$at(168,11487,11527)"} true;
    call $t14 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(168,11487,11527)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_local[$t13]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:276:39+40
    assume {:print "$track_local(48,9,7):", $t14} $t14 == $t14;

    // trace_local[metadata_object_signer]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:276:38+41
    assume {:print "$track_local(48,9,8):", $t14} $t14 == $t14;

    // $t15 := string::length($t2) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:17+21
    assume {:print "$at(168,11545,11566)"} true;
    call $t15 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(168,11545,11566)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t16 := 32 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:42+15
    $t16 := 32;
    assume $IsValid'u64'($t16);

    // $t17 := <=($t15, $t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:17+40
    call $t17 := $Le($t15, $t16);

    // if ($t17) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:9+6
    if ($t17) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:32+7
    assume {:print "$at(168,11656,11663)"} true;
L3:

    // $t18 := string::length($t3) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:17+23
    assume {:print "$at(168,11641,11664)"} true;
    call $t18 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(168,11641,11664)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t19 := 32 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:44+17
    $t19 := 32;
    assume $IsValid'u64'($t19);

    // $t20 := <=($t18, $t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:17+44
    call $t20 := $Le($t18, $t19);

    // if ($t20) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:9+6
    if ($t20) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:17+8
    assume {:print "$at(168,11743,11751)"} true;
L5:

    // $t21 := 32 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:29+12
    assume {:print "$at(168,11755,11767)"} true;
    $t21 := 32;
    assume $IsValid'u8'($t21);

    // $t22 := <=($t4, $t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:17+24
    call $t22 := $Le($t4, $t21);

    // if ($t22) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:9+6
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:32+9
    assume {:print "$at(168,11843,11852)"} true;
L7:

    // $t23 := string::length($t5) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:17+25
    assume {:print "$at(168,11828,11853)"} true;
    call $t23 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(168,11828,11853)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t24 := 512 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:46+14
    $t24 := 512;
    assume $IsValid'u64'($t24);

    // $t25 := <=($t23, $t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:17+43
    call $t25 := $Le($t23, $t24);

    // if ($t25) goto L9 else goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:9+6
    if ($t25) { goto L9; } else { goto L8; }

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:32+12
    assume {:print "$at(168,11941,11953)"} true;
L9:

    // $t26 := string::length($t6) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:17+28
    assume {:print "$at(168,11926,11954)"} true;
    call $t26 := $1_string_length($t6);
    if ($abort_flag) {
        assume {:print "$at(168,11926,11954)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t27 := 512 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:49+14
    $t27 := 512;
    assume $IsValid'u64'($t27);

    // $t28 := <=($t26, $t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:17+46
    call $t28 := $Le($t26, $t27);

    // if ($t28) goto L11 else goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:9+6
    if ($t28) { goto L11; } else { goto L10; }

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:282:17+22
    assume {:print "$at(168,12027,12049)"} true;
L11:

    // $t29 := pack 0x1::fungible_asset::Metadata($t2, $t3, $t4, $t5, $t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:283:13+151
    assume {:print "$at(168,12063,12214)"} true;
    $t29 := $1_fungible_asset_Metadata($t2, $t3, $t4, $t5, $t6);

    // move_to<0x1::fungible_asset::Metadata>($t29, $t14) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:282:9+205
    assume {:print "$at(168,12019,12224)"} true;
    if ($ResourceExists($1_fungible_asset_Metadata_$memory, $t14->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_Metadata_$memory := $ResourceUpdate($1_fungible_asset_Metadata_$memory, $t14->$addr, $t29);
    }
    if ($abort_flag) {
        assume {:print "$at(168,12019,12224)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t30 := features::concurrent_fungible_assets_enabled() on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:248:9+46
    assume {:print "$at(168,10226,10272)"} true;
    call $t30 := $1_features_concurrent_fungible_assets_enabled();
    if ($abort_flag) {
        assume {:print "$at(168,10226,10272)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // if ($t30) goto L13 else goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:292:9+593
    assume {:print "$at(168,12235,12828)"} true;
    if ($t30) { goto L13; } else { goto L12; }

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:293:45+15
    assume {:print "$at(168,12326,12341)"} true;
L13:

    // $t31 := copy($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:293:45+15
    assume {:print "$at(168,12326,12341)"} true;
    $t31 := $t1;

    // $t32 := opaque begin: option::is_none<u128>($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:293:29+32

    // assume WellFormed($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:293:29+32
    assume $IsValid'bool'($t32);

    // assume Eq<bool>($t32, option::spec_is_none<u128>($t31)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:293:29+32
    assume $IsEqual'bool'($t32, $1_option_spec_is_none'u128'($t31));

    // $t32 := opaque end: option::is_none<u128>($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:293:29+32

    // trace_local[$t43]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:294:21+22
    assume {:print "$at(168,12364,12386)"} true;
    assume {:print "$track_local(48,9,9):", $t14} $t14 == $t14;

    // if ($t32) goto L15 else goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:295:26+215
    assume {:print "$at(168,12432,12647)"} true;
    if ($t32) { goto L15; } else { goto L14; }

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:296:21+44
    assume {:print "$at(168,12469,12513)"} true;
L15:

    // $t33 := aggregator_v2::create_unbounded_aggregator<u128>() on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:296:21+44
    assume {:print "$at(168,12469,12513)"} true;
    call $t33 := $1_aggregator_v2_create_unbounded_aggregator'u128'();
    if ($abort_flag) {
        assume {:print "$at(168,12469,12513)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t10 := $t33 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:296:21+44
    $t10 := $t33;

    // trace_local[$t54]($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:296:21+44
    assume {:print "$track_local(48,9,10):", $t33} $t33 == $t33;

    // label L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:294:45+274
    assume {:print "$at(168,12388,12662)"} true;
L16:

    // $t34 := pack 0x1::fungible_asset::ConcurrentSupply($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:294:45+274
    assume {:print "$at(168,12388,12662)"} true;
    $t34 := $1_fungible_asset_ConcurrentSupply($t10);

    // trace_local[$t53]($t34) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:294:13+307
    assume {:print "$track_local(48,9,11):", $t34} $t34 == $t34;

    // move_to<0x1::fungible_asset::ConcurrentSupply>($t34, $t14) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:294:13+307
    if ($ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t14->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $t14->$addr, $t34);
    }
    if ($abort_flag) {
        assume {:print "$at(168,12356,12663)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // label L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:308:9+62
    assume {:print "$at(168,12839,12901)"} true;
L17:

    // $t35 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t0) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:308:9+62
    assume {:print "$at(168,12839,12901)"} true;
    call $t35 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,12839,12901)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_return[0]($t35) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:274:25+1575
    assume {:print "$at(168,11332,12907)"} true;
    assume {:print "$track_return(48,9,0):", $t35} $t35 == $t35;

    // goto L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:274:25+1575
    goto L18;

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:70+19
    assume {:print "$at(168,12608,12627)"} true;
L14:

    // $t36 := borrow_local($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:70+19
    assume {:print "$at(168,12608,12627)"} true;
    $t36 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t37 := opaque begin: option::extract<u128>($t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36

    // $t38 := read_ref($t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    $t38 := $Dereference($t36);

    // assume Identical($t39, option::spec_is_none<u128>($t36)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume ($t39 == $1_option_spec_is_none'u128'($Dereference($t36)));

    // if ($t39) goto L21 else goto L22 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    if ($t39) { goto L21; } else { goto L22; }

    // label L21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
L21:

    // assume And(option::spec_is_none<u128>($t36), Eq(262145, $t13)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume {:print "$at(168,12592,12628)"} true;
    assume ($1_option_spec_is_none'u128'($Dereference($t36)) && $IsEqual'num'(262145, $t13));

    // trace_abort($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume {:print "$at(168,12592,12628)"} true;
    assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;

    // goto L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    goto L19;

    // label L20 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
L20:

    // $t36 := havoc[mut]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume {:print "$at(168,12592,12628)"} true;
    havoc $temp_0'$1_option_Option'u128'';
    $t36 := $UpdateMutation($t36, $temp_0'$1_option_Option'u128'');

    // assume And(WellFormed($t36), Le(Len<u128>(select option::Option.vec($t36)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume ($IsValid'$1_option_Option'u128''($Dereference($t36)) && (LenVec($Dereference($t36)->$vec) <= 1));

    // assume WellFormed($t37) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume $IsValid'u128'($t37);

    // assume Eq<u128>($t37, option::spec_borrow<u128>($t38)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume $IsEqual'u128'($t37, $1_option_spec_borrow'u128'($t38));

    // assume option::spec_is_none<u128>($t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume $1_option_spec_is_none'u128'($Dereference($t36));

    // $t37 := opaque end: option::extract<u128>($t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36

    // pack_ref_deep($t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36

    // write_back[LocalRoot($t1)@]($t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    $t1 := $Dereference($t36);

    // trace_local[maximum_supply]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:54+36
    assume {:print "$track_local(48,9,1):", $t1} $t1 == $t1;

    // $t40 := aggregator_v2::create_aggregator<u128>($t37) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:21+70
    call $t40 := $1_aggregator_v2_create_aggregator'u128'($t37);
    if ($abort_flag) {
        assume {:print "$at(168,12559,12629)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // $t10 := $t40 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:21+70
    $t10 := $t40;

    // trace_local[$t54]($t40) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:21+70
    assume {:print "$track_local(48,9,10):", $t40} $t40 == $t40;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:298:21+70
    goto L16;

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:302:21+22
    assume {:print "$at(168,12702,12724)"} true;
L12:

    // $t41 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:303:26+1
    assume {:print "$at(168,12760,12761)"} true;
    $t41 := 0;
    assume $IsValid'u128'($t41);

    // $t42 := move($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:302:45+90
    assume {:print "$at(168,12726,12816)"} true;
    $t42 := $t1;

    // $t43 := pack 0x1::fungible_asset::Supply($t41, $t42) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:302:45+90
    $t43 := $1_fungible_asset_Supply($t41, $t42);

    // move_to<0x1::fungible_asset::Supply>($t43, $t14) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:302:13+123
    if ($ResourceExists($1_fungible_asset_Supply_$memory, $t14->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $t14->$addr, $t43);
    }
    if ($abort_flag) {
        assume {:print "$at(168,12694,12817)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // goto L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:302:13+123
    goto L17;

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:9+6
    assume {:print "$at(168,11918,11924)"} true;
L10:

    // $t44 := 19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:85+13
    assume {:print "$at(168,11994,12007)"} true;
    $t44 := 19;
    assume $IsValid'u64'($t44);

    // $t45 := error::out_of_range($t44) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:65+34
    call $t45 := $1_error_out_of_range($t44);
    if ($abort_flag) {
        assume {:print "$at(168,11974,12008)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t45) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:9+6
    assume {:print "$at(168,11918,11924)"} true;
    assume {:print "$track_abort(48,9):", $t45} $t45 == $t45;

    // $t13 := move($t45) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:9+6
    $t13 := $t45;

    // goto L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:281:9+6
    goto L19;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:9+6
    assume {:print "$at(168,11820,11826)"} true;
L8:

    // $t46 := 19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:82+13
    assume {:print "$at(168,11893,11906)"} true;
    $t46 := 19;
    assume $IsValid'u64'($t46);

    // $t47 := error::out_of_range($t46) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:62+34
    call $t47 := $1_error_out_of_range($t46);
    if ($abort_flag) {
        assume {:print "$at(168,11873,11907)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t47) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:9+6
    assume {:print "$at(168,11820,11826)"} true;
    assume {:print "$track_abort(48,9):", $t47} $t47 == $t47;

    // $t13 := move($t47) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:9+6
    $t13 := $t47;

    // goto L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:280:9+6
    goto L19;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:9+6
    assume {:print "$at(168,11735,11741)"} true;
L6:

    // $t48 := 17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:63+19
    assume {:print "$at(168,11789,11808)"} true;
    $t48 := 17;
    assume $IsValid'u64'($t48);

    // $t49 := error::out_of_range($t48) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:43+40
    call $t49 := $1_error_out_of_range($t48);
    if ($abort_flag) {
        assume {:print "$at(168,11769,11809)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:9+6
    assume {:print "$at(168,11735,11741)"} true;
    assume {:print "$track_abort(48,9):", $t49} $t49 == $t49;

    // $t13 := move($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:9+6
    $t13 := $t49;

    // goto L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:279:9+6
    goto L19;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:9+6
    assume {:print "$at(168,11633,11639)"} true;
L4:

    // $t50 := 16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:83+16
    assume {:print "$at(168,11707,11723)"} true;
    $t50 := 16;
    assume $IsValid'u64'($t50);

    // $t51 := error::out_of_range($t50) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:63+37
    call $t51 := $1_error_out_of_range($t50);
    if ($abort_flag) {
        assume {:print "$at(168,11687,11724)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t51) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:9+6
    assume {:print "$at(168,11633,11639)"} true;
    assume {:print "$track_abort(48,9):", $t51} $t51 == $t51;

    // $t13 := move($t51) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:9+6
    $t13 := $t51;

    // goto L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:278:9+6
    goto L19;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:9+6
    assume {:print "$at(168,11537,11543)"} true;
L2:

    // $t52 := 15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:79+14
    assume {:print "$at(168,11607,11621)"} true;
    $t52 := 15;
    assume $IsValid'u64'($t52);

    // $t53 := error::out_of_range($t52) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:59+35
    call $t53 := $1_error_out_of_range($t52);
    if ($abort_flag) {
        assume {:print "$at(168,11587,11622)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t53) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:9+6
    assume {:print "$at(168,11537,11543)"} true;
    assume {:print "$track_abort(48,9):", $t53} $t53 == $t53;

    // $t13 := move($t53) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:9+6
    $t13 := $t53;

    // goto L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:277:9+6
    goto L19;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:275:9+6
    assume {:print "$at(168,11342,11348)"} true;
L0:

    // $t54 := 18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:275:92+20
    assume {:print "$at(168,11425,11445)"} true;
    $t54 := 18;
    assume $IsValid'u64'($t54);

    // $t55 := error::invalid_argument($t54) on_abort goto L19 with $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:275:68+45
    call $t55 := $1_error_invalid_argument($t54);
    if ($abort_flag) {
        assume {:print "$at(168,11401,11446)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(48,9):", $t13} $t13 == $t13;
        goto L19;
    }

    // trace_abort($t55) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:275:9+6
    assume {:print "$at(168,11342,11348)"} true;
    assume {:print "$track_abort(48,9):", $t55} $t55 == $t55;

    // $t13 := move($t55) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:275:9+6
    $t13 := $t55;

    // goto L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:275:9+6
    goto L19;

    // label L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:309:5+1
    assume {:print "$at(168,12906,12907)"} true;
L18:

    // return $t35 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:309:5+1
    assume {:print "$at(168,12906,12907)"} true;
    $ret0 := $t35;
    return;

    // label L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:309:5+1
L19:

    // abort($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:309:5+1
    assume {:print "$at(168,12906,12907)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

    // label L22 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L22:

    // drop($t36) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L20 at <internal>:1:1+10
    goto L20;

}

// fun fungible_asset::asset_metadata [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:780:5+91
procedure {:inline 1} $1_fungible_asset_asset_metadata(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:780:5+1
    assume {:print "$at(168,33004,33005)"} true;
    assume {:print "$track_local(48,17,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::fungible_asset::FungibleAsset>.metadata($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:781:9+11
    assume {:print "$at(168,33078,33089)"} true;
    $t1 := $t0->$metadata;

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:781:9+11
    assume {:print "$track_return(48,17,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:782:5+1
    assume {:print "$at(168,33094,33095)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:782:5+1
    assume {:print "$at(168,33094,33095)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::burn_internal [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1019:5+256
procedure {:inline 1} $1_fungible_asset_burn_internal(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: int;
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1019:5+1
    assume {:print "$at(168,42566,42567)"} true;
    assume {:print "$track_local(48,23,0):", $t0} $t0 == $t0;

    // ($t3, $t4) := unpack 0x1::fungible_asset::FungibleAsset($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1022:13+66
    assume {:print "$at(168,42685,42751)"} true;
    $t3 := $t0->$metadata;
    $t4 := $t0->$amount;

    // trace_local[amount]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1022:13+66
    assume {:print "$track_local(48,23,1):", $t4} $t4 == $t4;

    // trace_local[metadata]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1022:13+66
    assume {:print "$track_local(48,23,2):", $t3} $t3 == $t3;

    // fungible_asset::decrease_supply<0x1::fungible_asset::Metadata>($t3, $t4) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1026:9+34
    assume {:print "$at(168,42766,42800)"} true;
    call $1_fungible_asset_decrease_supply'$1_fungible_asset_Metadata'($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(168,42766,42800)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,23):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1021:46+151
    assume {:print "$at(168,42671,42822)"} true;
    assume {:print "$track_return(48,23,0):", $t4} $t4 == $t4;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1028:5+1
    assume {:print "$at(168,42821,42822)"} true;
L1:

    // return $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1028:5+1
    assume {:print "$at(168,42821,42822)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1028:5+1
L2:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1028:5+1
    assume {:print "$at(168,42821,42822)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::create_store<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:821:5+765
procedure {:inline 1} $1_fungible_asset_create_store'$1_fungible_asset_Metadata'(_$t0: $1_object_ConstructorRef, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: $signer;
    var $t5: int;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: bool;
    var $t9: $1_fungible_asset_FungibleStore;
    var $t10: bool;
    var $t11: bool;
    var $t12: $1_aggregator_v2_Aggregator'u64';
    var $t13: $1_fungible_asset_ConcurrentFungibleBalance;
    var $t14: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:821:5+1
    assume {:print "$at(168,34639,34640)"} true;
    assume {:print "$track_local(48,25,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:821:5+1
    assume {:print "$track_local(48,25,1):", $t1} $t1 == $t1;

    // $t4 := object::generate_signer($t0) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:825:26+40
    assume {:print "$at(168,34799,34839)"} true;
    call $t4 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(168,34799,34839)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[$t4]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:825:26+40
    assume {:print "$track_local(48,25,2):", $t4} $t4 == $t4;

    // trace_local[store_obj]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:825:25+41
    assume {:print "$track_local(48,25,3):", $t4} $t4 == $t4;

    // $t6 := object::convert<#0, 0x1::fungible_asset::Metadata>($t1) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:827:23+25
    assume {:print "$at(168,34906,34931)"} true;
    call $t6 := $1_object_convert'$1_fungible_asset_Metadata_$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(168,34906,34931)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t7 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:828:22+1
    assume {:print "$at(168,34954,34955)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:829:21+5
    assume {:print "$at(168,34977,34982)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t9 := pack 0x1::fungible_asset::FungibleStore($t6, $t7, $t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:826:28+125
    assume {:print "$at(168,34868,34993)"} true;
    $t9 := $1_fungible_asset_FungibleStore($t6, $t7, $t8);

    // move_to<0x1::fungible_asset::FungibleStore>($t9, $t4) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:826:9+145
    if ($ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $t4->$addr, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(168,34849,34994)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := fungible_asset::is_untransferable<#0>($t1) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:832:13+27
    assume {:print "$at(168,35009,35036)"} true;
    call $t10 := $1_fungible_asset_is_untransferable'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(168,35009,35036)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // if ($t10) goto L0 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:832:9+101
    if ($t10) { goto L0; } else { goto L2; }

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:833:13+43
    assume {:print "$at(168,35052,35095)"} true;
L0:

    // object::set_untransferable($t0) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:833:13+43
    assume {:print "$at(168,35052,35095)"} true;
    call $1_object_set_untransferable($t0);
    if ($abort_flag) {
        assume {:print "$at(168,35052,35095)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:256:9+58
    assume {:print "$at(168,10485,10543)"} true;
L2:

    // $t11 := features::default_to_concurrent_fungible_balance_enabled() on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:256:9+58
    assume {:print "$at(168,10485,10543)"} true;
    call $t11 := $1_features_default_to_concurrent_fungible_balance_enabled();
    if ($abort_flag) {
        assume {:print "$at(168,10485,10543)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // if ($t11) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:836:9+203
    assume {:print "$at(168,35117,35320)"} true;
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:837:21+9
    assume {:print "$at(168,35185,35194)"} true;
L4:

    // $t12 := aggregator_v2::create_unbounded_aggregator<u64>() on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:838:26+44
    assume {:print "$at(168,35249,35293)"} true;
    call $t12 := $1_aggregator_v2_create_unbounded_aggregator'u64'();
    if ($abort_flag) {
        assume {:print "$at(168,35249,35293)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t13 := pack 0x1::fungible_asset::ConcurrentFungibleBalance($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:837:32+112
    assume {:print "$at(168,35196,35308)"} true;
    $t13 := $1_fungible_asset_ConcurrentFungibleBalance($t12);

    // move_to<0x1::fungible_asset::ConcurrentFungibleBalance>($t13, $t4) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:837:13+132
    if ($ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t4->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t4->$addr, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(168,35177,35309)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:842:9+67
    assume {:print "$at(168,35331,35398)"} true;
L5:

    // $t14 := object::object_from_constructor_ref<0x1::fungible_asset::FungibleStore>($t0) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:842:9+67
    assume {:print "$at(168,35331,35398)"} true;
    call $t14 := $1_object_object_from_constructor_ref'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,35331,35398)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,25):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_return[0]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:824:30+632
    assume {:print "$at(168,34772,35404)"} true;
    assume {:print "$track_return(48,25,0):", $t14} $t14 == $t14;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:824:30+632
    goto L6;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:836:9+203
    assume {:print "$at(168,35117,35320)"} true;
L3:

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:836:9+203
    assume {:print "$at(168,35117,35320)"} true;
    goto L5;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:843:5+1
    assume {:print "$at(168,35403,35404)"} true;
L6:

    // return $t14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:843:5+1
    assume {:print "$at(168,35403,35404)"} true;
    $ret0 := $t14;
    return;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:843:5+1
L7:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:843:5+1
    assume {:print "$at(168,35403,35404)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::decrease_supply<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1285:5+1030
procedure {:inline 1} $1_fungible_asset_decrease_supply'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_fungible_asset_Supply);
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_ConcurrentSupply);
    var $t10: $Mutation ($1_aggregator_v2_Aggregator'u128');
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: bool;
    var $t17: $Mutation ($1_fungible_asset_Supply);
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: $Mutation (int);
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_fungible_asset_Supply': $1_fungible_asset_Supply;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1285:5+1
    assume {:print "$at(168,53487,53488)"} true;
    assume {:print "$track_local(48,26,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1285:5+1
    assume {:print "$track_local(48,26,1):", $t1} $t1 == $t1;

    // $t4 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1286:23+1
    assume {:print "$at(168,53608,53609)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t1, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1286:13+11
    $t5 := $IsEqual'u64'($t1, $t4);

    // if ($t5) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1286:9+47
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1287:13+6
    assume {:print "$at(168,53625,53631)"} true;
L1:

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1287:13+6
    assume {:print "$at(168,53625,53631)"} true;
    goto L14;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1289:32+32
    assume {:print "$at(168,53674,53706)"} true;
L0:

    // $t6 := object::object_address<#0>($t0) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1289:32+32
    assume {:print "$at(168,53674,53706)"} true;
    call $t6 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,53674,53706)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[metadata_address]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1289:32+32
    assume {:print "$track_local(48,26,2):", $t6} $t6 == $t6;

    // $t8 := exists<0x1::fungible_asset::ConcurrentSupply>($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1291:13+42
    assume {:print "$at(168,53721,53763)"} true;
    $t8 := $ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6);

    // if ($t8) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1291:9+794
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1292:26+53
    assume {:print "$at(168,53792,53845)"} true;
L3:

    // $t9 := borrow_global<0x1::fungible_asset::ConcurrentSupply>($t6) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1292:26+53
    assume {:print "$at(168,53792,53845)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(168,53792,53845)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t10 := borrow_field<0x1::fungible_asset::ConcurrentSupply>.current($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1295:17+38
    assume {:print "$at(168,53885,53923)"} true;
    $t10 := $ChildMutation($t9, 0, $Dereference($t9)->$current);

    // $t11 := (u128)($t1) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1295:40+14
    call $t11 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(168,53908,53922)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t12 := aggregator_v2::try_sub<u128>($t10, $t11) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1295:17+38
    call $t12,$t10 := $1_aggregator_v2_try_sub'u128'($t10, $t11);
    if ($abort_flag) {
        assume {:print "$at(168,53885,53923)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // write_back[Reference($t9).current (0x1::aggregator_v2::Aggregator<u128>)]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1295:17+38
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_ConcurrentSupply'_current($Dereference($t9), $Dereference($t10)));

    // write_back[0x1::fungible_asset::ConcurrentSupply@]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1295:17+38
    $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // if ($t12) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1294:13+6
    assume {:print "$at(168,53860,53866)"} true;
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1294:13+6
L5:

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1285:102+933
    assume {:print "$at(168,53584,54517)"} true;
L6:

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1285:102+933
    assume {:print "$at(168,53584,54517)"} true;
    goto L14;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1296:37+17
    assume {:print "$at(168,53961,53978)"} true;
L4:

    // $t13 := 20 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1296:37+17
    assume {:print "$at(168,53961,53978)"} true;
    $t13 := 20;
    assume $IsValid'u64'($t13);

    // $t14 := error::out_of_range($t13) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1296:17+38
    call $t14 := $1_error_out_of_range($t13);
    if ($abort_flag) {
        assume {:print "$at(168,53941,53979)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1294:13+6
    assume {:print "$at(168,53860,53866)"} true;
    assume {:print "$track_abort(48,26):", $t14} $t14 == $t14;

    // $t7 := move($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1294:13+6
    $t7 := $t14;

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1294:13+6
    goto L15;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1298:20+32
    assume {:print "$at(168,54014,54046)"} true;
L2:

    // $t15 := exists<0x1::fungible_asset::Supply>($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1298:20+32
    assume {:print "$at(168,54014,54046)"} true;
    $t15 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t15) goto L8 else goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1298:16+501
    if ($t15) { goto L8; } else { goto L7; }

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:21+32
    assume {:print "$at(168,54070,54102)"} true;
L8:

    // $t16 := exists<0x1::fungible_asset::Supply>($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:21+32
    assume {:print "$at(168,54070,54102)"} true;
    $t16 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t16) goto L10 else goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:13+6
    if ($t16) { goto L10; } else { goto L9; }

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1300:26+43
    assume {:print "$at(168,54167,54210)"} true;
L10:

    // $t17 := borrow_global<0x1::fungible_asset::Supply>($t6) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1300:26+43
    assume {:print "$at(168,54167,54210)"} true;
    if (!$ResourceExists($1_fungible_asset_Supply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_Supply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(168,54167,54210)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[supply]($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1300:26+43
    $temp_0'$1_fungible_asset_Supply' := $Dereference($t17);
    assume {:print "$track_local(48,26,3):", $temp_0'$1_fungible_asset_Supply'} $temp_0'$1_fungible_asset_Supply' == $temp_0'$1_fungible_asset_Supply';

    // $t18 := get_field<0x1::fungible_asset::Supply>.current($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1302:17+14
    assume {:print "$at(168,54249,54263)"} true;
    $t18 := $Dereference($t17)->$current;

    // $t19 := (u128)($t1) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1302:35+16
    call $t19 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(168,54267,54283)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t20 := >=($t18, $t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1302:17+34
    call $t20 := $Ge($t18, $t19);

    // if ($t20) goto L12 else goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1301:13+6
    assume {:print "$at(168,54224,54230)"} true;
    if ($t20) { goto L12; } else { goto L11; }

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:30+14
    assume {:print "$at(168,54385,54399)"} true;
L12:

    // $t21 := get_field<0x1::fungible_asset::Supply>.current($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:30+14
    assume {:print "$at(168,54385,54399)"} true;
    $t21 := $Dereference($t17)->$current;

    // $t22 := (u128)($t1) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:47+16
    call $t22 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(168,54402,54418)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t23 := -($t21, $t22) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:30+33
    call $t23 := $Sub($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(168,54385,54418)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t24 := borrow_field<0x1::fungible_asset::Supply>.current($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:13+14
    $t24 := $ChildMutation($t17, 0, $Dereference($t17)->$current);

    // write_ref($t24, $t23) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:13+50
    $t24 := $UpdateMutation($t24, $t23);

    // write_back[Reference($t17).current (u128)]($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:13+50
    $t17 := $UpdateMutation($t17, $Update'$1_fungible_asset_Supply'_current($Dereference($t17), $Dereference($t24)));

    // pack_ref_deep($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:13+50

    // write_back[0x1::fungible_asset::Supply@]($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1305:13+50
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1298:54+381
    assume {:print "$at(168,54048,54429)"} true;
    goto L6;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1301:13+6
    assume {:print "$at(168,54224,54230)"} true;
L11:

    // pack_ref_deep($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1301:13+6
    assume {:print "$at(168,54224,54230)"} true;

    // drop($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1301:13+6

    // $t25 := 20 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1303:38+17
    assume {:print "$at(168,54322,54339)"} true;
    $t25 := 20;
    assume $IsValid'u64'($t25);

    // $t26 := error::invalid_state($t25) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1303:17+39
    call $t26 := $1_error_invalid_state($t25);
    if ($abort_flag) {
        assume {:print "$at(168,54301,54340)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1301:13+6
    assume {:print "$at(168,54224,54230)"} true;
    assume {:print "$track_abort(48,26):", $t26} $t26 == $t26;

    // $t7 := move($t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1301:13+6
    $t7 := $t26;

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1301:13+6
    goto L15;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:72+17
    assume {:print "$at(168,54121,54138)"} true;
L9:

    // $t27 := 21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:72+17
    assume {:print "$at(168,54121,54138)"} true;
    $t27 := 21;
    assume $IsValid'u64'($t27);

    // $t28 := error::not_found($t27) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:55+35
    call $t28 := $1_error_not_found($t27);
    if ($abort_flag) {
        assume {:print "$at(168,54104,54139)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:13+6
    assume {:print "$at(168,54062,54068)"} true;
    assume {:print "$track_abort(48,26):", $t28} $t28 == $t28;

    // $t7 := move($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:13+6
    $t7 := $t28;

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1299:13+6
    goto L15;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:21+5
    assume {:print "$at(168,54457,54462)"} true;
L7:

    // goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:21+5
    assume {:print "$at(168,54457,54462)"} true;
    goto L13;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:13+6
    goto L6;

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:45+17
L13:

    // $t29 := 21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:45+17
    assume {:print "$at(168,54481,54498)"} true;
    $t29 := 21;
    assume $IsValid'u64'($t29);

    // $t30 := error::not_found($t29) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:28+35
    call $t30 := $1_error_not_found($t29);
    if ($abort_flag) {
        assume {:print "$at(168,54464,54499)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,26):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t30) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:13+6
    assume {:print "$at(168,54449,54455)"} true;
    assume {:print "$track_abort(48,26):", $t30} $t30 == $t30;

    // $t7 := move($t30) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:13+6
    $t7 := $t30;

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1307:13+6
    goto L15;

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1309:5+1
    assume {:print "$at(168,54516,54517)"} true;
L14:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1309:5+1
    assume {:print "$at(168,54516,54517)"} true;
    return;

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1309:5+1
L15:

    // abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1309:5+1
    assume {:print "$at(168,54516,54517)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_dispatch_function<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:702:5+458
procedure {:inline 1} $1_fungible_asset_deposit_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $1_option_Option'$1_function_info_FunctionInfo';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_fungible_asset_FungibleStore;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: bool;
    var $t11: $1_fungible_asset_DispatchFunctionStore;
    var $t12: $1_option_Option'$1_function_info_FunctionInfo';
    var $t13: $1_option_Option'$1_function_info_FunctionInfo';
    var $t14: int;
    var $t15: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:702:5+1
    assume {:print "$at(168,29519,29520)"} true;
    assume {:print "$track_local(48,28,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$at(168,55087,55116)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,55087,55116)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[store_addr]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,28,1):", $t4} $t4 == $t4;

    // $t6 := exists<0x1::fungible_asset::FungibleStore>($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:17+33
    assume {:print "$at(168,55134,55167)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
L1:

    // $t7 := get_global<0x1::fungible_asset::FungibleStore>($t4) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(168,55223,55263)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t8 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:704:52+18
    assume {:print "$at(168,29757,29775)"} true;
    $t8 := $t7->$metadata;

    // $t9 := object::object_address<0x1::fungible_asset::Metadata>($t8) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:704:29+42
    call $t9 := $1_object_object_address'$1_fungible_asset_Metadata'($t8);
    if ($abort_flag) {
        assume {:print "$at(168,29734,29776)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[metadata_addr]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:704:29+42
    assume {:print "$track_local(48,28,2):", $t9} $t9 == $t9;

    // $t10 := exists<0x1::fungible_asset::DispatchFunctionStore>($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:705:12+44
    assume {:print "$at(168,29789,29833)"} true;
    $t10 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9);

    // if ($t10) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:705:9+185
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:706:13+51
    assume {:print "$at(168,29849,29900)"} true;
L3:

    // $t11 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t9) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:706:13+51
    assume {:print "$at(168,29849,29900)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(168,29849,29900)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t12 := get_field<0x1::fungible_asset::DispatchFunctionStore>.deposit_function($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:706:13+68
    $t12 := $t11->$deposit_function;

    // $t3 := $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:706:13+68
    $t3 := $t12;

    // trace_local[return]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:706:13+68
    assume {:print "$track_local(48,28,3):", $t12} $t12 == $t12;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:705:9+185
    assume {:print "$at(168,29786,29971)"} true;
L4:

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:705:9+185
    assume {:print "$at(168,29786,29971)"} true;
    assume {:print "$track_return(48,28,0):", $t3} $t3 == $t3;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:705:9+185
    goto L5;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:708:13+14
    assume {:print "$at(168,29947,29961)"} true;
L2:

    // $t13 := opaque begin: option::none<0x1::function_info::FunctionInfo>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:708:13+14
    assume {:print "$at(168,29947,29961)"} true;

    // assume And(WellFormed($t13), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec($t13)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:708:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::function_info::FunctionInfo>>($t13, option::spec_none<0x1::function_info::FunctionInfo>()) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:708:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t13, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t13 := opaque end: option::none<0x1::function_info::FunctionInfo>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:708:13+14

    // $t3 := $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:708:13+14
    $t3 := $t13;

    // trace_local[return]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:708:13+14
    assume {:print "$track_local(48,28,3):", $t13} $t13 == $t13;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:708:13+14
    goto L4;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
L0:

    // $t14 := 23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
    $t14 := 23;
    assume $IsValid'u64'($t14);

    // $t15 := error::not_found($t14) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:52+43
    call $t15 := $1_error_not_found($t14);
    if ($abort_flag) {
        assume {:print "$at(168,55169,55212)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,28):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_abort($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    assume {:print "$at(168,55126,55132)"} true;
    assume {:print "$track_abort(48,28):", $t15} $t15 == $t15;

    // $t5 := move($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    $t5 := $t15;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    goto L6;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:710:5+1
    assume {:print "$at(168,29976,29977)"} true;
L5:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:710:5+1
    assume {:print "$at(168,29976,29977)"} true;
    $ret0 := $t3;
    return;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:710:5+1
L6:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:710:5+1
    assume {:print "$at(168,29976,29977)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_sanity_check<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:940:5+474
procedure {:inline 1} $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: bool) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_fungible_asset_FungibleStore;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: $1_fungible_asset_FungibleStore;
    var $t9: bool;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $1_object_Object'$1_fungible_asset_Metadata';
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: bool;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:940:5+1
    assume {:print "$at(168,39448,39449)"} true;
    assume {:print "$track_local(48,29,0):", $t0} $t0 == $t0;

    // trace_local[abort_on_dispatch]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:940:5+1
    assume {:print "$track_local(48,29,1):", $t1} $t1 == $t1;

    // $t5 := object::object_address<#0>($t0) on_abort goto L10 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$at(168,55087,55116)"} true;
    call $t5 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,55087,55116)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_local[store_addr]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,29,2):", $t5} $t5 == $t5;

    // $t7 := exists<0x1::fungible_asset::FungibleStore>($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:17+33
    assume {:print "$at(168,55134,55167)"} true;
    $t7 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t5);

    // if ($t7) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
L1:

    // $t8 := get_global<0x1::fungible_asset::FungibleStore>($t5) on_abort goto L10 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(168,55223,55263)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_local[fa_store]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$track_local(48,29,3):", $t8} $t8 == $t8;

    // if ($t1) goto L2 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:13+18
    assume {:print "$at(168,39684,39702)"} true;
    if ($t1) { goto L2; } else { goto L3; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:13+71
L3:

    // $t9 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:13+71
    assume {:print "$at(168,39684,39755)"} true;
    $t9 := true;
    assume $IsValid'bool'($t9);

    // $t4 := $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:13+71
    $t4 := $t9;

    // trace_local[$t6]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:13+71
    assume {:print "$track_local(48,29,4):", $t9} $t9 == $t9;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:945:9+6
    assume {:print "$at(168,39663,39669)"} true;
L8:

    // if ($t4) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:945:9+6
    assume {:print "$at(168,39663,39669)"} true;
    if ($t4) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:18+15
    assume {:print "$at(168,39855,39870)"} true;
L5:

    // $t10 := get_field<0x1::fungible_asset::FungibleStore>.frozen($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:18+15
    assume {:print "$at(168,39855,39870)"} true;
    $t10 := $t8->$frozen;

    // if ($t10) goto L6 else goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:17+16
    if ($t10) { goto L6; } else { goto L7; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:943:53+323
    assume {:print "$at(168,39599,39922)"} true;
L7:

    // goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:943:53+323
    assume {:print "$at(168,39599,39922)"} true;
    goto L9;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:60+16
    assume {:print "$at(168,39897,39913)"} true;
L6:

    // $t11 := 3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:60+16
    assume {:print "$at(168,39897,39913)"} true;
    $t11 := 3;
    assume $IsValid'u64'($t11);

    // $t12 := error::permission_denied($t11) on_abort goto L10 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:35+42
    call $t12 := $1_error_permission_denied($t11);
    if ($abort_flag) {
        assume {:print "$at(168,39872,39914)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:9+6
    assume {:print "$at(168,39846,39852)"} true;
    assume {:print "$track_abort(48,29):", $t12} $t12 == $t12;

    // $t6 := move($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:9+6
    $t6 := $t12;

    // goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:949:9+6
    goto L10;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:945:9+6
    assume {:print "$at(168,39663,39669)"} true;
L4:

    // $t13 := 28 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:947:37+32
    assume {:print "$at(168,39793,39825)"} true;
    $t13 := 28;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L10 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:947:13+57
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(168,39769,39826)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_abort($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:945:9+6
    assume {:print "$at(168,39663,39669)"} true;
    assume {:print "$track_abort(48,29):", $t14} $t14 == $t14;

    // $t6 := move($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:945:9+6
    $t6 := $t14;

    // goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:945:9+6
    goto L10;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:66+17
    assume {:print "$at(168,39737,39754)"} true;
L2:

    // $t15 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:66+17
    assume {:print "$at(168,39737,39754)"} true;
    $t15 := $t8->$metadata;

    // $t16 := fungible_asset::has_deposit_dispatch_function($t15) on_abort goto L10 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:36+48
    call $t16 := $1_fungible_asset_has_deposit_dispatch_function($t15);
    if ($abort_flag) {
        assume {:print "$at(168,39707,39755)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // $t17 := !($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:35+49
    call $t17 := $Not($t16);

    // $t4 := $t17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:35+49
    $t4 := $t17;

    // trace_local[$t6]($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:35+49
    assume {:print "$track_local(48,29,4):", $t17} $t17 == $t17;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:946:35+49
    goto L8;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
L0:

    // $t18 := 23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
    $t18 := 23;
    assume $IsValid'u64'($t18);

    // $t19 := error::not_found($t18) on_abort goto L10 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:52+43
    call $t19 := $1_error_not_found($t18);
    if ($abort_flag) {
        assume {:print "$at(168,55169,55212)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(48,29):", $t6} $t6 == $t6;
        goto L10;
    }

    // trace_abort($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    assume {:print "$at(168,55126,55132)"} true;
    assume {:print "$track_abort(48,29):", $t19} $t19 == $t19;

    // $t6 := move($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    $t6 := $t19;

    // goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    goto L10;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:950:5+1
    assume {:print "$at(168,39921,39922)"} true;
L9:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:950:5+1
    assume {:print "$at(168,39921,39922)"} true;
    return;

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:950:5+1
L10:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:950:5+1
    assume {:print "$at(168,39921,39922)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun fungible_asset::generate_burn_ref [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:481:5+195
procedure {:inline 1} $1_fungible_asset_generate_burn_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_BurnRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_BurnRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:481:5+1
    assume {:print "$at(168,19987,19988)"} true;
    assume {:print "$track_local(48,35,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:482:24+62
    assume {:print "$at(168,20084,20146)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,20084,20146)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,35):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack 0x1::fungible_asset::BurnRef($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:483:9+20
    assume {:print "$at(168,20156,20176)"} true;
    $t3 := $1_fungible_asset_BurnRef($t1);

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:483:9+20
    assume {:print "$track_return(48,35,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:484:5+1
    assume {:print "$at(168,20181,20182)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:484:5+1
    assume {:print "$at(168,20181,20182)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:484:5+1
L2:

    // abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:484:5+1
    assume {:print "$at(168,20181,20182)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::generate_mint_ref [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:474:5+195
procedure {:inline 1} $1_fungible_asset_generate_mint_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_MintRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_MintRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:474:5+1
    assume {:print "$at(168,19569,19570)"} true;
    assume {:print "$track_local(48,36,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:475:24+62
    assume {:print "$at(168,19666,19728)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,19666,19728)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,36):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack 0x1::fungible_asset::MintRef($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:476:9+20
    assume {:print "$at(168,19738,19758)"} true;
    $t3 := $1_fungible_asset_MintRef($t1);

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:476:9+20
    assume {:print "$track_return(48,36,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:477:5+1
    assume {:print "$at(168,19763,19764)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:477:5+1
    assume {:print "$at(168,19763,19764)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:477:5+1
L2:

    // abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:477:5+1
    assume {:print "$at(168,19763,19764)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_deposit_dispatch_function [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:712:5+462
procedure {:inline 1} $1_fungible_asset_has_deposit_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:712:5+1
    assume {:print "$at(168,29983,29984)"} true;
    assume {:print "$track_local(48,43,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<0x1::fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:713:29+33
    assume {:print "$at(168,30112,30145)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,30112,30145)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,43):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:713:29+33
    assume {:print "$track_local(48,43,1):", $t4} $t4 == $t4;

    // $t6 := 0xa at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:29+21
    assume {:print "$at(168,30223,30244)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:12+38
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:12+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:54+44
L1:

    // $t8 := exists<0x1::fungible_asset::DispatchFunctionStore>($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:54+44
    assume {:print "$at(168,30248,30292)"} true;
    $t8 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // $t2 := $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:54+44
    $t2 := $t8;

    // trace_local[$t5]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:54+44
    assume {:print "$track_local(48,43,2):", $t8} $t8 == $t8;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:9+236
L5:

    // if ($t2) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:9+236
    assume {:print "$at(168,30203,30439)"} true;
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:30+51
    assume {:print "$at(168,30325,30376)"} true;
L3:

    // $t9 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:30+51
    assume {:print "$at(168,30325,30376)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(168,30325,30376)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,43):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<0x1::fungible_asset::DispatchFunctionStore>.deposit_function($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:29+69
    $t10 := $t9->$deposit_function;

    // $t11 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:13+86

    // assume WellFormed($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:13+86
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<0x1::function_info::FunctionInfo>($t10)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:13+86
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t11 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:13+86

    // $t3 := $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:13+86
    $t3 := $t11;

    // trace_local[return]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:716:13+86
    assume {:print "$track_local(48,43,3):", $t11} $t11 == $t11;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:9+236
    assume {:print "$at(168,30203,30439)"} true;
L4:

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:9+236
    assume {:print "$at(168,30203,30439)"} true;
    assume {:print "$track_return(48,43,0):", $t3} $t3 == $t3;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:9+236
    goto L6;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:718:13+5
    assume {:print "$at(168,30424,30429)"} true;
L2:

    // $t12 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:718:13+5
    assume {:print "$at(168,30424,30429)"} true;
    $t12 := false;
    assume $IsValid'bool'($t12);

    // $t3 := $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:718:13+5
    $t3 := $t12;

    // trace_local[return]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:718:13+5
    assume {:print "$track_local(48,43,3):", $t12} $t12 == $t12;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:718:13+5
    goto L4;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:12+86
    assume {:print "$at(168,30206,30292)"} true;
L0:

    // $t13 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:12+86
    assume {:print "$at(168,30206,30292)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // $t2 := $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:12+86
    $t2 := $t13;

    // trace_local[$t5]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:12+86
    assume {:print "$track_local(48,43,2):", $t13} $t13 == $t13;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:715:12+86
    goto L5;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:720:5+1
    assume {:print "$at(168,30444,30445)"} true;
L6:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:720:5+1
    assume {:print "$at(168,30444,30445)"} true;
    $ret0 := $t3;
    return;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:720:5+1
L7:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:720:5+1
    assume {:print "$at(168,30444,30445)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_withdraw_dispatch_function [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:732:5+465
procedure {:inline 1} $1_fungible_asset_has_withdraw_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:732:5+1
    assume {:print "$at(168,30917,30918)"} true;
    assume {:print "$track_local(48,45,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<0x1::fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:733:29+33
    assume {:print "$at(168,31047,31080)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,31047,31080)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,45):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:733:29+33
    assume {:print "$track_local(48,45,1):", $t4} $t4 == $t4;

    // $t6 := 0xa at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:30+21
    assume {:print "$at(168,31159,31180)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:13+38
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:13+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:55+44
L1:

    // $t8 := exists<0x1::fungible_asset::DispatchFunctionStore>($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:55+44
    assume {:print "$at(168,31184,31228)"} true;
    $t8 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // $t2 := $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:55+44
    $t2 := $t8;

    // trace_local[$t5]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:55+44
    assume {:print "$track_local(48,45,2):", $t8} $t8 == $t8;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:9+238
L5:

    // if ($t2) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:9+238
    assume {:print "$at(168,31138,31376)"} true;
    if ($t2) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:30+51
    assume {:print "$at(168,31261,31312)"} true;
L3:

    // $t9 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:30+51
    assume {:print "$at(168,31261,31312)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(168,31261,31312)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,45):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<0x1::fungible_asset::DispatchFunctionStore>.withdraw_function($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:29+70
    $t10 := $t9->$withdraw_function;

    // $t11 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:13+87

    // assume WellFormed($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:13+87
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<0x1::function_info::FunctionInfo>($t10)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:13+87
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t11 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:13+87

    // $t3 := $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:13+87
    $t3 := $t11;

    // trace_local[return]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:736:13+87
    assume {:print "$track_local(48,45,3):", $t11} $t11 == $t11;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:9+238
    assume {:print "$at(168,31138,31376)"} true;
L4:

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:9+238
    assume {:print "$at(168,31138,31376)"} true;
    assume {:print "$track_return(48,45,0):", $t3} $t3 == $t3;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:9+238
    goto L6;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:738:13+5
    assume {:print "$at(168,31361,31366)"} true;
L2:

    // $t12 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:738:13+5
    assume {:print "$at(168,31361,31366)"} true;
    $t12 := false;
    assume $IsValid'bool'($t12);

    // $t3 := $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:738:13+5
    $t3 := $t12;

    // trace_local[return]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:738:13+5
    assume {:print "$track_local(48,45,3):", $t12} $t12 == $t12;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:738:13+5
    goto L4;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:13+86
    assume {:print "$at(168,31142,31228)"} true;
L0:

    // $t13 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:13+86
    assume {:print "$at(168,31142,31228)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // $t2 := $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:13+86
    $t2 := $t13;

    // trace_local[$t5]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:13+86
    assume {:print "$track_local(48,45,2):", $t13} $t13 == $t13;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:735:13+86
    goto L5;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:740:5+1
    assume {:print "$at(168,31381,31382)"} true;
L6:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:740:5+1
    assume {:print "$at(168,31381,31382)"} true;
    $ret0 := $t3;
    return;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:740:5+1
L7:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:740:5+1
    assume {:print "$at(168,31381,31382)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::increase_supply<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1257:5+1087
procedure {:inline 1} $1_fungible_asset_increase_supply'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_fungible_asset_Supply);
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_ConcurrentSupply);
    var $t10: $Mutation ($1_aggregator_v2_Aggregator'u128');
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: $Mutation ($1_fungible_asset_Supply);
    var $t17: $1_option_Option'u128';
    var $t18: bool;
    var $t19: $Mutation ($1_option_Option'u128');
    var $t20: $Mutation (int);
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: $Mutation (int);
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_fungible_asset_Supply': $1_fungible_asset_Supply;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1257:5+1
    assume {:print "$at(168,52334,52335)"} true;
    assume {:print "$track_local(48,46,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1257:5+1
    assume {:print "$track_local(48,46,1):", $t1} $t1 == $t1;

    // $t4 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1258:23+1
    assume {:print "$at(168,52455,52456)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t1, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1258:13+11
    $t5 := $IsEqual'u64'($t1, $t4);

    // if ($t5) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1258:9+47
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1259:13+6
    assume {:print "$at(168,52472,52478)"} true;
L1:

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1259:13+6
    assume {:print "$at(168,52472,52478)"} true;
    goto L14;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1261:32+32
    assume {:print "$at(168,52521,52553)"} true;
L0:

    // $t6 := object::object_address<#0>($t0) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1261:32+32
    assume {:print "$at(168,52521,52553)"} true;
    call $t6 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,52521,52553)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[metadata_address]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1261:32+32
    assume {:print "$track_local(48,46,2):", $t6} $t6 == $t6;

    // $t8 := exists<0x1::fungible_asset::ConcurrentSupply>($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1263:13+42
    assume {:print "$at(168,52568,52610)"} true;
    $t8 := $ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6);

    // if ($t8) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1263:9+851
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1264:26+53
    assume {:print "$at(168,52639,52692)"} true;
L3:

    // $t9 := borrow_global<0x1::fungible_asset::ConcurrentSupply>($t6) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1264:26+53
    assume {:print "$at(168,52639,52692)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(168,52639,52692)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t10 := borrow_field<0x1::fungible_asset::ConcurrentSupply>.current($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1266:17+38
    assume {:print "$at(168,52731,52769)"} true;
    $t10 := $ChildMutation($t9, 0, $Dereference($t9)->$current);

    // $t11 := (u128)($t1) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1266:40+14
    call $t11 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(168,52754,52768)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t12 := aggregator_v2::try_add<u128>($t10, $t11) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1266:17+38
    call $t12,$t10 := $1_aggregator_v2_try_add'u128'($t10, $t11);
    if ($abort_flag) {
        assume {:print "$at(168,52731,52769)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // write_back[Reference($t9).current (0x1::aggregator_v2::Aggregator<u128>)]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1266:17+38
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_ConcurrentSupply'_current($Dereference($t9), $Dereference($t10)));

    // write_back[0x1::fungible_asset::ConcurrentSupply@]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1266:17+38
    $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // if ($t12) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1265:13+6
    assume {:print "$at(168,52706,52712)"} true;
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1265:13+6
L5:

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1257:102+990
    assume {:print "$at(168,52431,53421)"} true;
L6:

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1257:102+990
    assume {:print "$at(168,52431,53421)"} true;
    goto L14;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1267:37+20
    assume {:print "$at(168,52807,52827)"} true;
L4:

    // $t13 := 5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1267:37+20
    assume {:print "$at(168,52807,52827)"} true;
    $t13 := 5;
    assume $IsValid'u64'($t13);

    // $t14 := error::out_of_range($t13) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1267:17+41
    call $t14 := $1_error_out_of_range($t13);
    if ($abort_flag) {
        assume {:print "$at(168,52787,52828)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1265:13+6
    assume {:print "$at(168,52706,52712)"} true;
    assume {:print "$track_abort(48,46):", $t14} $t14 == $t14;

    // $t7 := move($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1265:13+6
    $t7 := $t14;

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1265:13+6
    goto L15;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1269:20+32
    assume {:print "$at(168,52863,52895)"} true;
L2:

    // $t15 := exists<0x1::fungible_asset::Supply>($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1269:20+32
    assume {:print "$at(168,52863,52895)"} true;
    $t15 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t15) goto L8 else goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1269:16+556
    if ($t15) { goto L8; } else { goto L7; }

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1270:26+43
    assume {:print "$at(168,52924,52967)"} true;
L8:

    // $t16 := borrow_global<0x1::fungible_asset::Supply>($t6) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1270:26+43
    assume {:print "$at(168,52924,52967)"} true;
    if (!$ResourceExists($1_fungible_asset_Supply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_Supply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(168,52924,52967)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[supply]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1270:26+43
    $temp_0'$1_fungible_asset_Supply' := $Dereference($t16);
    assume {:print "$track_local(48,46,3):", $temp_0'$1_fungible_asset_Supply'} $temp_0'$1_fungible_asset_Supply' == $temp_0'$1_fungible_asset_Supply';

    // $t17 := get_field<0x1::fungible_asset::Supply>.maximum($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1271:33+15
    assume {:print "$at(168,53001,53016)"} true;
    $t17 := $Dereference($t16)->$maximum;

    // $t18 := opaque begin: option::is_some<u128>($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1271:17+32

    // assume WellFormed($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1271:17+32
    assume $IsValid'bool'($t18);

    // assume Eq<bool>($t18, option::spec_is_some<u128>($t17)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1271:17+32
    assume $IsEqual'bool'($t18, $1_option_spec_is_some'u128'($t17));

    // $t18 := opaque end: option::is_some<u128>($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1271:17+32

    // if ($t18) goto L9 else goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1271:13+288
    if ($t18) { goto L9; } else { goto L11; }

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1272:47+19
    assume {:print "$at(168,53067,53086)"} true;
L9:

    // $t19 := borrow_field<0x1::fungible_asset::Supply>.maximum($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1272:47+19
    assume {:print "$at(168,53067,53086)"} true;
    $t19 := $ChildMutation($t16, 1, $Dereference($t16)->$maximum);

    // $t20 := option::borrow_mut<u128>($t19) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1272:28+39
    call $t20,$t19 := $1_option_borrow_mut'u128'($t19);
    if ($abort_flag) {
        assume {:print "$at(168,53048,53087)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t21 := read_ref($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1272:27+40
    $t21 := $Dereference($t20);

    // write_back[Reference($t16).maximum (0x1::option::Option<u128>)]($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1272:27+40
    $t16 := $UpdateMutation($t16, $Update'$1_fungible_asset_Supply'_maximum($Dereference($t16), $Dereference($t19)));

    // $t22 := get_field<0x1::fungible_asset::Supply>.current($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1274:27+14
    assume {:print "$at(168,53140,53154)"} true;
    $t22 := $Dereference($t16)->$current;

    // $t23 := -($t21, $t22) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1274:21+20
    call $t23 := $Sub($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(168,53134,53154)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t24 := (u128)($t1) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1274:45+16
    call $t24 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(168,53158,53174)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t25 := >=($t23, $t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1274:21+40
    call $t25 := $Ge($t23, $t24);

    // if ($t25) goto L13 else goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6
    assume {:print "$at(168,53105,53111)"} true;
    if ($t25) { goto L13; } else { goto L12; }

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6
L13:

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:30+14
    assume {:print "$at(168,53300,53314)"} true;
L11:

    // $t26 := get_field<0x1::fungible_asset::Supply>.current($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:30+14
    assume {:print "$at(168,53300,53314)"} true;
    $t26 := $Dereference($t16)->$current;

    // $t27 := (u128)($t1) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:47+16
    call $t27 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(168,53317,53333)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t28 := +($t26, $t27) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:30+33
    call $t28 := $AddU128($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(168,53300,53333)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t29 := borrow_field<0x1::fungible_asset::Supply>.current($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:13+14
    $t29 := $ChildMutation($t16, 0, $Dereference($t16)->$current);

    // write_ref($t29, $t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:13+50
    $t29 := $UpdateMutation($t29, $t28);

    // write_back[Reference($t16).current (u128)]($t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:13+50
    $t16 := $UpdateMutation($t16, $Update'$1_fungible_asset_Supply'_current($Dereference($t16), $Dereference($t29)));

    // pack_ref_deep($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:13+50

    // write_back[0x1::fungible_asset::Supply@]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:13+50
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1278:13+50
    goto L6;

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6
    assume {:print "$at(168,53105,53111)"} true;
L12:

    // pack_ref_deep($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6
    assume {:print "$at(168,53105,53111)"} true;

    // write_back[0x1::fungible_asset::Supply@]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // drop($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6

    // $t30 := 5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1275:41+20
    assume {:print "$at(168,53216,53236)"} true;
    $t30 := 5;
    assume $IsValid'u64'($t30);

    // $t31 := error::out_of_range($t30) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1275:21+41
    call $t31 := $1_error_out_of_range($t30);
    if ($abort_flag) {
        assume {:print "$at(168,53196,53237)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6
    assume {:print "$at(168,53105,53111)"} true;
    assume {:print "$track_abort(48,46):", $t31} $t31 == $t31;

    // $t7 := move($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6
    $t7 := $t31;

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1273:17+6
    goto L15;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1280:36+17
    assume {:print "$at(168,53387,53404)"} true;
L7:

    // $t32 := 21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1280:36+17
    assume {:print "$at(168,53387,53404)"} true;
    $t32 := 21;
    assume $IsValid'u64'($t32);

    // $t33 := error::not_found($t32) on_abort goto L15 with $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1280:19+35
    call $t33 := $1_error_not_found($t32);
    if ($abort_flag) {
        assume {:print "$at(168,53370,53405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(48,46):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_abort($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1280:13+41
    assume {:print "$at(168,53364,53405)"} true;
    assume {:print "$track_abort(48,46):", $t33} $t33 == $t33;

    // $t7 := move($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1280:13+41
    $t7 := $t33;

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1280:13+41
    goto L15;

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1282:5+1
    assume {:print "$at(168,53420,53421)"} true;
L14:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1282:5+1
    assume {:print "$at(168,53420,53421)"} true;
    return;

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1282:5+1
L15:

    // abort($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1282:5+1
    assume {:print "$at(168,53420,53421)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun fungible_asset::metadata_from_asset [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:619:5+96
procedure {:inline 1} $1_fungible_asset_metadata_from_asset(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fa]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:619:5+1
    assume {:print "$at(168,26013,26014)"} true;
    assume {:print "$track_local(48,52,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::fungible_asset::FungibleAsset>.metadata($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:620:9+11
    assume {:print "$at(168,26092,26103)"} true;
    $t1 := $t0->$metadata;

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:620:9+11
    assume {:print "$track_return(48,52,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:621:5+1
    assume {:print "$at(168,26108,26109)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:621:5+1
    assume {:print "$at(168,26108,26109)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::mint_internal [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:968:5+271
procedure {:inline 1} $1_fungible_asset_mint_internal(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_fungible_asset_FungibleAsset;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:968:5+1
    assume {:print "$at(168,40762,40763)"} true;
    assume {:print "$track_local(48,54,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:968:5+1
    assume {:print "$track_local(48,54,1):", $t1} $t1 == $t1;

    // fungible_asset::increase_supply<0x1::fungible_asset::Metadata>($t0, $t1) on_abort goto L2 with $t2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:972:9+34
    assume {:print "$at(168,40917,40951)"} true;
    call $1_fungible_asset_increase_supply'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(168,40917,40951)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(48,54):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack 0x1::fungible_asset::FungibleAsset($t0, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:973:9+66
    assume {:print "$at(168,40961,41027)"} true;
    $t3 := $1_fungible_asset_FungibleAsset($t0, $t1);

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:971:56+126
    assume {:print "$at(168,40907,41033)"} true;
    assume {:print "$track_return(48,54,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:977:5+1
    assume {:print "$at(168,41032,41033)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:977:5+1
    assume {:print "$at(168,41032,41033)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:977:5+1
L2:

    // abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:977:5+1
    assume {:print "$at(168,41032,41033)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::store_exists [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:603:5+88
procedure {:inline 1} $1_fungible_asset_store_exists(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:603:5+1
    assume {:print "$at(168,25434,25435)"} true;
    assume {:print "$track_local(48,65,0):", $t0} $t0 == $t0;

    // $t1 := exists<0x1::fungible_asset::FungibleStore>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:609:9+28
    assume {:print "$at(168,25660,25688)"} true;
    $t1 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:609:9+28
    assume {:print "$track_return(48,65,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:605:5+1
    assume {:print "$at(168,25521,25522)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:605:5+1
    assume {:print "$at(168,25521,25522)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::store_metadata<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:625:5+147
procedure {:inline 1} $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: $1_fungible_asset_FungibleStore;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:625:5+1
    assume {:print "$at(168,26174,26175)"} true;
    assume {:print "$track_local(48,66,0):", $t0} $t0 == $t0;

    // $t2 := object::object_address<#0>($t0) on_abort goto L3 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$at(168,55087,55116)"} true;
    call $t2 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,55087,55116)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,66):", $t3} $t3 == $t3;
        goto L3;
    }

    // trace_local[store_addr]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,66,1):", $t2} $t2 == $t2;

    // $t4 := exists<0x1::fungible_asset::FungibleStore>($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:17+33
    assume {:print "$at(168,55134,55167)"} true;
    $t4 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2);

    // if ($t4) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
L1:

    // $t5 := get_global<0x1::fungible_asset::FungibleStore>($t2) on_abort goto L3 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t2);
    }
    if ($abort_flag) {
        assume {:print "$at(168,55223,55263)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,66):", $t3} $t3 == $t3;
        goto L3;
    }

    // $t6 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:626:9+38
    assume {:print "$at(168,26277,26315)"} true;
    $t6 := $t5->$metadata;

    // trace_return[0]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:626:9+38
    assume {:print "$track_return(48,66,0):", $t6} $t6 == $t6;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:626:9+38
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
L0:

    // $t7 := 23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
    $t7 := 23;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L3 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:52+43
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(168,55169,55212)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(48,66):", $t3} $t3 == $t3;
        goto L3;
    }

    // trace_abort($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    assume {:print "$at(168,55126,55132)"} true;
    assume {:print "$track_abort(48,66):", $t8} $t8 == $t8;

    // $t3 := move($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    $t3 := $t8;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:627:5+1
    assume {:print "$at(168,26320,26321)"} true;
L2:

    // return $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:627:5+1
    assume {:print "$at(168,26320,26321)"} true;
    $ret0 := $t6;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:627:5+1
L3:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:627:5+1
    assume {:print "$at(168,26320,26321)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun fungible_asset::unchecked_deposit [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1203:5+335
procedure {:inline 1} $1_fungible_asset_unchecked_deposit(_$t0: int, _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: $Mutation ($1_fungible_asset_FungibleStore);
    var $t6: bool;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: bool;
    var $t11: $Mutation ($1_fungible_asset_FungibleStore);
    var $t12: int;
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: bool;
    var $t15: int;
    var $t16: bool;
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: bool;
    var $t21: $Mutation ($1_fungible_asset_ConcurrentFungibleBalance);
    var $t22: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t23: int;
    var $t24: bool;
    var $t25: $1_fungible_asset_Deposit;
    var $t26: int;
    var $t27: int;
    var $t28: $Mutation (int);
    var $t29: bool;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t0: int;
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store_addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1203:5+1
    assume {:print "$at(168,50148,50149)"} true;
    assume {:print "$track_local(48,71,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1203:5+1
    assume {:print "$track_local(48,71,1):", $t1} $t1 == $t1;

    // trace_local[store_addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1183:16+39
    assume {:print "$at(168,49264,49303)"} true;
    assume {:print "$track_local(48,71,2):", $t0} $t0 == $t0;

    // ($t8, $t9) := unpack 0x1::fungible_asset::FungibleAsset($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1187:13+34
    assume {:print "$at(168,49435,49469)"} true;
    $t8 := $t1->$metadata;
    $t9 := $t1->$amount;

    // trace_local[amount]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1187:13+34
    assume {:print "$track_local(48,71,3):", $t9} $t9 == $t9;

    // trace_local[metadata]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1187:13+34
    assume {:print "$track_local(48,71,4):", $t8} $t8 == $t8;

    // $t10 := exists<0x1::fungible_asset::FungibleStore>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1188:17+33
    assume {:print "$at(168,49492,49525)"} true;
    $t10 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // if ($t10) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1188:9+6
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1189:21+44
    assume {:print "$at(168,49593,49637)"} true;
L1:

    // $t11 := borrow_global<0x1::fungible_asset::FungibleStore>($t0) on_abort goto L16 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1189:21+44
    assume {:print "$at(168,49593,49637)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(168,49593,49637)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // trace_local[store]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1189:21+44
    $temp_0'$1_fungible_asset_FungibleStore' := $Dereference($t11);
    assume {:print "$track_local(48,71,5):", $temp_0'$1_fungible_asset_FungibleStore'} $temp_0'$1_fungible_asset_FungibleStore' == $temp_0'$1_fungible_asset_FungibleStore';

    // $t13 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:29+14
    assume {:print "$at(168,49667,49681)"} true;
    $t13 := $Dereference($t11)->$metadata;

    // $t14 := ==($t8, $t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:17+26
    $t14 := $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t8, $t13);

    // if ($t14) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:9+6
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1192:13+6
    assume {:print "$at(168,49758,49764)"} true;
L3:

    // $t15 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1192:23+1
    assume {:print "$at(168,49768,49769)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t16 := !=($t9, $t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1192:13+11
    $t16 := !$IsEqual'u64'($t9, $t15);

    // if ($t16) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1192:9+366
    if ($t16) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+13
    assume {:print "$at(168,49789,49802)"} true;
L5:

    // $t17 := get_field<0x1::fungible_asset::FungibleStore>.balance($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+13
    assume {:print "$at(168,49789,49802)"} true;
    $t17 := $Dereference($t11)->$balance;

    // $t18 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:34+1
    $t18 := 0;
    assume $IsValid'u64'($t18);

    // $t19 := ==($t17, $t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+18
    $t19 := $IsEqual'u64'($t17, $t18);

    // if ($t19) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+75
    if ($t19) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:614:16+41
    assume {:print "$at(168,25841,25882)"} true;
L7:

    // $t20 := exists<0x1::fungible_asset::ConcurrentFungibleBalance>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:615:9+40
    assume {:print "$at(168,25915,25955)"} true;
    $t20 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0);

    // $t6 := $t20 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:615:9+40
    $t6 := $t20;

    // trace_local[$t7]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:615:9+40
    assume {:print "$track_local(48,71,6):", $t20} $t20 == $t20;

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:13+324
    assume {:print "$at(168,49785,50109)"} true;
L14:

    // if ($t6) goto L9 else goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:13+324
    assume {:print "$at(168,49785,50109)"} true;
    if ($t6) { goto L9; } else { goto L8; }

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:94+166
L9:

    // drop($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:94+166
    assume {:print "$at(168,49866,50032)"} true;

    // $t21 := borrow_global<0x1::fungible_asset::ConcurrentFungibleBalance>($t0) on_abort goto L16 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1194:40+56
    assume {:print "$at(168,49907,49963)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t21 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(168,49907,49963)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // $t22 := borrow_field<0x1::fungible_asset::ConcurrentFungibleBalance>.balance($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1195:17+36
    assume {:print "$at(168,49981,50017)"} true;
    $t22 := $ChildMutation($t21, 0, $Dereference($t21)->$balance);

    // aggregator_v2::add<u64>($t22, $t9) on_abort goto L16 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1195:17+36
    call $t22 := $1_aggregator_v2_add'u64'($t22, $t9);
    if ($abort_flag) {
        assume {:print "$at(168,49981,50017)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // write_back[Reference($t21).balance (0x1::aggregator_v2::Aggregator<u64>)]($t22) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1195:17+36
    $t21 := $UpdateMutation($t21, $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance($Dereference($t21), $Dereference($t22)));

    // write_back[0x1::fungible_asset::ConcurrentFungibleBalance@]($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1195:17+36
    $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1200:9+6
    assume {:print "$at(168,50130,50136)"} true;
L13:

    // trace_local[$t18]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1200:9+6
    assume {:print "$at(168,50130,50136)"} true;
    assume {:print "$track_local(48,71,7):", $t9} $t9 == $t9;

    // $t23 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1208:23+1
    assume {:print "$at(168,50399,50400)"} true;
    $t23 := 0;
    assume $IsValid'u64'($t23);

    // $t24 := !=($t9, $t23) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1208:13+11
    $t24 := !$IsEqual'u64'($t9, $t23);

    // if ($t24) goto L10 else goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1208:9+92
    if ($t24) { goto L10; } else { goto L12; }

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1209:42+10
    assume {:print "$at(168,50445,50455)"} true;
L10:

    // $t25 := pack 0x1::fungible_asset::Deposit($t0, $t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1209:25+37
    assume {:print "$at(168,50428,50465)"} true;
    $t25 := $1_fungible_asset_Deposit($t0, $t9);

    // opaque begin: event::emit<0x1::fungible_asset::Deposit>($t25) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1209:13+50

    // opaque end: event::emit<0x1::fungible_asset::Deposit>($t25) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1209:13+50

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1208:9+92
    assume {:print "$at(168,50385,50477)"} true;
L12:

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1208:9+92
    assume {:print "$at(168,50385,50477)"} true;
    goto L15;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1197:33+13
    assume {:print "$at(168,50072,50085)"} true;
L8:

    // $t26 := get_field<0x1::fungible_asset::FungibleStore>.balance($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1197:33+13
    assume {:print "$at(168,50072,50085)"} true;
    $t26 := $Dereference($t11)->$balance;

    // $t27 := +($t26, $t9) on_abort goto L16 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1197:33+22
    call $t27 := $AddU64($t26, $t9);
    if ($abort_flag) {
        assume {:print "$at(168,50072,50094)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // $t28 := borrow_field<0x1::fungible_asset::FungibleStore>.balance($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1197:17+13
    $t28 := $ChildMutation($t11, 1, $Dereference($t11)->$balance);

    // write_ref($t28, $t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1197:17+38
    $t28 := $UpdateMutation($t28, $t27);

    // write_back[Reference($t11).balance (u64)]($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1197:17+38
    $t11 := $UpdateMutation($t11, $Update'$1_fungible_asset_FungibleStore'_balance($Dereference($t11), $Dereference($t28)));

    // write_back[0x1::fungible_asset::FungibleStore@]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1197:17+38
    $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1197:17+38
    goto L13;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+75
    assume {:print "$at(168,49789,49864)"} true;
L6:

    // $t29 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+75
    assume {:print "$at(168,49789,49864)"} true;
    $t29 := false;
    assume $IsValid'bool'($t29);

    // $t6 := $t29 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+75
    $t6 := $t29;

    // trace_local[$t7]($t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+75
    assume {:print "$track_local(48,71,6):", $t29} $t29 == $t29;

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1193:17+75
    goto L14;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1192:9+366
    assume {:print "$at(168,49754,50120)"} true;
L4:

    // drop($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1192:9+366
    assume {:print "$at(168,49754,50120)"} true;

    // goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1192:9+366
    goto L13;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:9+6
    assume {:print "$at(168,49647,49653)"} true;
L2:

    // drop($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:9+6
    assume {:print "$at(168,49647,49653)"} true;

    // $t30 := 11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:69+34
    $t30 := 11;
    assume $IsValid'u64'($t30);

    // $t31 := error::invalid_argument($t30) on_abort goto L16 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:45+59
    call $t31 := $1_error_invalid_argument($t30);
    if ($abort_flag) {
        assume {:print "$at(168,49683,49742)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // trace_abort($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:9+6
    assume {:print "$at(168,49647,49653)"} true;
    assume {:print "$track_abort(48,71):", $t31} $t31 == $t31;

    // $t12 := move($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:9+6
    $t12 := $t31;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1190:9+6
    goto L16;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1188:69+25
    assume {:print "$at(168,49544,49569)"} true;
L0:

    // $t32 := 23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1188:69+25
    assume {:print "$at(168,49544,49569)"} true;
    $t32 := 23;
    assume $IsValid'u64'($t32);

    // $t33 := error::not_found($t32) on_abort goto L16 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1188:52+43
    call $t33 := $1_error_not_found($t32);
    if ($abort_flag) {
        assume {:print "$at(168,49527,49570)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(48,71):", $t12} $t12 == $t12;
        goto L16;
    }

    // trace_abort($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1188:9+6
    assume {:print "$at(168,49484,49490)"} true;
    assume {:print "$track_abort(48,71):", $t33} $t33 == $t33;

    // $t12 := move($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1188:9+6
    $t12 := $t33;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1188:9+6
    goto L16;

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1211:5+1
    assume {:print "$at(168,50482,50483)"} true;
L15:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1211:5+1
    assume {:print "$at(168,50482,50483)"} true;
    return;

    // label L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1211:5+1
L16:

    // abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1211:5+1
    assume {:print "$at(168,50482,50483)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun fungible_asset::unchecked_withdraw [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1221:5+362
procedure {:inline 1} $1_fungible_asset_unchecked_withdraw(_$t0: int, _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_fungible_asset_FungibleStore);
    var $t5: $1_object_Object'$1_fungible_asset_Metadata';
    var $t6: bool;
    var $t7: $1_fungible_asset_FungibleAsset;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_FungibleStore);
    var $t10: int;
    var $t11: $1_object_Object'$1_fungible_asset_Metadata';
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: bool;
    var $t18: $Mutation ($1_fungible_asset_ConcurrentFungibleBalance);
    var $t19: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t20: bool;
    var $t21: $1_fungible_asset_FungibleAsset;
    var $t22: int;
    var $t23: bool;
    var $t24: $1_fungible_asset_Withdraw;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: $Mutation (int);
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store_addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1221:5+1
    assume {:print "$at(168,50807,50808)"} true;
    assume {:print "$track_local(48,73,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1221:5+1
    assume {:print "$track_local(48,73,1):", $t1} $t1 == $t1;

    // trace_local[store_addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1233:16+33
    assume {:print "$at(168,51266,51299)"} true;
    assume {:print "$track_local(48,73,2):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1233:16+33
    assume {:print "$track_local(48,73,3):", $t1} $t1 == $t1;

    // $t8 := exists<0x1::fungible_asset::FungibleStore>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1237:17+33
    assume {:print "$at(168,51440,51473)"} true;
    $t8 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // if ($t8) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1237:9+6
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1239:21+44
    assume {:print "$at(168,51542,51586)"} true;
L1:

    // $t9 := borrow_global<0x1::fungible_asset::FungibleStore>($t0) on_abort goto L18 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1239:21+44
    assume {:print "$at(168,51542,51586)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(168,51542,51586)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // trace_local[store]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1239:21+44
    $temp_0'$1_fungible_asset_FungibleStore' := $Dereference($t9);
    assume {:print "$track_local(48,73,4):", $temp_0'$1_fungible_asset_FungibleStore'} $temp_0'$1_fungible_asset_FungibleStore' == $temp_0'$1_fungible_asset_FungibleStore';

    // $t11 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1240:24+14
    assume {:print "$at(168,51611,51625)"} true;
    $t11 := $Dereference($t9)->$metadata;

    // trace_local[metadata]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1240:24+14
    assume {:print "$track_local(48,73,5):", $t11} $t11 == $t11;

    // $t12 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1241:23+1
    assume {:print "$at(168,51649,51650)"} true;
    $t12 := 0;
    assume $IsValid'u64'($t12);

    // $t13 := !=($t1, $t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1241:13+11
    $t13 := !$IsEqual'u64'($t1, $t12);

    // if ($t13) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1241:9+583
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+13
    assume {:print "$at(168,51670,51683)"} true;
L3:

    // $t14 := get_field<0x1::fungible_asset::FungibleStore>.balance($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+13
    assume {:print "$at(168,51670,51683)"} true;
    $t14 := $Dereference($t9)->$balance;

    // $t15 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:34+1
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t16 := ==($t14, $t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+18
    $t16 := $IsEqual'u64'($t14, $t15);

    // if ($t16) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+75
    if ($t16) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:614:16+41
    assume {:print "$at(168,25841,25882)"} true;
L5:

    // $t17 := exists<0x1::fungible_asset::ConcurrentFungibleBalance>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:615:9+40
    assume {:print "$at(168,25915,25955)"} true;
    $t17 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0);

    // $t6 := $t17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:615:9+40
    $t6 := $t17;

    // trace_local[$t6]($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:615:9+40
    assume {:print "$track_local(48,73,6):", $t17} $t17 == $t17;

    // label L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:13+541
    assume {:print "$at(168,51666,52207)"} true;
L16:

    // if ($t6) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:13+541
    assume {:print "$at(168,51666,52207)"} true;
    if ($t6) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:94+285
L7:

    // drop($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:94+285
    assume {:print "$at(168,51747,52032)"} true;

    // $t18 := borrow_global<0x1::fungible_asset::ConcurrentFungibleBalance>($t0) on_abort goto L18 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1243:40+56
    assume {:print "$at(168,51788,51844)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(168,51788,51844)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // $t19 := borrow_field<0x1::fungible_asset::ConcurrentFungibleBalance>.balance($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1245:21+40
    assume {:print "$at(168,51891,51931)"} true;
    $t19 := $ChildMutation($t18, 0, $Dereference($t18)->$balance);

    // $t20 := aggregator_v2::try_sub<u64>($t19, $t1) on_abort goto L18 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1245:21+40
    call $t20,$t19 := $1_aggregator_v2_try_sub'u64'($t19, $t1);
    if ($abort_flag) {
        assume {:print "$at(168,51891,51931)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // write_back[Reference($t18).balance (0x1::aggregator_v2::Aggregator<u64>)]($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1245:21+40
    $t18 := $UpdateMutation($t18, $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance($Dereference($t18), $Dereference($t19)));

    // write_back[0x1::fungible_asset::ConcurrentFungibleBalance@]($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1245:21+40
    $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $GlobalLocationAddress($t18),
        $Dereference($t18));

    // if ($t20) goto L9 else goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1244:17+6
    assume {:print "$at(168,51862,51868)"} true;
    if ($t20) { goto L9; } else { goto L8; }

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1244:17+6
L9:

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1253:25+8
    assume {:print "$at(168,52244,52252)"} true;
L10:

    // $t21 := pack 0x1::fungible_asset::FungibleAsset($t11, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1253:9+34
    assume {:print "$at(168,52228,52262)"} true;
    $t21 := $1_fungible_asset_FungibleAsset($t11, $t1);

    // trace_local[fa]($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1253:9+34
    assume {:print "$track_local(48,73,7):", $t21} $t21 == $t21;

    // $t22 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1226:23+1
    assume {:print "$at(168,51062,51063)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := !=($t1, $t22) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1226:13+11
    $t23 := !$IsEqual'u64'($t1, $t22);

    // if ($t23) goto L11 else goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1226:9+103
    if ($t23) { goto L11; } else { goto L13; }

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1227:53+10
    assume {:print "$at(168,51119,51129)"} true;
L11:

    // $t24 := pack 0x1::fungible_asset::Withdraw($t0, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1227:35+38
    assume {:print "$at(168,51101,51139)"} true;
    $t24 := $1_fungible_asset_Withdraw($t0, $t1);

    // opaque begin: event::emit<0x1::fungible_asset::Withdraw>($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1227:13+61

    // opaque end: event::emit<0x1::fungible_asset::Withdraw>($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1227:13+61

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1224:72+203
    assume {:print "$at(168,50966,51169)"} true;
L13:

    // trace_return[0]($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1224:72+203
    assume {:print "$at(168,50966,51169)"} true;
    assume {:print "$track_return(48,73,0):", $t21} $t21 == $t21;

    // goto L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1224:72+203
    goto L17;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1246:45+21
    assume {:print "$at(168,51977,51998)"} true;
L8:

    // $t25 := 4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1246:45+21
    assume {:print "$at(168,51977,51998)"} true;
    $t25 := 4;
    assume $IsValid'u64'($t25);

    // $t26 := error::invalid_argument($t25) on_abort goto L18 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1246:21+46
    call $t26 := $1_error_invalid_argument($t25);
    if ($abort_flag) {
        assume {:print "$at(168,51953,51999)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // trace_abort($t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1244:17+6
    assume {:print "$at(168,51862,51868)"} true;
    assume {:print "$track_abort(48,73):", $t26} $t26 == $t26;

    // $t10 := move($t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1244:17+6
    $t10 := $t26;

    // goto L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1244:17+6
    goto L18;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:25+13
    assume {:print "$at(168,52064,52077)"} true;
L6:

    // $t27 := get_field<0x1::fungible_asset::FungibleStore>.balance($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:25+13
    assume {:print "$at(168,52064,52077)"} true;
    $t27 := $Dereference($t9)->$balance;

    // $t28 := >=($t27, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:25+23
    call $t28 := $Ge($t27, $t1);

    // if ($t28) goto L15 else goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:17+6
    if ($t28) { goto L15; } else { goto L14; }

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1250:33+13
    assume {:print "$at(168,52170,52183)"} true;
L15:

    // $t29 := get_field<0x1::fungible_asset::FungibleStore>.balance($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1250:33+13
    assume {:print "$at(168,52170,52183)"} true;
    $t29 := $Dereference($t9)->$balance;

    // $t30 := -($t29, $t1) on_abort goto L18 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1250:33+22
    call $t30 := $Sub($t29, $t1);
    if ($abort_flag) {
        assume {:print "$at(168,52170,52192)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // $t31 := borrow_field<0x1::fungible_asset::FungibleStore>.balance($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1250:17+13
    $t31 := $ChildMutation($t9, 1, $Dereference($t9)->$balance);

    // write_ref($t31, $t30) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1250:17+38
    $t31 := $UpdateMutation($t31, $t30);

    // write_back[Reference($t9).balance (u64)]($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1250:17+38
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_FungibleStore'_balance($Dereference($t9), $Dereference($t31)));

    // write_back[0x1::fungible_asset::FungibleStore@]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1250:17+38
    $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1250:17+38
    goto L10;

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:17+6
    assume {:print "$at(168,52056,52062)"} true;
L14:

    // drop($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:17+6
    assume {:print "$at(168,52056,52062)"} true;

    // $t32 := 4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:74+21
    $t32 := 4;
    assume $IsValid'u64'($t32);

    // $t33 := error::invalid_argument($t32) on_abort goto L18 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:50+46
    call $t33 := $1_error_invalid_argument($t32);
    if ($abort_flag) {
        assume {:print "$at(168,52089,52135)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // trace_abort($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:17+6
    assume {:print "$at(168,52056,52062)"} true;
    assume {:print "$track_abort(48,73):", $t33} $t33 == $t33;

    // $t10 := move($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:17+6
    $t10 := $t33;

    // goto L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1249:17+6
    goto L18;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+75
    assume {:print "$at(168,51670,51745)"} true;
L4:

    // $t34 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+75
    assume {:print "$at(168,51670,51745)"} true;
    $t34 := false;
    assume $IsValid'bool'($t34);

    // $t6 := $t34 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+75
    $t6 := $t34;

    // trace_local[$t6]($t34) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+75
    assume {:print "$track_local(48,73,6):", $t34} $t34 == $t34;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1242:17+75
    goto L16;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1241:9+583
    assume {:print "$at(168,51635,52218)"} true;
L2:

    // drop($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1241:9+583
    assume {:print "$at(168,51635,52218)"} true;

    // goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1241:9+583
    goto L10;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1237:69+25
    assume {:print "$at(168,51492,51517)"} true;
L0:

    // $t35 := 23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1237:69+25
    assume {:print "$at(168,51492,51517)"} true;
    $t35 := 23;
    assume $IsValid'u64'($t35);

    // $t36 := error::not_found($t35) on_abort goto L18 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1237:52+43
    call $t36 := $1_error_not_found($t35);
    if ($abort_flag) {
        assume {:print "$at(168,51475,51518)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(48,73):", $t10} $t10 == $t10;
        goto L18;
    }

    // trace_abort($t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1237:9+6
    assume {:print "$at(168,51432,51438)"} true;
    assume {:print "$track_abort(48,73):", $t36} $t36 == $t36;

    // $t10 := move($t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1237:9+6
    $t10 := $t36;

    // goto L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1237:9+6
    goto L18;

    // label L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1230:5+1
    assume {:print "$at(168,51168,51169)"} true;
L17:

    // return $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1230:5+1
    assume {:print "$at(168,51168,51169)"} true;
    $ret0 := $t21;
    return;

    // label L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1230:5+1
L18:

    // abort($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1230:5+1
    assume {:print "$at(168,51168,51169)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_dispatch_function<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:722:5+460
procedure {:inline 1} $1_fungible_asset_withdraw_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $1_option_Option'$1_function_info_FunctionInfo';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_fungible_asset_FungibleStore;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: bool;
    var $t11: $1_fungible_asset_DispatchFunctionStore;
    var $t12: $1_option_Option'$1_function_info_FunctionInfo';
    var $t13: $1_option_Option'$1_function_info_FunctionInfo';
    var $t14: int;
    var $t15: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:722:5+1
    assume {:print "$at(168,30451,30452)"} true;
    assume {:print "$track_local(48,77,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$at(168,55087,55116)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(168,55087,55116)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[store_addr]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,77,1):", $t4} $t4 == $t4;

    // $t6 := exists<0x1::fungible_asset::FungibleStore>($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:17+33
    assume {:print "$at(168,55134,55167)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
L1:

    // $t7 := get_global<0x1::fungible_asset::FungibleStore>($t4) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(168,55223,55263)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t8 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:724:52+18
    assume {:print "$at(168,30690,30708)"} true;
    $t8 := $t7->$metadata;

    // $t9 := object::object_address<0x1::fungible_asset::Metadata>($t8) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:724:29+42
    call $t9 := $1_object_object_address'$1_fungible_asset_Metadata'($t8);
    if ($abort_flag) {
        assume {:print "$at(168,30667,30709)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[metadata_addr]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:724:29+42
    assume {:print "$track_local(48,77,2):", $t9} $t9 == $t9;

    // $t10 := exists<0x1::fungible_asset::DispatchFunctionStore>($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:725:12+44
    assume {:print "$at(168,30722,30766)"} true;
    $t10 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9);

    // if ($t10) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:725:9+186
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:726:13+51
    assume {:print "$at(168,30782,30833)"} true;
L3:

    // $t11 := get_global<0x1::fungible_asset::DispatchFunctionStore>($t9) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:726:13+51
    assume {:print "$at(168,30782,30833)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(168,30782,30833)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t12 := get_field<0x1::fungible_asset::DispatchFunctionStore>.withdraw_function($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:726:13+69
    $t12 := $t11->$withdraw_function;

    // $t3 := $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:726:13+69
    $t3 := $t12;

    // trace_local[return]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:726:13+69
    assume {:print "$track_local(48,77,3):", $t12} $t12 == $t12;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:725:9+186
    assume {:print "$at(168,30719,30905)"} true;
L4:

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:725:9+186
    assume {:print "$at(168,30719,30905)"} true;
    assume {:print "$track_return(48,77,0):", $t3} $t3 == $t3;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:725:9+186
    goto L5;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:728:13+14
    assume {:print "$at(168,30881,30895)"} true;
L2:

    // $t13 := opaque begin: option::none<0x1::function_info::FunctionInfo>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:728:13+14
    assume {:print "$at(168,30881,30895)"} true;

    // assume And(WellFormed($t13), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec($t13)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:728:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::function_info::FunctionInfo>>($t13, option::spec_none<0x1::function_info::FunctionInfo>()) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:728:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t13, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t13 := opaque end: option::none<0x1::function_info::FunctionInfo>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:728:13+14

    // $t3 := $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:728:13+14
    $t3 := $t13;

    // trace_local[return]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:728:13+14
    assume {:print "$track_local(48,77,3):", $t13} $t13 == $t13;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:728:13+14
    goto L4;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
L0:

    // $t14 := 23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
    $t14 := 23;
    assume $IsValid'u64'($t14);

    // $t15 := error::not_found($t14) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:52+43
    call $t15 := $1_error_not_found($t14);
    if ($abort_flag) {
        assume {:print "$at(168,55169,55212)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(48,77):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_abort($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    assume {:print "$at(168,55126,55132)"} true;
    assume {:print "$track_abort(48,77):", $t15} $t15 == $t15;

    // $t5 := move($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    $t5 := $t15;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    goto L6;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:730:5+1
    assume {:print "$at(168,30910,30911)"} true;
L5:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:730:5+1
    assume {:print "$at(168,30910,30911)"} true;
    $ret0 := $t3;
    return;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:730:5+1
L6:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:730:5+1
    assume {:print "$at(168,30910,30911)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_permission_check<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:891:5+380
procedure {:inline 1} $1_fungible_asset_withdraw_permission_check'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_fungible_asset_WithdrawPermission;
    var $t7: int;
    var $t8: bool;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_permissioned_signer_PermissionStorage': $1_permissioned_signer_PermissionStorage;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:891:5+1
    assume {:print "$at(168,37584,37585)"} true;
    assume {:print "$track_local(48,78,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:891:5+1
    assume {:print "$track_local(48,78,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:891:5+1
    assume {:print "$track_local(48,78,2):", $t2} $t2 == $t2;

    // $t3 := (u256)($t2) on_abort goto L3 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:70+14
    assume {:print "$at(168,37786,37800)"} true;
    call $t3 := $CastU256($t2);
    if ($abort_flag) {
        assume {:print "$at(168,37786,37800)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,78):", $t4} $t4 == $t4;
        goto L3;
    }

    // $t5 := object::object_address<#0>($t1) on_abort goto L3 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:897:28+30
    assume {:print "$at(168,37859,37889)"} true;
    call $t5 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(168,37859,37889)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,78):", $t4} $t4 == $t4;
        goto L3;
    }

    // $t6 := pack_variant 0x1::fungible_asset::WithdrawPermission::ByStore($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:86+98
    assume {:print "$at(168,37802,37900)"} true;
    $t6 := $1_fungible_asset_WithdrawPermission_ByStore($t5);

    // assume Identical($t7, permissioned_signer::spec_permission_address($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:157:9+58
    assume {:print "$at(189,6330,6388)"} true;
    assume ($t7 == $1_permissioned_signer_spec_permission_address($t0));

    // $t8 := opaque begin: permissioned_signer::check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
    assume {:print "$at(168,37733,37901)"} true;

    // $t9 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
    havoc $t9;

    // if ($t9) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
    if ($t9) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
L5:

    // trace_abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
    assume {:print "$at(168,37733,37901)"} true;
    assume {:print "$track_abort(48,78):", $t4} $t4 == $t4;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
    goto L3;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
L4:

    // modifies global<0x1::permissioned_signer::PermissionStorage>(permissioned_signer::spec_permission_address($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
    assume {:print "$at(168,37733,37901)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_permissioned_signer_PermissionStorage';
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceUpdate($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0), $temp_0'$1_permissioned_signer_PermissionStorage');
    } else {
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceRemove($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0));
    }

    // assume WellFormed($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
    assume $IsValid'bool'($t8);

    // assume Eq<bool>($t8, permissioned_signer::spec_check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t6)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168
    assume $IsEqual'bool'($t8, $1_permissioned_signer_spec_check_permission_consume'$1_fungible_asset_WithdrawPermission'($t0, $t3, $t6));

    // $t8 := opaque end: permissioned_signer::check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:17+168

    // if ($t8) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:9+6
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:895:7+249
    assume {:print "$at(168,37715,37964)"} true;
L1:

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:895:7+249
    assume {:print "$at(168,37715,37964)"} true;
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:898:38+27
    assume {:print "$at(168,37928,37955)"} true;
L0:

    // $t10 := 36 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:898:38+27
    assume {:print "$at(168,37928,37955)"} true;
    $t10 := 36;
    assume $IsValid'u64'($t10);

    // $t11 := error::permission_denied($t10) on_abort goto L3 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:898:13+53
    call $t11 := $1_error_permission_denied($t10);
    if ($abort_flag) {
        assume {:print "$at(168,37903,37956)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,78):", $t4} $t4 == $t4;
        goto L3;
    }

    // trace_abort($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:9+6
    assume {:print "$at(168,37725,37731)"} true;
    assume {:print "$track_abort(48,78):", $t11} $t11 == $t11;

    // $t4 := move($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:9+6
    $t4 := $t11;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:896:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:899:5+1
    assume {:print "$at(168,37963,37964)"} true;
L2:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:899:5+1
    assume {:print "$at(168,37963,37964)"} true;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:899:5+1
L3:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:899:5+1
    assume {:print "$at(168,37963,37964)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_permission_check_by_address [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:902:5+357
procedure {:inline 1} $1_fungible_asset_withdraw_permission_check_by_address(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: $1_fungible_asset_WithdrawPermission;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_permissioned_signer_PermissionStorage': $1_permissioned_signer_PermissionStorage;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:902:5+1
    assume {:print "$at(168,38023,38024)"} true;
    assume {:print "$track_local(48,79,0):", $t0} $t0 == $t0;

    // trace_local[store_address]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:902:5+1
    assume {:print "$track_local(48,79,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:902:5+1
    assume {:print "$track_local(48,79,2):", $t2} $t2 == $t2;

    // $t3 := (u256)($t2) on_abort goto L3 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:70+14
    assume {:print "$at(168,38234,38248)"} true;
    call $t3 := $CastU256($t2);
    if ($abort_flag) {
        assume {:print "$at(168,38234,38248)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,79):", $t4} $t4 == $t4;
        goto L3;
    }

    // $t5 := pack_variant 0x1::fungible_asset::WithdrawPermission::ByStore($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:86+66
    $t5 := $1_fungible_asset_WithdrawPermission_ByStore($t1);

    // assume Identical($t6, permissioned_signer::spec_permission_address($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/permissioned_signer.spec.move:157:9+58
    assume {:print "$at(189,6330,6388)"} true;
    assume ($t6 == $1_permissioned_signer_spec_permission_address($t0));

    // $t7 := opaque begin: permissioned_signer::check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
    assume {:print "$at(168,38181,38317)"} true;

    // $t8 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
    havoc $t8;

    // if ($t8) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
    if ($t8) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
L5:

    // trace_abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
    assume {:print "$at(168,38181,38317)"} true;
    assume {:print "$track_abort(48,79):", $t4} $t4 == $t4;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
    goto L3;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
L4:

    // modifies global<0x1::permissioned_signer::PermissionStorage>(permissioned_signer::spec_permission_address($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
    assume {:print "$at(168,38181,38317)"} true;
    havoc $temp_0'bool';
    if ($temp_0'bool') {
        havoc $temp_0'$1_permissioned_signer_PermissionStorage';
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceUpdate($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0), $temp_0'$1_permissioned_signer_PermissionStorage');
    } else {
        $1_permissioned_signer_PermissionStorage_$memory := $ResourceRemove($1_permissioned_signer_PermissionStorage_$memory, $1_permissioned_signer_spec_permission_address($t0));
    }

    // assume WellFormed($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
    assume $IsValid'bool'($t7);

    // assume Eq<bool>($t7, permissioned_signer::spec_check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t5)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136
    assume $IsEqual'bool'($t7, $1_permissioned_signer_spec_check_permission_consume'$1_fungible_asset_WithdrawPermission'($t0, $t3, $t5));

    // $t7 := opaque end: permissioned_signer::check_permission_consume<0x1::fungible_asset::WithdrawPermission>($t0, $t3, $t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:17+136

    // if ($t7) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:9+6
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:906:7+217
    assume {:print "$at(168,38163,38380)"} true;
L1:

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:906:7+217
    assume {:print "$at(168,38163,38380)"} true;
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:909:38+27
    assume {:print "$at(168,38344,38371)"} true;
L0:

    // $t9 := 36 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:909:38+27
    assume {:print "$at(168,38344,38371)"} true;
    $t9 := 36;
    assume $IsValid'u64'($t9);

    // $t10 := error::permission_denied($t9) on_abort goto L3 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:909:13+53
    call $t10 := $1_error_permission_denied($t9);
    if ($abort_flag) {
        assume {:print "$at(168,38319,38372)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(48,79):", $t4} $t4 == $t4;
        goto L3;
    }

    // trace_abort($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:9+6
    assume {:print "$at(168,38173,38179)"} true;
    assume {:print "$track_abort(48,79):", $t10} $t10 == $t10;

    // $t4 := move($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:9+6
    $t4 := $t10;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:907:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:910:5+1
    assume {:print "$at(168,38379,38380)"} true;
L2:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:910:5+1
    assume {:print "$at(168,38379,38380)"} true;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:910:5+1
L3:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:910:5+1
    assume {:print "$at(168,38379,38380)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_sanity_check<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:913:5+327
procedure {:inline 1} $1_fungible_asset_withdraw_sanity_check'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: bool) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t5: $1_fungible_asset_FungibleStore;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $1_object_ObjectCore;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: $1_fungible_asset_FungibleStore;
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: $1_object_Object'$1_fungible_asset_Metadata';
    var $t23: bool;
    var $t24: bool;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: bool;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:913:5+1
    assume {:print "$at(168,38439,38440)"} true;
    assume {:print "$track_local(48,80,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:913:5+1
    assume {:print "$track_local(48,80,1):", $t1} $t1 == $t1;

    // trace_local[abort_on_dispatch]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:913:5+1
    assume {:print "$track_local(48,80,2):", $t2} $t2 == $t2;

    // $t7 := signer::address_of($t0) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:919:13+25
    assume {:print "$at(168,38674,38699)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(168,38674,38699)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_local[$t6]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:919:13+25
    assume {:print "$track_local(48,80,3):", $t7} $t7 == $t7;

    // trace_local[store]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:925:16+26
    assume {:print "$at(168,38783,38809)"} true;
    assume {:print "$track_local(48,80,4):", $t1} $t1 == $t1;

    // assume Identical($t9, select object::Object.inner<0x1::object::Object<#0>>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:555:9+37
    assume {:print "$at(186,22475,22512)"} true;
    assume ($t9 == $t1->$inner);

    // assume Identical($t10, global<0x1::object::ObjectCore>($t9)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:556:9+53
    assume {:print "$at(186,22521,22574)"} true;
    assume ($t10 == $ResourceValue($1_object_ObjectCore_$memory, $t9));

    // assume Identical($t11, select object::ObjectCore.owner<0x1::object::ObjectCore>($t10)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:557:9+37
    assume {:print "$at(186,22583,22620)"} true;
    assume ($t11 == $t10->$owner);

    // $t12 := object::owns<#0>($t1, $t7) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:930:17+34
    assume {:print "$at(168,38980,39014)"} true;
    call $t12 := $1_object_owns'$1_fungible_asset_FungibleStore'($t1, $t7);
    if ($abort_flag) {
        assume {:print "$at(168,38980,39014)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // if ($t12) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:930:9+6
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:931:46+6
    assume {:print "$at(168,39106,39112)"} true;
L1:

    // $t13 := object::object_address<#0>($t1) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$at(168,55087,55116)"} true;
    call $t13 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(168,55087,55116)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_local[$t6]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1326:26+29
    assume {:print "$track_local(48,80,3):", $t13} $t13 == $t13;

    // $t14 := exists<0x1::fungible_asset::FungibleStore>($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:17+33
    assume {:print "$at(168,55134,55167)"} true;
    $t14 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t13);

    // if ($t14) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
L3:

    // $t15 := get_global<0x1::fungible_asset::FungibleStore>($t13) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$at(168,55223,55263)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(168,55223,55263)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_local[fa_store]($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1328:9+40
    assume {:print "$track_local(48,80,5):", $t15} $t15 == $t15;

    // if ($t2) goto L4 else goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:13+18
    assume {:print "$at(168,39144,39162)"} true;
    if ($t2) { goto L4; } else { goto L5; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:13+72
L5:

    // $t16 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:13+72
    assume {:print "$at(168,39144,39216)"} true;
    $t16 := true;
    assume $IsValid'bool'($t16);

    // $t6 := $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:13+72
    $t6 := $t16;

    // trace_local[$t7]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:13+72
    assume {:print "$track_local(48,80,6):", $t16} $t16 == $t16;

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:932:9+6
    assume {:print "$at(168,39123,39129)"} true;
L10:

    // if ($t6) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:932:9+6
    assume {:print "$at(168,39123,39129)"} true;
    if ($t6) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:18+15
    assume {:print "$at(168,39316,39331)"} true;
L7:

    // $t17 := get_field<0x1::fungible_asset::FungibleStore>.frozen($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:18+15
    assume {:print "$at(168,39316,39331)"} true;
    $t17 := $t15->$frozen;

    // if ($t17) goto L8 else goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:17+16
    if ($t17) { goto L8; } else { goto L9; }

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:929:53+421
    assume {:print "$at(168,38962,39383)"} true;
L9:

    // goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:929:53+421
    assume {:print "$at(168,38962,39383)"} true;
    goto L11;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:60+16
    assume {:print "$at(168,39358,39374)"} true;
L8:

    // $t18 := 3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:60+16
    assume {:print "$at(168,39358,39374)"} true;
    $t18 := 3;
    assume $IsValid'u64'($t18);

    // $t19 := error::permission_denied($t18) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:35+42
    call $t19 := $1_error_permission_denied($t18);
    if ($abort_flag) {
        assume {:print "$at(168,39333,39375)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_abort($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:9+6
    assume {:print "$at(168,39307,39313)"} true;
    assume {:print "$track_abort(48,80):", $t19} $t19 == $t19;

    // $t8 := move($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:9+6
    $t8 := $t19;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:936:9+6
    goto L12;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:932:9+6
    assume {:print "$at(168,39123,39129)"} true;
L6:

    // $t20 := 28 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:934:37+32
    assume {:print "$at(168,39254,39286)"} true;
    $t20 := 28;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:934:13+57
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(168,39230,39287)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_abort($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:932:9+6
    assume {:print "$at(168,39123,39129)"} true;
    assume {:print "$track_abort(48,80):", $t21} $t21 == $t21;

    // $t8 := move($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:932:9+6
    $t8 := $t21;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:932:9+6
    goto L12;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:67+17
    assume {:print "$at(168,39198,39215)"} true;
L4:

    // $t22 := get_field<0x1::fungible_asset::FungibleStore>.metadata($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:67+17
    assume {:print "$at(168,39198,39215)"} true;
    $t22 := $t15->$metadata;

    // $t23 := fungible_asset::has_withdraw_dispatch_function($t22) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:36+49
    call $t23 := $1_fungible_asset_has_withdraw_dispatch_function($t22);
    if ($abort_flag) {
        assume {:print "$at(168,39167,39216)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // $t24 := !($t23) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:35+50
    call $t24 := $Not($t23);

    // $t6 := $t24 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:35+50
    $t6 := $t24;

    // trace_local[$t7]($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:35+50
    assume {:print "$track_local(48,80,6):", $t24} $t24 == $t24;

    // goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:933:35+50
    goto L10;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
L2:

    // $t25 := 23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:69+25
    assume {:print "$at(168,55186,55211)"} true;
    $t25 := 23;
    assume $IsValid'u64'($t25);

    // $t26 := error::not_found($t25) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:52+43
    call $t26 := $1_error_not_found($t25);
    if ($abort_flag) {
        assume {:print "$at(168,55169,55212)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_abort($t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    assume {:print "$at(168,55126,55132)"} true;
    assume {:print "$track_abort(48,80):", $t26} $t26 == $t26;

    // $t8 := move($t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    $t8 := $t26;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:1327:9+6
    goto L12;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:930:78+16
    assume {:print "$at(168,39041,39057)"} true;
L0:

    // $t27 := 8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:930:78+16
    assume {:print "$at(168,39041,39057)"} true;
    $t27 := 8;
    assume $IsValid'u64'($t27);

    // $t28 := error::permission_denied($t27) on_abort goto L12 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:930:53+42
    call $t28 := $1_error_permission_denied($t27);
    if ($abort_flag) {
        assume {:print "$at(168,39016,39058)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(48,80):", $t8} $t8 == $t8;
        goto L12;
    }

    // trace_abort($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:930:9+6
    assume {:print "$at(168,38972,38978)"} true;
    assume {:print "$track_abort(48,80):", $t28} $t28 == $t28;

    // $t8 := move($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:930:9+6
    $t8 := $t28;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:930:9+6
    goto L12;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:923:5+1
    assume {:print "$at(168,38765,38766)"} true;
L11:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:923:5+1
    assume {:print "$at(168,38765,38766)"} true;
    return;

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:923:5+1
L12:

    // abort($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/fungible_asset.move:923:5+1
    assume {:print "$at(168,38765,38766)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// struct dispatchable_fungible_asset::TransferRefStore at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:36:5+73
datatype $1_dispatchable_fungible_asset_TransferRefStore {
    $1_dispatchable_fungible_asset_TransferRefStore($transfer_ref: $1_fungible_asset_TransferRef)
}
function {:inline} $Update'$1_dispatchable_fungible_asset_TransferRefStore'_transfer_ref(s: $1_dispatchable_fungible_asset_TransferRefStore, x: $1_fungible_asset_TransferRef): $1_dispatchable_fungible_asset_TransferRefStore {
    $1_dispatchable_fungible_asset_TransferRefStore(x)
}
function $IsValid'$1_dispatchable_fungible_asset_TransferRefStore'(s: $1_dispatchable_fungible_asset_TransferRefStore): bool {
    $IsValid'$1_fungible_asset_TransferRef'(s->$transfer_ref)
}
function {:inline} $IsEqual'$1_dispatchable_fungible_asset_TransferRefStore'(s1: $1_dispatchable_fungible_asset_TransferRefStore, s2: $1_dispatchable_fungible_asset_TransferRefStore): bool {
    s1 == s2
}
var $1_dispatchable_fungible_asset_TransferRefStore_$memory: $Memory $1_dispatchable_fungible_asset_TransferRefStore;

// fun dispatchable_fungible_asset::deposit<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:104:5+795
procedure {:inline 1} $1_dispatchable_fungible_asset_deposit'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: $1_option_Option'$1_function_info_FunctionInfo';
    var $t3: $1_function_info_FunctionInfo;
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t5: $1_fungible_asset_FungibleAsset;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: $1_fungible_asset_TransferRef;
    var $t9: bool;
    var $t10: int;
    var $t11: $1_option_Option'$1_function_info_FunctionInfo';
    var $t12: bool;
    var $t13: bool;
    var $t14: $1_function_info_FunctionInfo;
    var $t15: bool;
    var $t16: bool;
    var $t17: $1_object_Object'$1_fungible_asset_Metadata';
    var $t18: int;
    var $t19: bool;
    var $t20: $1_dispatchable_fungible_asset_TransferRefStore;
    var $t21: $1_fungible_asset_TransferRef;
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:104:5+1
    assume {:print "$at(160,4204,4205)"} true;
    assume {:print "$track_local(49,1,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:104:5+1
    assume {:print "$track_local(49,1,1):", $t1} $t1 == $t1;

    // $t9 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:105:53+5
    assume {:print "$at(160,4348,4353)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // fungible_asset::deposit_sanity_check<#0>($t0, $t9) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:105:9+50
    call $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(160,4304,4354)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // $t11 := fungible_asset::deposit_dispatch_function<#0>($t0) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:106:24+48
    assume {:print "$at(160,4379,4427)"} true;
    call $t11 := $1_fungible_asset_deposit_dispatch_function'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(160,4379,4427)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_local[func_opt]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:106:24+48
    assume {:print "$track_local(49,1,2):", $t11} $t11 == $t11;

    // $t12 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:107:13+26
    assume {:print "$at(160,4441,4467)"} true;

    // assume WellFormed($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:107:13+26
    assume $IsValid'bool'($t12);

    // assume Eq<bool>($t12, option::spec_is_some<0x1::function_info::FunctionInfo>($t11)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:107:13+26
    assume $IsEqual'bool'($t12, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t11));

    // $t12 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:107:13+26

    // if ($t12) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:107:9+556
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:109:17+47
    assume {:print "$at(160,4508,4555)"} true;
L1:

    // $t13 := features::dispatchable_fungible_asset_enabled() on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:109:17+47
    assume {:print "$at(160,4508,4555)"} true;
    call $t13 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(160,4508,4555)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // if ($t13) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:108:13+6
    assume {:print "$at(160,4483,4489)"} true;
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:39+9
    assume {:print "$at(160,4657,4666)"} true;
L3:

    // $t14 := opaque begin: option::borrow<0x1::function_info::FunctionInfo>($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    assume {:print "$at(160,4642,4667)"} true;

    // assume Identical($t15, option::spec_is_none<0x1::function_info::FunctionInfo>($t11)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    assume ($t15 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t11));

    // if ($t15) goto L10 else goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    if ($t15) { goto L10; } else { goto L9; }

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
L10:

    // assume And(option::spec_is_none<0x1::function_info::FunctionInfo>($t11), Eq(262145, $t10)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    assume {:print "$at(160,4642,4667)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t11) && $IsEqual'num'(262145, $t10));

    // trace_abort($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    assume {:print "$at(160,4642,4667)"} true;
    assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    goto L8;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
L9:

    // assume WellFormed($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    assume {:print "$at(160,4642,4667)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t14);

    // assume Eq<0x1::function_info::FunctionInfo>($t14, option::spec_borrow<0x1::function_info::FunctionInfo>($t11)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t14, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t11));

    // $t14 := opaque end: option::borrow<0x1::function_info::FunctionInfo>($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25

    // trace_local[func]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:112:24+25
    assume {:print "$track_local(49,1,3):", $t14} $t14 == $t14;

    // opaque begin: function_info::load_module_from_function($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:113:13+46
    assume {:print "$at(160,4681,4727)"} true;

    // $t16 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:113:13+46
    havoc $t16;

    // if ($t16) goto L12 else goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:113:13+46
    if ($t16) { goto L12; } else { goto L11; }

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:113:13+46
L12:

    // trace_abort($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:113:13+46
    assume {:print "$at(160,4681,4727)"} true;
    assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:113:13+46
    goto L8;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:113:13+46
L11:

    // opaque end: function_info::load_module_from_function($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:113:13+46
    assume {:print "$at(160,4681,4727)"} true;

    // trace_local[$t2]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:115:17+5
    assume {:print "$at(160,4779,4784)"} true;
    assume {:print "$track_local(49,1,4):", $t0} $t0 == $t0;

    // trace_local[$t13]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:116:17+2
    assume {:print "$at(160,4802,4804)"} true;
    assume {:print "$track_local(49,1,5):", $t1} $t1 == $t1;

    // $t17 := fungible_asset::store_metadata<#0>($t0) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:213:14+40
    assume {:print "$at(160,8708,8748)"} true;
    call $t17 := $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(160,8708,8748)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_local[$t18]($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:213:14+40
    assume {:print "$track_local(49,1,6):", $t17} $t17 == $t17;

    // $t18 := object::object_address<0x1::fungible_asset::Metadata>($t17) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:212:29+87
    assume {:print "$at(160,8671,8758)"} true;
    call $t18 := $1_object_object_address'$1_fungible_asset_Metadata'($t17);
    if ($abort_flag) {
        assume {:print "$at(160,8671,8758)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_local[metadata_addr]($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:212:29+87
    assume {:print "$track_local(49,1,7):", $t18} $t18 == $t18;

    // $t19 := exists<0x1::dispatchable_fungible_asset::TransferRefStore>($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:216:13+39
    assume {:print "$at(160,8789,8828)"} true;
    $t19 := $ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18);

    // if ($t19) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(160,8768,8774)"} true;
    if ($t19) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:219:10+46
    assume {:print "$at(160,8897,8943)"} true;
L5:

    // $t20 := get_global<0x1::dispatchable_fungible_asset::TransferRefStore>($t18) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:219:10+46
    assume {:print "$at(160,8897,8943)"} true;
    if (!$ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(160,8897,8943)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // $t21 := get_field<0x1::dispatchable_fungible_asset::TransferRefStore>.transfer_ref($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:219:9+60
    $t21 := $t20->$transfer_ref;

    // trace_local[$t14]($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143
    assume {:print "$at(160,4741,4884)"} true;
    assume {:print "$track_local(49,1,8):", $t21} $t21 == $t21;

    // opaque begin: dispatchable_fungible_asset::dispatchable_deposit<#0>($t0, $t1, $t21, $t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143

    // $t22 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143
    havoc $t22;

    // if ($t22) goto L14 else goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143
    if ($t22) { goto L14; } else { goto L13; }

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143
L14:

    // trace_abort($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143
    assume {:print "$at(160,4741,4884)"} true;
    assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143
    goto L8;

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143
L13:

    // opaque end: dispatchable_fungible_asset::dispatchable_deposit<#0>($t0, $t1, $t21, $t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:114:13+143
    assume {:print "$at(160,4741,4884)"} true;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:104:95+705
    assume {:print "$at(160,4294,4999)"} true;
L6:

    // goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:104:95+705
    assume {:print "$at(160,4294,4999)"} true;
    goto L7;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(160,8768,8774)"} true;
L4:

    // $t23 := 1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:217:30+16
    assume {:print "$at(160,8859,8875)"} true;
    $t23 := 1;
    assume $IsValid'u64'($t23);

    // $t24 := error::not_found($t23) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:217:13+34
    call $t24 := $1_error_not_found($t23);
    if ($abort_flag) {
        assume {:print "$at(160,8842,8876)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_abort($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(160,8768,8774)"} true;
    assume {:print "$track_abort(49,1):", $t24} $t24 == $t24;

    // $t10 := move($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    $t10 := $t24;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    goto L8;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:110:32+14
    assume {:print "$at(160,4588,4602)"} true;
L2:

    // $t25 := 3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:110:32+14
    assume {:print "$at(160,4588,4602)"} true;
    $t25 := 3;
    assume $IsValid'u64'($t25);

    // $t26 := error::aborted($t25) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:110:17+30
    call $t26 := $1_error_aborted($t25);
    if ($abort_flag) {
        assume {:print "$at(160,4573,4603)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // trace_abort($t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:108:13+6
    assume {:print "$at(160,4483,4489)"} true;
    assume {:print "$track_abort(49,1):", $t26} $t26 == $t26;

    // $t10 := move($t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:108:13+6
    $t10 := $t26;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:108:13+6
    goto L8;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:121:70+6
    assume {:print "$at(160,4971,4977)"} true;
L0:

    // $t27 := object::object_address<#0>($t0) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:121:47+30
    assume {:print "$at(160,4948,4978)"} true;
    call $t27 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(160,4948,4978)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // fungible_asset::unchecked_deposit($t27, $t1) on_abort goto L8 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:121:13+69
    call $1_fungible_asset_unchecked_deposit($t27, $t1);
    if ($abort_flag) {
        assume {:print "$at(160,4914,4983)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(49,1):", $t10} $t10 == $t10;
        goto L8;
    }

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:121:13+69
    goto L6;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:123:5+1
    assume {:print "$at(160,4998,4999)"} true;
L7:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:123:5+1
    assume {:print "$at(160,4998,4999)"} true;
    return;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:123:5+1
L8:

    // abort($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:123:5+1
    assume {:print "$at(160,4998,4999)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun dispatchable_fungible_asset::withdraw<0x1::fungible_asset::FungibleStore> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+970
procedure {:inline 1} $1_dispatchable_fungible_asset_withdraw'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t3: $1_option_Option'$1_function_info_FunctionInfo';
    var $t4: $1_function_info_FunctionInfo;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: int;
    var $t7: $1_object_Object'$1_fungible_asset_Metadata';
    var $t8: int;
    var $t9: $1_fungible_asset_TransferRef;
    var $t10: $1_fungible_asset_FungibleAsset;
    var $t11: bool;
    var $t12: int;
    var $t13: $1_option_Option'$1_function_info_FunctionInfo';
    var $t14: bool;
    var $t15: bool;
    var $t16: $1_function_info_FunctionInfo;
    var $t17: bool;
    var $t18: bool;
    var $t19: $1_object_Object'$1_fungible_asset_Metadata';
    var $t20: int;
    var $t21: bool;
    var $t22: $1_dispatchable_fungible_asset_TransferRefStore;
    var $t23: $1_fungible_asset_TransferRef;
    var $t24: $1_fungible_asset_FungibleAsset;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: $1_fungible_asset_FungibleAsset;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: int;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$at(160,3059,3060)"} true;
    assume {:print "$track_local(49,4,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$track_local(49,4,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$track_local(49,4,2):", $t2} $t2 == $t2;

    // $t11 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:79:61+5
    assume {:print "$at(160,3268,3273)"} true;
    $t11 := false;
    assume $IsValid'bool'($t11);

    // fungible_asset::withdraw_sanity_check<#0>($t0, $t1, $t11) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:79:9+58
    call $1_fungible_asset_withdraw_sanity_check'$1_fungible_asset_FungibleStore'($t0, $t1, $t11);
    if ($abort_flag) {
        assume {:print "$at(160,3216,3274)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // fungible_asset::withdraw_permission_check<#0>($t0, $t1, $t2) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:80:9+63
    assume {:print "$at(160,3284,3347)"} true;
    call $1_fungible_asset_withdraw_permission_check'$1_fungible_asset_FungibleStore'($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(160,3284,3347)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // $t13 := fungible_asset::withdraw_dispatch_function<#0>($t1) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:81:24+49
    assume {:print "$at(160,3372,3421)"} true;
    call $t13 := $1_fungible_asset_withdraw_dispatch_function'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(160,3372,3421)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[func_opt]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:81:24+49
    assume {:print "$track_local(49,4,3):", $t13} $t13 == $t13;

    // $t14 := opaque begin: option::is_some<0x1::function_info::FunctionInfo>($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+26
    assume {:print "$at(160,3435,3461)"} true;

    // assume WellFormed($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+26
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, option::spec_is_some<0x1::function_info::FunctionInfo>($t13)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+26
    assume $IsEqual'bool'($t14, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t13));

    // $t14 := opaque end: option::is_some<0x1::function_info::FunctionInfo>($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+26

    // if ($t14) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:82:9+592
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:84:17+47
    assume {:print "$at(160,3502,3549)"} true;
L1:

    // $t15 := features::dispatchable_fungible_asset_enabled() on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:84:17+47
    assume {:print "$at(160,3502,3549)"} true;
    call $t15 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(160,3502,3549)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // if ($t15) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:83:13+6
    assume {:print "$at(160,3477,3483)"} true;
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:39+9
    assume {:print "$at(160,3651,3660)"} true;
L3:

    // $t16 := opaque begin: option::borrow<0x1::function_info::FunctionInfo>($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(160,3636,3661)"} true;

    // assume Identical($t17, option::spec_is_none<0x1::function_info::FunctionInfo>($t13)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume ($t17 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t13));

    // if ($t17) goto L10 else goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    if ($t17) { goto L10; } else { goto L9; }

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
L10:

    // assume And(option::spec_is_none<0x1::function_info::FunctionInfo>($t13), Eq(262145, $t12)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(160,3636,3661)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t13) && $IsEqual'num'(262145, $t12));

    // trace_abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(160,3636,3661)"} true;
    assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    goto L8;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
L9:

    // assume WellFormed($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(160,3636,3661)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t16);

    // assume Eq<0x1::function_info::FunctionInfo>($t16, option::spec_borrow<0x1::function_info::FunctionInfo>($t13)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t16, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t13));

    // $t16 := opaque end: option::borrow<0x1::function_info::FunctionInfo>($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25

    // trace_local[func]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$track_local(49,4,4):", $t16} $t16 == $t16;

    // opaque begin: function_info::load_module_from_function($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
    assume {:print "$at(160,3675,3721)"} true;

    // $t18 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
    havoc $t18;

    // if ($t18) goto L12 else goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
    if ($t18) { goto L12; } else { goto L11; }

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
L12:

    // trace_abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
    assume {:print "$at(160,3675,3721)"} true;
    assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
    goto L8;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
L11:

    // opaque end: function_info::load_module_from_function($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
    assume {:print "$at(160,3675,3721)"} true;

    // trace_local[$t5]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:90:17+5
    assume {:print "$at(160,3783,3788)"} true;
    assume {:print "$track_local(49,4,5):", $t1} $t1 == $t1;

    // trace_local[$t19]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:91:17+6
    assume {:print "$at(160,3806,3812)"} true;
    assume {:print "$track_local(49,4,6):", $t2} $t2 == $t2;

    // $t19 := fungible_asset::store_metadata<#0>($t1) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:213:14+40
    assume {:print "$at(160,8708,8748)"} true;
    call $t19 := $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(160,8708,8748)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[$t24]($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:213:14+40
    assume {:print "$track_local(49,4,7):", $t19} $t19 == $t19;

    // $t20 := object::object_address<0x1::fungible_asset::Metadata>($t19) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:212:29+87
    assume {:print "$at(160,8671,8758)"} true;
    call $t20 := $1_object_object_address'$1_fungible_asset_Metadata'($t19);
    if ($abort_flag) {
        assume {:print "$at(160,8671,8758)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_local[metadata_addr]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:212:29+87
    assume {:print "$track_local(49,4,8):", $t20} $t20 == $t20;

    // $t21 := exists<0x1::dispatchable_fungible_asset::TransferRefStore>($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:216:13+39
    assume {:print "$at(160,8789,8828)"} true;
    $t21 := $ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t20);

    // if ($t21) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(160,8768,8774)"} true;
    if ($t21) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:219:10+46
    assume {:print "$at(160,8897,8943)"} true;
L5:

    // $t22 := get_global<0x1::dispatchable_fungible_asset::TransferRefStore>($t20) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:219:10+46
    assume {:print "$at(160,8897,8943)"} true;
    if (!$ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t22 := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t20);
    }
    if ($abort_flag) {
        assume {:print "$at(160,8897,8943)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // $t23 := get_field<0x1::dispatchable_fungible_asset::TransferRefStore>.transfer_ref($t22) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:219:9+60
    $t23 := $t22->$transfer_ref;

    // trace_local[$t20]($t23) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(160,3744,3893)"} true;
    assume {:print "$track_local(49,4,9):", $t23} $t23 == $t23;

    // $t24 := opaque begin: dispatchable_fungible_asset::dispatchable_withdraw<#0>($t1, $t2, $t23, $t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149

    // $t25 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    havoc $t25;

    // if ($t25) goto L14 else goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    if ($t25) { goto L14; } else { goto L13; }

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
L14:

    // trace_abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(160,3744,3893)"} true;
    assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    goto L8;

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
L13:

    // assume WellFormed($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(160,3744,3893)"} true;
    assume $IsValid'$1_fungible_asset_FungibleAsset'($t24);

    // $t24 := opaque end: dispatchable_fungible_asset::dispatchable_withdraw<#0>($t1, $t2, $t23, $t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149

    // $t10 := $t24 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    $t10 := $t24;

    // trace_local[fa]($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$track_local(49,4,10):", $t24} $t24 == $t24;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:78:48+823
    assume {:print "$at(160,3206,4029)"} true;
L6:

    // trace_return[0]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:78:48+823
    assume {:print "$at(160,3206,4029)"} true;
    assume {:print "$track_return(49,4,0):", $t10} $t10 == $t10;

    // goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:78:48+823
    goto L7;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(160,8768,8774)"} true;
L4:

    // $t26 := 1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:217:30+16
    assume {:print "$at(160,8859,8875)"} true;
    $t26 := 1;
    assume $IsValid'u64'($t26);

    // $t27 := error::not_found($t26) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:217:13+34
    call $t27 := $1_error_not_found($t26);
    if ($abort_flag) {
        assume {:print "$at(160,8842,8876)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_abort($t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    assume {:print "$at(160,8768,8774)"} true;
    assume {:print "$track_abort(49,4):", $t27} $t27 == $t27;

    // $t12 := move($t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    $t12 := $t27;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:215:9+6
    goto L8;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:85:32+14
    assume {:print "$at(160,3582,3596)"} true;
L2:

    // $t28 := 3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:85:32+14
    assume {:print "$at(160,3582,3596)"} true;
    $t28 := 3;
    assume $IsValid'u64'($t28);

    // $t29 := error::aborted($t28) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:85:17+30
    call $t29 := $1_error_aborted($t28);
    if ($abort_flag) {
        assume {:print "$at(160,3567,3597)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // trace_abort($t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:83:13+6
    assume {:print "$at(160,3477,3483)"} true;
    assume {:print "$track_abort(49,4):", $t29} $t29 == $t29;

    // $t12 := move($t29) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:83:13+6
    $t12 := $t29;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:83:13+6
    goto L8;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:97:71+6
    assume {:print "$at(160,3997,4003)"} true;
L0:

    // $t30 := object::object_address<#0>($t1) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:97:48+30
    assume {:print "$at(160,3974,4004)"} true;
    call $t30 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(160,3974,4004)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // $t31 := fungible_asset::unchecked_withdraw($t30, $t2) on_abort goto L8 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:97:13+74
    call $t31 := $1_fungible_asset_unchecked_withdraw($t30, $t2);
    if ($abort_flag) {
        assume {:print "$at(160,3939,4013)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,4):", $t12} $t12 == $t12;
        goto L8;
    }

    // $t10 := $t31 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:97:13+74
    $t10 := $t31;

    // trace_local[fa]($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:97:13+74
    assume {:print "$track_local(49,4,10):", $t31} $t31 == $t31;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:97:13+74
    goto L6;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:99:5+1
    assume {:print "$at(160,4028,4029)"} true;
L7:

    // return $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:99:5+1
    assume {:print "$at(160,4028,4029)"} true;
    $ret0 := $t10;
    return;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:99:5+1
L8:

    // abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/dispatchable_fungible_asset.move:99:5+1
    assume {:print "$at(160,4028,4029)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// struct primary_fungible_store::DeriveRefPod at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:30:5+75
datatype $1_primary_fungible_store_DeriveRefPod {
    $1_primary_fungible_store_DeriveRefPod($metadata_derive_ref: $1_object_DeriveRef)
}
function {:inline} $Update'$1_primary_fungible_store_DeriveRefPod'_metadata_derive_ref(s: $1_primary_fungible_store_DeriveRefPod, x: $1_object_DeriveRef): $1_primary_fungible_store_DeriveRefPod {
    $1_primary_fungible_store_DeriveRefPod(x)
}
function $IsValid'$1_primary_fungible_store_DeriveRefPod'(s: $1_primary_fungible_store_DeriveRefPod): bool {
    $IsValid'$1_object_DeriveRef'(s->$metadata_derive_ref)
}
function {:inline} $IsEqual'$1_primary_fungible_store_DeriveRefPod'(s1: $1_primary_fungible_store_DeriveRefPod, s2: $1_primary_fungible_store_DeriveRefPod): bool {
    s1 == s2
}
var $1_primary_fungible_store_DeriveRefPod_$memory: $Memory $1_primary_fungible_store_DeriveRefPod;

// fun primary_fungible_store::deposit [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:195:5+266
procedure {:inline 1} $1_primary_fungible_store_deposit(_$t0: int, _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:195:5+1
    assume {:print "$at(190,8686,8687)"} true;
    assume {:print "$track_local(50,5,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:195:5+1
    assume {:print "$track_local(50,5,1):", $t1} $t1 == $t1;

    // $t3 := fungible_asset::asset_metadata($t1) on_abort goto L2 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:196:24+35
    assume {:print "$at(190,8787,8822)"} true;
    call $t3 := $1_fungible_asset_asset_metadata($t1);
    if ($abort_flag) {
        assume {:print "$at(190,8787,8822)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[metadata]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:196:24+35
    assume {:print "$track_local(50,5,2):", $t3} $t3 == $t3;

    // $t5 := primary_fungible_store::ensure_primary_store_exists<0x1::fungible_asset::Metadata>($t0, $t3) on_abort goto L2 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:197:21+44
    assume {:print "$at(190,8844,8888)"} true;
    call $t5 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t0, $t3);
    if ($abort_flag) {
        assume {:print "$at(190,8844,8888)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // dispatchable_fungible_asset::deposit<0x1::fungible_asset::FungibleStore>($t5, $t1) on_abort goto L2 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:198:9+47
    assume {:print "$at(190,8898,8945)"} true;
    call $1_dispatchable_fungible_asset_deposit'$1_fungible_asset_FungibleStore'($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(190,8898,8945)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:199:5+1
    assume {:print "$at(190,8951,8952)"} true;
L1:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:199:5+1
    assume {:print "$at(190,8951,8952)"} true;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:199:5+1
L2:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:199:5+1
    assume {:print "$at(190,8951,8952)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::withdraw<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:187:5+397
procedure {:inline 1} $1_primary_fungible_store_withdraw'$1_fungible_asset_Metadata'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_Metadata', _$t2: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t3: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t4: int;
    var $t5: int;
    var $t6: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t7: $1_fungible_asset_FungibleAsset;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:187:5+1
    assume {:print "$at(190,8209,8210)"} true;
    assume {:print "$track_local(50,11,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:187:5+1
    assume {:print "$track_local(50,11,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:187:5+1
    assume {:print "$track_local(50,11,2):", $t2} $t2 == $t2;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:188:49+25
    assume {:print "$at(190,8374,8399)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(190,8374,8399)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := primary_fungible_store::ensure_primary_store_exists<#0>($t4, $t1) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:188:21+64
    call $t6 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(190,8346,8410)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[store]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:188:21+64
    assume {:print "$track_local(50,11,3):", $t6} $t6 == $t6;

    // primary_fungible_store::may_be_unburn($t0, $t6) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:190:9+27
    assume {:print "$at(190,8504,8531)"} true;
    call $1_primary_fungible_store_may_be_unburn($t0, $t6);
    if ($abort_flag) {
        assume {:print "$at(190,8504,8531)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t7 := dispatchable_fungible_asset::withdraw<0x1::fungible_asset::FungibleStore>($t0, $t6, $t2) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:191:9+59
    assume {:print "$at(190,8541,8600)"} true;
    call $t7 := $1_dispatchable_fungible_asset_withdraw'$1_fungible_asset_FungibleStore'($t0, $t6, $t2);
    if ($abort_flag) {
        assume {:print "$at(190,8541,8600)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:187:120+282
    assume {:print "$at(190,8324,8606)"} true;
    assume {:print "$track_return(50,11,0):", $t7} $t7 == $t7;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:192:5+1
    assume {:print "$at(190,8605,8606)"} true;
L1:

    // return $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:192:5+1
    assume {:print "$at(190,8605,8606)"} true;
    $ret0 := $t7;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:192:5+1
L2:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:192:5+1
    assume {:print "$at(190,8605,8606)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::create_primary_store<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:75:5+746
procedure {:inline 1} $1_primary_fungible_store_create_primary_store'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: int;
    var $t3: $1_object_DeriveRef;
    var $t4: $1_object_ConstructorRef;
    var $t5: $1_object_ConstructorRef;
    var $t6: $1_object_TransferRef;
    var $t7: int;
    var $t8: int;
    var $t9: $1_object_Object'$1_fungible_asset_Metadata';
    var $t10: $1_primary_fungible_store_DeriveRefPod;
    var $t11: $1_object_DeriveRef;
    var $t12: int;
    var $t13: $1_object_ConstructorRef;
    var $t14: $1_object_TransferRef;
    var $t15: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:75:5+1
    assume {:print "$at(190,3507,3508)"} true;
    assume {:print "$track_local(50,14,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:75:5+1
    assume {:print "$track_local(50,14,1):", $t1} $t1 == $t1;

    // $t7 := object::object_address<#0>($t1) on_abort goto L2 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:79:29+33
    assume {:print "$at(190,3687,3720)"} true;
    call $t7 := $1_object_object_address'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(190,3687,3720)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[metadata_addr]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:79:29+33
    assume {:print "$track_local(50,14,2):", $t7} $t7 == $t7;

    // $t9 := object::address_to_object<0x1::fungible_asset::Metadata>($t7) on_abort goto L2 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:80:9+50
    assume {:print "$at(190,3730,3780)"} true;
    call $t9 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t7);
    if ($abort_flag) {
        assume {:print "$at(190,3730,3780)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // drop($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:80:9+50

    // $t10 := get_global<0x1::primary_fungible_store::DeriveRefPod>($t7) on_abort goto L2 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:81:27+42
    assume {:print "$at(190,3808,3850)"} true;
    if (!$ResourceExists($1_primary_fungible_store_DeriveRefPod_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(190,3808,3850)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t11 := get_field<0x1::primary_fungible_store::DeriveRefPod>.metadata_derive_ref($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:81:26+63
    $t11 := $t10->$metadata_derive_ref;

    // trace_local[derive_ref]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:81:26+63
    assume {:print "$track_local(50,14,3):", $t11} $t11 == $t11;

    // assume Identical($t12, object::spec_create_user_derived_object_address($t0, select object::DeriveRef.self<0x1::object::DeriveRef>($t11))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:185:9+89
    assume {:print "$at(186,7868,7957)"} true;
    assume ($t12 == $1_object_spec_create_user_derived_object_address($t0, $t11->$self));

    // $t13 := object::create_user_derived_object($t0, $t11) on_abort goto L2 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:82:32+58
    assume {:print "$at(190,3903,3961)"} true;
    call $t13 := $1_object_create_user_derived_object($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(190,3903,3961)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[$t9]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:82:32+58
    assume {:print "$track_local(50,14,4):", $t13} $t13 == $t13;

    // trace_local[constructor_ref]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:82:31+59
    assume {:print "$track_local(50,14,5):", $t13} $t13 == $t13;

    // $t14 := object::generate_transfer_ref($t13) on_abort goto L2 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:84:29+46
    assume {:print "$at(190,4079,4125)"} true;
    call $t14 := $1_object_generate_transfer_ref($t13);
    if ($abort_flag) {
        assume {:print "$at(190,4079,4125)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[$t12]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:84:29+46
    assume {:print "$track_local(50,14,6):", $t14} $t14 == $t14;

    // object::disable_ungated_transfer($t14) on_abort goto L2 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:85:9+46
    assume {:print "$at(190,4135,4181)"} true;
    call $1_object_disable_ungated_transfer($t14);
    if ($abort_flag) {
        assume {:print "$at(190,4135,4181)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t15 := fungible_asset::create_store<#0>($t13, $t1) on_abort goto L2 with $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:87:9+55
    assume {:print "$at(190,4192,4247)"} true;
    call $t15 := $1_fungible_asset_create_store'$1_fungible_asset_Metadata'($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(190,4192,4247)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(50,14):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_return[0]($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:78:52+596
    assume {:print "$at(190,3657,4253)"} true;
    assume {:print "$track_return(50,14,0):", $t15} $t15 == $t15;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:88:5+1
    assume {:print "$at(190,4252,4253)"} true;
L1:

    // return $t15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:88:5+1
    assume {:print "$at(190,4252,4253)"} true;
    $ret0 := $t15;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:88:5+1
L2:

    // abort($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:88:5+1
    assume {:print "$at(190,4252,4253)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::create_primary_store_enabled_fungible_asset [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:37:5+694
procedure {:inline 1} $1_primary_fungible_store_create_primary_store_enabled_fungible_asset(_$t0: $1_object_ConstructorRef, _$t1: $1_option_Option'u128', _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int, _$t5: $1_string_String, _$t6: $1_string_String) returns ()
{
    // declare local variables
    var $t7: $signer;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: $signer;
    var $t11: $1_object_DeriveRef;
    var $t12: $1_primary_fungible_store_DeriveRefPod;
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_option_Option'u128';
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'signer': $signer;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:37:5+1
    assume {:print "$at(190,2209,2210)"} true;
    assume {:print "$track_local(50,15,0):", $t0} $t0 == $t0;

    // trace_local[maximum_supply]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,2):", $t2} $t2 == $t2;

    // trace_local[symbol]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,3):", $t3} $t3 == $t3;

    // trace_local[decimals]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,4):", $t4} $t4 == $t4;

    // trace_local[icon_uri]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,5):", $t5} $t5 == $t5;

    // trace_local[project_uri]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:37:5+1
    assume {:print "$track_local(50,15,6):", $t6} $t6 == $t6;

    // $t8 := fungible_asset::add_fungibility($t0, $t1, $t2, $t3, $t4, $t5, $t6) on_abort goto L2 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:46:9+206
    assume {:print "$at(190,2484,2690)"} true;
    call $t8 := $1_fungible_asset_add_fungibility($t0, $t1, $t2, $t3, $t4, $t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(190,2484,2690)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,15):", $t9} $t9 == $t9;
        goto L2;
    }

    // drop($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:46:9+206

    // $t10 := object::generate_signer($t0) on_abort goto L2 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:55:29+40
    assume {:print "$at(190,2720,2760)"} true;
    call $t10 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(190,2720,2760)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,15):", $t9} $t9 == $t9;
        goto L2;
    }

    // trace_local[$t15]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:55:29+40
    assume {:print "$track_local(50,15,7):", $t10} $t10 == $t10;

    // $t11 := object::generate_derive_ref($t0) on_abort goto L2 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:57:34+44
    assume {:print "$at(190,2840,2884)"} true;
    call $t11 := $1_object_generate_derive_ref($t0);
    if ($abort_flag) {
        assume {:print "$at(190,2840,2884)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,15):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t12 := pack 0x1::primary_fungible_store::DeriveRefPod($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:56:31+103
    assume {:print "$at(190,2792,2895)"} true;
    $t12 := $1_primary_fungible_store_DeriveRefPod($t11);

    // move_to<0x1::primary_fungible_store::DeriveRefPod>($t12, $t10) on_abort goto L2 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:56:9+126
    if ($ResourceExists($1_primary_fungible_store_DeriveRefPod_$memory, $t10->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_primary_fungible_store_DeriveRefPod_$memory := $ResourceUpdate($1_primary_fungible_store_DeriveRefPod_$memory, $t10->$addr, $t12);
    }
    if ($abort_flag) {
        assume {:print "$at(190,2770,2896)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,15):", $t9} $t9 == $t9;
        goto L2;
    }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:59:5+1
    assume {:print "$at(190,2902,2903)"} true;
L1:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:59:5+1
    assume {:print "$at(190,2902,2903)"} true;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:59:5+1
L2:

    // abort($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:59:5+1
    assume {:print "$at(190,2902,2903)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::ensure_primary_store_exists<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:62:5+407
procedure {:inline 1} $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: int;
    var $t3: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t8: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:62:5+1
    assume {:print "$at(190,3010,3011)"} true;
    assume {:print "$track_local(50,17,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:62:5+1
    assume {:print "$track_local(50,17,1):", $t1} $t1 == $t1;

    // $t4 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L4 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:66:26+38
    assume {:print "$at(190,3189,3227)"} true;
    call $t4 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(190,3189,3227)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,17):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[$t4]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:66:26+38
    assume {:print "$track_local(50,17,2):", $t4} $t4 == $t4;

    // $t6 := fungible_asset::store_exists($t4) on_abort goto L4 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:67:13+40
    assume {:print "$at(190,3241,3281)"} true;
    call $t6 := $1_fungible_asset_store_exists($t4);
    if ($abort_flag) {
        assume {:print "$at(190,3241,3281)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,17):", $t5} $t5 == $t5;
        goto L4;
    }

    // if ($t6) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:67:9+174
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:68:13+37
    assume {:print "$at(190,3297,3334)"} true;
L1:

    // $t7 := object::address_to_object<0x1::fungible_asset::FungibleStore>($t4) on_abort goto L4 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:68:13+37
    assume {:print "$at(190,3297,3334)"} true;
    call $t7 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t4);
    if ($abort_flag) {
        assume {:print "$at(190,3297,3334)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,17):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t3 := $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:68:13+37
    $t3 := $t7;

    // trace_local[return]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:68:13+37
    assume {:print "$track_local(50,17,3):", $t7} $t7 == $t7;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:67:9+174
    assume {:print "$at(190,3237,3411)"} true;
L2:

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:67:9+174
    assume {:print "$at(190,3237,3411)"} true;
    assume {:print "$track_return(50,17,0):", $t3} $t3 == $t3;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:67:9+174
    goto L3;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:70:34+5
    assume {:print "$at(190,3385,3390)"} true;
L0:

    // $t8 := primary_fungible_store::create_primary_store<#0>($t0, $t1) on_abort goto L4 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:70:13+37
    assume {:print "$at(190,3364,3401)"} true;
    call $t8 := $1_primary_fungible_store_create_primary_store'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(190,3364,3401)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(50,17):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t3 := $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:70:13+37
    $t3 := $t8;

    // trace_local[return]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:70:13+37
    assume {:print "$track_local(50,17,3):", $t8} $t8 == $t8;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:70:13+37
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:72:5+1
    assume {:print "$at(190,3416,3417)"} true;
L3:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:72:5+1
    assume {:print "$at(190,3416,3417)"} true;
    $ret0 := $t3;
    return;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:72:5+1
L4:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:72:5+1
    assume {:print "$at(190,3416,3417)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::may_be_unburn [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:300:5+163
procedure {:inline 1} $1_primary_fungible_store_may_be_unburn(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore') returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $1_object_TombStone;
    var $t6: int;
    var $t7: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:300:5+1
    assume {:print "$at(190,13789,13790)"} true;
    assume {:print "$track_local(50,19,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:300:5+1
    assume {:print "$track_local(50,19,1):", $t1} $t1 == $t1;

    // $t2 := object::is_burnt<0x1::fungible_asset::FungibleStore>($t1) on_abort goto L4 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:301:13+23
    assume {:print "$at(190,13867,13890)"} true;
    call $t2 := $1_object_is_burnt'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(190,13867,13890)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // if ($t2) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:301:9+82
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:302:28+5
    assume {:print "$at(190,13921,13926)"} true;
L1:

    // assume Identical($t4, select object::Object.inner<0x1::object::Object<0x1::fungible_asset::FungibleStore>>($t1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:505:9+34
    assume {:print "$at(186,20046,20080)"} true;
    assume ($t4 == $t1->$inner);

    // assume Identical($t5, global<0x1::object::TombStone>($t4)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:508:9+58
    assume {:print "$at(186,20181,20239)"} true;
    assume ($t5 == $ResourceValue($1_object_TombStone_$memory, $t4));

    // assume Identical($t6, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:509:9+64
    assume {:print "$at(186,20248,20312)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // assume Identical($t7, select object::ObjectCore.owner<0x1::object::ObjectCore>(global<0x1::object::ObjectCore>($t4))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:510:9+75
    assume {:print "$at(186,20321,20396)"} true;
    assume ($t7 == $ResourceValue($1_object_ObjectCore_$memory, $t4)->$owner);

    // object::unburn<0x1::fungible_asset::FungibleStore>($t0, $t1) on_abort goto L4 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:302:13+28
    assume {:print "$at(190,13906,13934)"} true;
    call $1_object_unburn'$1_fungible_asset_FungibleStore'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(190,13906,13934)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,19):", $t3} $t3 == $t3;
        goto L4;
    }

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:300:69+99
    assume {:print "$at(190,13853,13952)"} true;
L2:

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:300:69+99
    assume {:print "$at(190,13853,13952)"} true;
    goto L3;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:301:9+82
    assume {:print "$at(190,13863,13945)"} true;
L0:

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:301:9+82
    assume {:print "$at(190,13863,13945)"} true;
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:304:5+1
    assume {:print "$at(190,13951,13952)"} true;
L3:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:304:5+1
    assume {:print "$at(190,13951,13952)"} true;
    return;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:304:5+1
L4:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:304:5+1
    assume {:print "$at(190,13951,13952)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:92:5+230
procedure {:inline 1} $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:92:5+1
    assume {:print "$at(190,4339,4340)"} true;
    assume {:print "$track_local(50,21,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:92:5+1
    assume {:print "$track_local(50,21,1):", $t1} $t1 == $t1;

    // $t3 := object::object_address<#0>($t1) on_abort goto L2 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:93:29+33
    assume {:print "$at(190,4456,4489)"} true;
    call $t3 := $1_object_object_address'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(190,4456,4489)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,21):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[metadata_addr]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:93:29+33
    assume {:print "$track_local(50,21,2):", $t3} $t3 == $t3;

    // $t5 := opaque begin: object::create_user_derived_object_address($t0, $t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
    assume {:print "$at(190,4499,4563)"} true;

    // $t6 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
    havoc $t6;

    // if ($t6) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
L4:

    // trace_abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
    assume {:print "$at(190,4499,4563)"} true;
    assume {:print "$track_abort(50,21):", $t4} $t4 == $t4;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
L3:

    // assume WellFormed($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
    assume {:print "$at(190,4499,4563)"} true;
    assume $IsValid'address'($t5);

    // assume Eq<address>($t5, object::spec_create_user_derived_object_address($t0, $t3)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
    assume $IsEqual'address'($t5, $1_object_spec_create_user_derived_object_address($t0, $t3));

    // $t5 := opaque end: object::create_user_derived_object_address($t0, $t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:94:9+64
    assume {:print "$track_return(50,21,0):", $t5} $t5 == $t5;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:95:5+1
    assume {:print "$at(190,4568,4569)"} true;
L1:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:95:5+1
    assume {:print "$at(190,4568,4569)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:95:5+1
L2:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:95:5+1
    assume {:print "$at(190,4568,4569)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store_exists<0x1::fungible_asset::Metadata> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:106:5+171
procedure {:inline 1} $1_primary_fungible_store_primary_store_exists'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[account]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:106:5+1
    assume {:print "$at(190,4946,4947)"} true;
    assume {:print "$track_local(50,22,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:106:5+1
    assume {:print "$track_local(50,22,1):", $t1} $t1 == $t1;

    // $t2 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:107:38+40
    assume {:print "$at(190,5070,5110)"} true;
    call $t2 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(190,5070,5110)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,22):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := fungible_asset::store_exists($t2) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:107:9+70
    call $t4 := $1_fungible_asset_store_exists($t2);
    if ($abort_flag) {
        assume {:print "$at(190,5041,5111)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,22):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:107:9+70
    assume {:print "$track_return(50,22,0):", $t4} $t4 == $t4;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:108:5+1
    assume {:print "$at(190,5116,5117)"} true;
L1:

    // return $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:108:5+1
    assume {:print "$at(190,5116,5117)"} true;
    $ret0 := $t4;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:108:5+1
L2:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/primary_fungible_store.move:108:5+1
    assume {:print "$at(190,5116,5117)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:73:10+234
function {:inline} $1_coin_spec_fun_supply_tracked'#0'(val: int, supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    ($1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'(supply) ==> $IsEqual'u64'(val, $1_optional_aggregator_optional_aggregator_value($1_option_spec_borrow'$1_optional_aggregator_OptionalAggregator'(supply))))
}

// struct coin::DepositEvent at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:204:5+64
datatype $1_coin_DepositEvent {
    $1_coin_DepositEvent($amount: int)
}
function {:inline} $Update'$1_coin_DepositEvent'_amount(s: $1_coin_DepositEvent, x: int): $1_coin_DepositEvent {
    $1_coin_DepositEvent(x)
}
function $IsValid'$1_coin_DepositEvent'(s: $1_coin_DepositEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_DepositEvent'(s1: $1_coin_DepositEvent, s2: $1_coin_DepositEvent): bool {
    s1 == s2
}

// struct coin::WithdrawEvent at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:209:5+65
datatype $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent($amount: int)
}
function {:inline} $Update'$1_coin_WithdrawEvent'_amount(s: $1_coin_WithdrawEvent, x: int): $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent(x)
}
function $IsValid'$1_coin_WithdrawEvent'(s: $1_coin_WithdrawEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_WithdrawEvent'(s1: $1_coin_WithdrawEvent, s2: $1_coin_WithdrawEvent): bool {
    s1 == s2
}

// struct coin::Coin<#0> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:125:5+112
datatype $1_coin_Coin'#0' {
    $1_coin_Coin'#0'($value: int)
}
function {:inline} $Update'$1_coin_Coin'#0''_value(s: $1_coin_Coin'#0', x: int): $1_coin_Coin'#0' {
    $1_coin_Coin'#0'(x)
}
function $IsValid'$1_coin_Coin'#0''(s: $1_coin_Coin'#0'): bool {
    $IsValid'u64'(s->$value)
}
function {:inline} $IsEqual'$1_coin_Coin'#0''(s1: $1_coin_Coin'#0', s2: $1_coin_Coin'#0'): bool {
    s1 == s2
}

// struct coin::CoinConversionMap at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:251:5+111
datatype $1_coin_CoinConversionMap {
    $1_coin_CoinConversionMap($coin_to_fungible_asset_map: Table int ($1_object_Object'$1_fungible_asset_Metadata'))
}
function {:inline} $Update'$1_coin_CoinConversionMap'_coin_to_fungible_asset_map(s: $1_coin_CoinConversionMap, x: Table int ($1_object_Object'$1_fungible_asset_Metadata')): $1_coin_CoinConversionMap {
    $1_coin_CoinConversionMap(x)
}
function $IsValid'$1_coin_CoinConversionMap'(s: $1_coin_CoinConversionMap): bool {
    $IsValid'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata'''(s->$coin_to_fungible_asset_map)
}
function {:inline} $IsEqual'$1_coin_CoinConversionMap'(s1: $1_coin_CoinConversionMap, s2: $1_coin_CoinConversionMap): bool {
    s1 == s2
}
var $1_coin_CoinConversionMap_$memory: $Memory $1_coin_CoinConversionMap;

// struct coin::CoinInfo<#0> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:157:5+548
datatype $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator')
}
function {:inline} $Update'$1_coin_CoinInfo'#0''_name(s: $1_coin_CoinInfo'#0', x: $1_string_String): $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'(x, s->$symbol, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'#0''_symbol(s: $1_coin_CoinInfo'#0', x: $1_string_String): $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'(s->$name, x, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'#0''_decimals(s: $1_coin_CoinInfo'#0', x: int): $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'(s->$name, s->$symbol, x, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'#0''_supply(s: $1_coin_CoinInfo'#0', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'#0' {
    $1_coin_CoinInfo'#0'(s->$name, s->$symbol, s->$decimals, x)
}
function $IsValid'$1_coin_CoinInfo'#0''(s: $1_coin_CoinInfo'#0'): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s->$supply)
}
function {:inline} $IsEqual'$1_coin_CoinInfo'#0''(s1: $1_coin_CoinInfo'#0', s2: $1_coin_CoinInfo'#0'): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1->$supply, s2->$supply)}
var $1_coin_CoinInfo'#0'_$memory: $Memory $1_coin_CoinInfo'#0';

// struct coin::CoinStore<#0> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:142:5+206
datatype $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'($coin: $1_coin_Coin'#0', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent')
}
function {:inline} $Update'$1_coin_CoinStore'#0''_coin(s: $1_coin_CoinStore'#0', x: $1_coin_Coin'#0'): $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'(x, s->$frozen, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'#0''_frozen(s: $1_coin_CoinStore'#0', x: bool): $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'(s->$coin, x, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'#0''_deposit_events(s: $1_coin_CoinStore'#0', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'(s->$coin, s->$frozen, x, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'#0''_withdraw_events(s: $1_coin_CoinStore'#0', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'#0' {
    $1_coin_CoinStore'#0'(s->$coin, s->$frozen, s->$deposit_events, x)
}
function $IsValid'$1_coin_CoinStore'#0''(s: $1_coin_CoinStore'#0'): bool {
    $IsValid'$1_coin_Coin'#0''(s->$coin)
      && $IsValid'bool'(s->$frozen)
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s->$deposit_events)
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s->$withdraw_events)
}
function {:inline} $IsEqual'$1_coin_CoinStore'#0''(s1: $1_coin_CoinStore'#0', s2: $1_coin_CoinStore'#0'): bool {
    s1 == s2
}
var $1_coin_CoinStore'#0'_$memory: $Memory $1_coin_CoinStore'#0';

// struct coin::PairCreation at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:236:5+122
datatype $1_coin_PairCreation {
    $1_coin_PairCreation($coin_type: $1_type_info_TypeInfo, $fungible_asset_metadata_address: int)
}
function {:inline} $Update'$1_coin_PairCreation'_coin_type(s: $1_coin_PairCreation, x: $1_type_info_TypeInfo): $1_coin_PairCreation {
    $1_coin_PairCreation(x, s->$fungible_asset_metadata_address)
}
function {:inline} $Update'$1_coin_PairCreation'_fungible_asset_metadata_address(s: $1_coin_PairCreation, x: int): $1_coin_PairCreation {
    $1_coin_PairCreation(s->$coin_type, x)
}
function $IsValid'$1_coin_PairCreation'(s: $1_coin_PairCreation): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$coin_type)
      && $IsValid'address'(s->$fungible_asset_metadata_address)
}
function {:inline} $IsEqual'$1_coin_PairCreation'(s1: $1_coin_PairCreation, s2: $1_coin_PairCreation): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$coin_type, s2->$coin_type)
    && $IsEqual'address'(s1->$fungible_asset_metadata_address, s2->$fungible_asset_metadata_address)}

// struct coin::PairedCoinType at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:257:5+61
datatype $1_coin_PairedCoinType {
    $1_coin_PairedCoinType($type: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_coin_PairedCoinType'_type(s: $1_coin_PairedCoinType, x: $1_type_info_TypeInfo): $1_coin_PairedCoinType {
    $1_coin_PairedCoinType(x)
}
function $IsValid'$1_coin_PairedCoinType'(s: $1_coin_PairedCoinType): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type)
}
function {:inline} $IsEqual'$1_coin_PairedCoinType'(s1: $1_coin_PairedCoinType, s2: $1_coin_PairedCoinType): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type, s2->$type)}
var $1_coin_PairedCoinType_$memory: $Memory $1_coin_PairedCoinType;

// struct coin::PairedFungibleAssetRefs at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:263:5+171
datatype $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs($mint_ref_opt: $1_option_Option'$1_fungible_asset_MintRef', $transfer_ref_opt: $1_option_Option'$1_fungible_asset_TransferRef', $burn_ref_opt: $1_option_Option'$1_fungible_asset_BurnRef')
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_mint_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_MintRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(x, s->$transfer_ref_opt, s->$burn_ref_opt)
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_transfer_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_TransferRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(s->$mint_ref_opt, x, s->$burn_ref_opt)
}
function {:inline} $Update'$1_coin_PairedFungibleAssetRefs'_burn_ref_opt(s: $1_coin_PairedFungibleAssetRefs, x: $1_option_Option'$1_fungible_asset_BurnRef'): $1_coin_PairedFungibleAssetRefs {
    $1_coin_PairedFungibleAssetRefs(s->$mint_ref_opt, s->$transfer_ref_opt, x)
}
function $IsValid'$1_coin_PairedFungibleAssetRefs'(s: $1_coin_PairedFungibleAssetRefs): bool {
    $IsValid'$1_option_Option'$1_fungible_asset_MintRef''(s->$mint_ref_opt)
      && $IsValid'$1_option_Option'$1_fungible_asset_TransferRef''(s->$transfer_ref_opt)
      && $IsValid'$1_option_Option'$1_fungible_asset_BurnRef''(s->$burn_ref_opt)
}
function {:inline} $IsEqual'$1_coin_PairedFungibleAssetRefs'(s1: $1_coin_PairedFungibleAssetRefs, s2: $1_coin_PairedFungibleAssetRefs): bool {
    $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''(s1->$mint_ref_opt, s2->$mint_ref_opt)
    && $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''(s1->$transfer_ref_opt, s2->$transfer_ref_opt)
    && $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''(s1->$burn_ref_opt, s2->$burn_ref_opt)}
var $1_coin_PairedFungibleAssetRefs_$memory: $Memory $1_coin_PairedFungibleAssetRefs;

// struct coin::supply<#0> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:64:9+29
datatype $1_coin_Ghost$supply'#0' {
    $1_coin_Ghost$supply'#0'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$supply'#0''_v(s: $1_coin_Ghost$supply'#0', x: int): $1_coin_Ghost$supply'#0' {
    $1_coin_Ghost$supply'#0'(x)
}
function $IsValid'$1_coin_Ghost$supply'#0''(s: $1_coin_Ghost$supply'#0'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$supply'#0''(s1: $1_coin_Ghost$supply'#0', s2: $1_coin_Ghost$supply'#0'): bool {
    s1 == s2
}
var $1_coin_Ghost$supply'#0'_$memory: $Memory $1_coin_Ghost$supply'#0';

// struct coin::aggregate_supply<#0> at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:65:9+39
datatype $1_coin_Ghost$aggregate_supply'#0' {
    $1_coin_Ghost$aggregate_supply'#0'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$aggregate_supply'#0''_v(s: $1_coin_Ghost$aggregate_supply'#0', x: int): $1_coin_Ghost$aggregate_supply'#0' {
    $1_coin_Ghost$aggregate_supply'#0'(x)
}
function $IsValid'$1_coin_Ghost$aggregate_supply'#0''(s: $1_coin_Ghost$aggregate_supply'#0'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$aggregate_supply'#0''(s1: $1_coin_Ghost$aggregate_supply'#0', s2: $1_coin_Ghost$aggregate_supply'#0'): bool {
    s1 == s2
}
var $1_coin_Ghost$aggregate_supply'#0'_$memory: $Memory $1_coin_Ghost$aggregate_supply'#0';

// fun coin::extract<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:950:5+434
procedure {:inline 1} $1_coin_extract'#0'(_$t0: $Mutation ($1_coin_Coin'#0'), _$t1: int) returns ($ret0: $1_coin_Coin'#0', $ret1: $Mutation ($1_coin_Coin'#0'))
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: $1_coin_Ghost$supply'#0';
    var $t5: int;
    var $t6: $Mutation ($1_coin_Ghost$supply'#0');
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $Mutation (int);
    var $t11: $1_coin_Ghost$supply'#0';
    var $t12: int;
    var $t13: $Mutation ($1_coin_Ghost$supply'#0');
    var $t14: $1_coin_Coin'#0';
    var $t15: int;
    var $t16: int;
    var $t0: $Mutation ($1_coin_Coin'#0');
    var $t1: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:950:5+1
    assume {:print "$at(130,39705,39706)"} true;
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,0,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // trace_local[amount]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:950:5+1
    assume {:print "$track_local(51,0,1):", $t1} $t1 == $t1;

    // $t2 := get_field<0x1::coin::Coin<#0>>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:17+10
    assume {:print "$at(130,39808,39818)"} true;
    $t2 := $Dereference($t0)->$value;

    // $t3 := >=($t2, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:17+20
    call $t3 := $Ge($t2, $t1);

    // if ($t3) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:9+6
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:952:9+81
    assume {:print "$at(130,39887,39968)"} true;
L1:

    // assume Identical($t4, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t1))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:953:13+52
    assume {:print "$at(130,39906,39958)"} true;
    assume ($t4 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v - $t1)));

    // assume Identical($t5, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:953:13+52
    assume ($t5 == 0);

    // $t6 := borrow_global<0x1::coin::Ghost$supply<#0>>($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:953:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t5));
    }

    // write_ref($t6, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:953:13+52
    $t6 := $UpdateMutation($t6, $t4);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:953:13+52
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // $t7 := get_field<0x1::coin::Coin<#0>>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:955:22+10
    assume {:print "$at(130,39991,40001)"} true;
    $t7 := $Dereference($t0)->$value;

    // $t8 := -($t7, $t1) on_abort goto L3 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:955:22+19
    call $t8 := $Sub($t7, $t1);
    if ($abort_flag) {
        assume {:print "$at(130,39991,40010)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(51,0):", $t9} $t9 == $t9;
        goto L3;
    }

    // $t10 := borrow_field<0x1::coin::Coin<#0>>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:955:9+10
    $t10 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t10, $t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:955:9+32
    $t10 := $UpdateMutation($t10, $t8);

    // write_back[Reference($t0).value (u64)]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:955:9+32
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'#0''_value($Dereference($t0), $Dereference($t10)));

    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:955:9+32
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,0,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // assume Identical($t11, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t1))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:957:13+52
    assume {:print "$at(130,40039,40091)"} true;
    assume ($t11 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $t1)));

    // assume Identical($t12, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:957:13+52
    assume ($t12 == 0);

    // $t13 := borrow_global<0x1::coin::Ghost$supply<#0>>($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:957:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t12)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t12), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t12));
    }

    // write_ref($t13, $t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:957:13+52
    $t13 := $UpdateMutation($t13, $t11);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:957:13+52
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // $t14 := pack 0x1::coin::Coin<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:959:9+22
    assume {:print "$at(130,40111,40133)"} true;
    $t14 := $1_coin_Coin'#0'($t1);

    // trace_return[0]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:950:90+349
    assume {:print "$at(130,39790,40139)"} true;
    assume {:print "$track_return(51,0,0):", $t14} $t14 == $t14;

    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:950:90+349
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,0,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:950:90+349
    goto L2;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:9+6
    assume {:print "$at(130,39800,39806)"} true;
L0:

    // drop($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:9+6
    assume {:print "$at(130,39800,39806)"} true;

    // $t15 := 6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:63+21
    $t15 := 6;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L3 with $t9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:39+46
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(130,39830,39876)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(51,0):", $t9} $t9 == $t9;
        goto L3;
    }

    // trace_abort($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:9+6
    assume {:print "$at(130,39800,39806)"} true;
    assume {:print "$track_abort(51,0):", $t16} $t16 == $t16;

    // $t9 := move($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:9+6
    $t9 := $t16;

    // goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:951:9+6
    goto L3;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:960:5+1
    assume {:print "$at(130,40138,40139)"} true;
L2:

    // return $t14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:960:5+1
    assume {:print "$at(130,40138,40139)"} true;
    $ret0 := $t14;
    $ret1 := $t0;
    return;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:960:5+1
L3:

    // abort($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:960:5+1
    assume {:print "$at(130,40138,40139)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun coin::value<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1121:5+81
procedure {:inline 1} $1_coin_value'#0'(_$t0: $1_coin_Coin'#0') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_coin_Coin'#0';
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1121:5+1
    assume {:print "$at(130,46467,46468)"} true;
    assume {:print "$track_local(51,1,0):", $t0} $t0 == $t0;

    // $t1 := get_field<0x1::coin::Coin<#0>>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1122:9+10
    assume {:print "$at(130,46532,46542)"} true;
    $t1 := $t0->$value;

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1122:9+10
    assume {:print "$track_return(51,1,0):", $t1} $t1 == $t1;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1123:5+1
    assume {:print "$at(130,46547,46548)"} true;
L1:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1123:5+1
    assume {:print "$at(130,46547,46548)"} true;
    $ret0 := $t1;
    return;

}

// fun coin::merge<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1068:5+469
procedure {:inline 1} $1_coin_merge'#0'(_$t0: $Mutation ($1_coin_Coin'#0'), _$t1: $1_coin_Coin'#0') returns ($ret0: $Mutation ($1_coin_Coin'#0'))
{
    // declare local variables
    var $t2: int;
    var $t3: $1_coin_Ghost$supply'#0';
    var $t4: int;
    var $t5: $Mutation ($1_coin_Ghost$supply'#0');
    var $t6: int;
    var $t7: $1_coin_Ghost$supply'#0';
    var $t8: int;
    var $t9: $Mutation ($1_coin_Ghost$supply'#0');
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t0: $Mutation ($1_coin_Coin'#0');
    var $t1: $1_coin_Coin'#0';
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[dst_coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1068:5+1
    assume {:print "$at(130,44504,44505)"} true;
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,2,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // trace_local[source_coin]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1068:5+1
    assume {:print "$track_local(51,2,1):", $t1} $t1 == $t1;

    // assume Le(Add(select coin::Coin.value<0x1::coin::Coin<#0>>($t0), select coin::Coin.value<0x1::coin::Coin<#0>>($t1)), 18446744073709551615) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1070:13+53
    assume {:print "$at(130,44620,44673)"} true;
    assume (($Dereference($t0)->$value + $t1->$value) <= 18446744073709551615);

    // assume Identical($t3, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value<0x1::coin::Coin<#0>>($t1)))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1073:13+63
    assume {:print "$at(130,44712,44775)"} true;
    assume ($t3 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v - $t1->$value)));

    // assume Identical($t4, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1073:13+63
    assume ($t4 == 0);

    // $t5 := borrow_global<0x1::coin::Ghost$supply<#0>>($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1073:13+63
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t4));
    }

    // write_ref($t5, $t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1073:13+63
    $t5 := $UpdateMutation($t5, $t3);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1073:13+63
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t5),
        $Dereference($t5));

    // $t6 := unpack 0x1::coin::Coin<#0>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1075:13+14
    assume {:print "$at(130,44799,44813)"} true;
    $t6 := $t1->$value;

    // trace_local[value]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1075:13+14
    assume {:print "$track_local(51,2,2):", $t6} $t6 == $t6;

    // assume Identical($t7, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t6))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1077:13+51
    assume {:print "$at(130,44856,44907)"} true;
    assume ($t7 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $t6)));

    // assume Identical($t8, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1077:13+51
    assume ($t8 == 0);

    // $t9 := borrow_global<0x1::coin::Ghost$supply<#0>>($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1077:13+51
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t8), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t8));
    }

    // write_ref($t9, $t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1077:13+51
    $t9 := $UpdateMutation($t9, $t7);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1077:13+51
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t10 := get_field<0x1::coin::Coin<#0>>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1079:26+14
    assume {:print "$at(130,44944,44958)"} true;
    $t10 := $Dereference($t0)->$value;

    // $t11 := +($t10, $t6) on_abort goto L2 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1079:26+22
    call $t11 := $AddU64($t10, $t6);
    if ($abort_flag) {
        assume {:print "$at(130,44944,44966)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,2):", $t12} $t12 == $t12;
        goto L2;
    }

    // $t13 := borrow_field<0x1::coin::Coin<#0>>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1079:9+14
    $t13 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t13, $t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1079:9+39
    $t13 := $UpdateMutation($t13, $t11);

    // write_back[Reference($t0).value (u64)]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1079:9+39
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'#0''_value($Dereference($t0), $Dereference($t13)));

    // trace_local[dst_coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1079:9+39
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,2,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // trace_local[dst_coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1068:92+382
    assume {:print "$at(130,44591,44973)"} true;
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,2,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1080:5+1
    assume {:print "$at(130,44972,44973)"} true;
L1:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1080:5+1
    assume {:print "$at(130,44972,44973)"} true;
    $ret0 := $t0;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1080:5+1
L2:

    // abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1080:5+1
    assume {:print "$at(130,44972,44973)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun coin::name<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:740:5+142
procedure {:inline 1} $1_coin_name'#0'() returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'#0';
    var $t5: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $1_coin_Ghost$supply'#0'_$memory#64: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#65: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#66: $Memory $1_coin_CoinInfo'#0';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:192:9+58
    assume {:print "$at(131,9288,9346)"} true;
    assume ($t0 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    assume {:print "$at(130,30887,30911)"} true;

    // $t2 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
L4:

    // trace_abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    assume {:print "$at(130,30887,30911)"} true;
    assume {:print "$track_abort(51,6):", $t3} $t3 == $t3;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
L3:

    // @66 := save_mem(coin::CoinInfo<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    assume {:print "$at(130,30887,30911)"} true;
    $1_coin_CoinInfo'#0'_$memory#66 := $1_coin_CoinInfo'#0'_$memory;

    // @64 := save_mem(coin::supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    $1_coin_Ghost$supply'#0'_$memory#64 := $1_coin_Ghost$supply'#0'_$memory;

    // @65 := save_mem(coin::aggregate_supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#65 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@64]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@65]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@66]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#64, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#65, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#66, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:9+59
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(130,30853,30912)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,6):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.name($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:9+64
    $t5 := $t4->$name;

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:741:9+64
    assume {:print "$track_return(51,6,0):", $t5} $t5 == $t5;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:742:5+1
    assume {:print "$at(130,30922,30923)"} true;
L1:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:742:5+1
    assume {:print "$at(130,30922,30923)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:742:5+1
L2:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:742:5+1
    assume {:print "$at(130,30922,30923)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::symbol<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:746:5+146
procedure {:inline 1} $1_coin_symbol'#0'() returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'#0';
    var $t5: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $1_coin_Ghost$supply'#0'_$memory#58: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#59: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#60: $Memory $1_coin_CoinInfo'#0';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:192:9+58
    assume {:print "$at(131,9288,9346)"} true;
    assume ($t0 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    assume {:print "$at(130,31128,31152)"} true;

    // $t2 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
L4:

    // trace_abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    assume {:print "$at(130,31128,31152)"} true;
    assume {:print "$track_abort(51,7):", $t3} $t3 == $t3;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
L3:

    // @60 := save_mem(coin::CoinInfo<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    assume {:print "$at(130,31128,31152)"} true;
    $1_coin_CoinInfo'#0'_$memory#60 := $1_coin_CoinInfo'#0'_$memory;

    // @58 := save_mem(coin::supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    $1_coin_Ghost$supply'#0'_$memory#58 := $1_coin_Ghost$supply'#0'_$memory;

    // @59 := save_mem(coin::aggregate_supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#59 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@58]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@59]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@60]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#58, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#59, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#60, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:9+59
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(130,31094,31153)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,7):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.symbol($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:9+66
    $t5 := $t4->$symbol;

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:747:9+66
    assume {:print "$track_return(51,7,0):", $t5} $t5 == $t5;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:748:5+1
    assume {:print "$at(130,31165,31166)"} true;
L1:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:748:5+1
    assume {:print "$at(130,31165,31166)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:748:5+1
L2:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:748:5+1
    assume {:print "$at(130,31165,31166)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::decimals<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:754:5+138
procedure {:inline 1} $1_coin_decimals'#0'() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: $1_coin_CoinInfo'#0';
    var $t5: int;
    var $temp_0'u8': int;
    var $1_coin_Ghost$supply'#0'_$memory#52: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#53: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#54: $Memory $1_coin_CoinInfo'#0';

    // bytecode translation starts here
    // assume Identical($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:192:9+58
    assume {:print "$at(131,9288,9346)"} true;
    assume ($t0 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque begin: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    assume {:print "$at(130,31497,31521)"} true;

    // $t2 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
L4:

    // trace_abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    assume {:print "$at(130,31497,31521)"} true;
    assume {:print "$track_abort(51,8):", $t3} $t3 == $t3;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
L3:

    // @54 := save_mem(coin::CoinInfo<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    assume {:print "$at(130,31497,31521)"} true;
    $1_coin_CoinInfo'#0'_$memory#54 := $1_coin_CoinInfo'#0'_$memory;

    // @52 := save_mem(coin::supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    $1_coin_Ghost$supply'#0'_$memory#52 := $1_coin_Ghost$supply'#0'_$memory;

    // @53 := save_mem(coin::aggregate_supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#53 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    assume $IsValid'address'($t1);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@52]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@53]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@54]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#52, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#53, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#54, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t1, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24
    assume $IsEqual'address'($t1, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t1 := opaque end: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:43+24

    // $t4 := get_global<0x1::coin::CoinInfo<#0>>($t1) on_abort goto L2 with $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:9+59
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(130,31463,31522)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(51,8):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<0x1::coin::CoinInfo<#0>>.decimals($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:9+68
    $t5 := $t4->$decimals;

    // trace_return[0]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:755:9+68
    assume {:print "$track_return(51,8,0):", $t5} $t5 == $t5;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:756:5+1
    assume {:print "$at(130,31536,31537)"} true;
L1:

    // return $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:756:5+1
    assume {:print "$at(130,31536,31537)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:756:5+1
L2:

    // abort($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:756:5+1
    assume {:print "$at(130,31536,31537)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun coin::burn_internal<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1225:5+574
procedure {:inline 1} $1_coin_burn_internal'#0'(_$t0: $1_coin_Coin'#0') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t3: int;
    var $t4: $1_coin_Ghost$supply'#0';
    var $t5: int;
    var $t6: $Mutation ($1_coin_Ghost$supply'#0');
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: $Mutation ($1_coin_CoinInfo'#0');
    var $t14: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t15: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t16: bool;
    var $t17: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t18: int;
    var $t0: $1_coin_Coin'#0';
    var $1_coin_CoinInfo'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'u64': int;
    var $1_coin_Ghost$supply'#0'_$memory#82: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#83: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#84: $Memory $1_coin_CoinInfo'#0';
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:247:9+58
    assume {:print "$at(131,11125,11183)"} true;
    assume ($t3 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1225:5+1
    assume {:print "$at(130,50586,50587)"} true;
    assume {:print "$track_local(51,11,0):", $t0} $t0 == $t0;

    // assume Identical($t4, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value<0x1::coin::Coin<#0>>($t0)))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1227:13+56
    assume {:print "$at(130,50688,50744)"} true;
    assume ($t4 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v - $t0->$value)));

    // assume Identical($t5, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1227:13+56
    assume ($t5 == 0);

    // $t6 := borrow_global<0x1::coin::Ghost$supply<#0>>($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1227:13+56
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t5));
    }

    // write_ref($t6, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1227:13+56
    $t6 := $UpdateMutation($t6, $t4);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1227:13+56
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // $t7 := unpack 0x1::coin::Coin<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1229:13+22
    assume {:print "$at(130,50768,50790)"} true;
    $t7 := $t0->$value;

    // trace_local[amount]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1229:13+22
    assume {:print "$track_local(51,11,1):", $t7} $t7 == $t7;

    // $t8 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1230:23+1
    assume {:print "$at(130,50821,50822)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // $t9 := !=($t7, $t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1230:13+11
    $t9 := !$IsEqual'u64'($t7, $t8);

    // if ($t9) goto L0 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1230:9+331
    if ($t9) { goto L0; } else { goto L2; }

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    assume {:print "$at(130,50900,50924)"} true;
L0:

    // $t10 := opaque begin: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    assume {:print "$at(130,50900,50924)"} true;

    // $t11 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    havoc $t11;

    // if ($t11) goto L8 else goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    if ($t11) { goto L8; } else { goto L7; }

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
L8:

    // trace_abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    assume {:print "$at(130,50900,50924)"} true;
    assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    goto L6;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
L7:

    // @84 := save_mem(coin::CoinInfo<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    assume {:print "$at(130,50900,50924)"} true;
    $1_coin_CoinInfo'#0'_$memory#84 := $1_coin_CoinInfo'#0'_$memory;

    // @82 := save_mem(coin::supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    $1_coin_Ghost$supply'#0'_$memory#82 := $1_coin_Ghost$supply'#0'_$memory;

    // @83 := save_mem(coin::aggregate_supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#83 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    assume $IsValid'address'($t10);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@82]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@83]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@84]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#82, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#83, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#84, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t10, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24
    assume $IsEqual'address'($t10, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t10 := opaque end: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:75+24

    // $t13 := borrow_global<0x1::coin::CoinInfo<#0>>($t10) on_abort goto L6 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:37+63
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(130,50862,50925)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;
        goto L6;
    }

    // $t14 := borrow_field<0x1::coin::CoinInfo<#0>>.supply($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:32+75
    $t14 := $ChildMutation($t13, 3, $Dereference($t13)->$supply);

    // trace_local[maybe_supply]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1231:32+75
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t14);
    assume {:print "$track_local(51,11,2):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t15 := read_ref($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:33+12
    assume {:print "$at(130,50966,50978)"} true;
    $t15 := $Dereference($t14);

    // $t16 := opaque begin: option::is_some<0x1::optional_aggregator::OptionalAggregator>($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:17+29

    // assume WellFormed($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:17+29
    assume $IsValid'bool'($t16);

    // assume Eq<bool>($t16, option::spec_is_some<0x1::optional_aggregator::OptionalAggregator>($t15)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:17+29
    assume $IsEqual'bool'($t16, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t15));

    // $t16 := opaque end: option::is_some<0x1::optional_aggregator::OptionalAggregator>($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:17+29

    // if ($t16) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:13+181
    if ($t16) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1233:30+32
    assume {:print "$at(130,51012,51044)"} true;
L4:

    // $t17 := option::borrow_mut<0x1::optional_aggregator::OptionalAggregator>($t14) on_abort goto L6 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1233:30+32
    assume {:print "$at(130,51012,51044)"} true;
    call $t17,$t14 := $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t14);
    if ($abort_flag) {
        assume {:print "$at(130,51012,51044)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;
        goto L6;
    }

    // $t18 := (u128)($t7) on_abort goto L6 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1234:50+16
    assume {:print "$at(130,51095,51111)"} true;
    call $t18 := $CastU128($t7);
    if ($abort_flag) {
        assume {:print "$at(130,51095,51111)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;
        goto L6;
    }

    // optional_aggregator::sub($t17, $t18) on_abort goto L6 with $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1234:17+50
    call $t17 := $1_optional_aggregator_sub($t17, $t18);
    if ($abort_flag) {
        assume {:print "$at(130,51062,51112)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(51,11):", $t12} $t12 == $t12;
        goto L6;
    }

    // write_back[Reference($t14).vec (vector<0x1::optional_aggregator::OptionalAggregator>)/[]]($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1234:17+50
    $t14 := $UpdateMutation($t14, (var $$sel0 := $Dereference($t14)->$vec; $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec($Dereference($t14), UpdateVec($$sel0, ReadVec($t17->p, LenVec($t14->p) + 1), $Dereference($t17)))));

    // write_back[Reference($t13).supply (0x1::option::Option<0x1::optional_aggregator::OptionalAggregator>)]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1234:17+50
    $t13 := $UpdateMutation($t13, $Update'$1_coin_CoinInfo'#0''_supply($Dereference($t13), $Dereference($t14)));

    // pack_ref_deep($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1234:17+50

    // write_back[0x1::coin::CoinInfo<#0>@]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1234:17+50
    $1_coin_CoinInfo'#0'_$memory := $ResourceUpdate($1_coin_CoinInfo'#0'_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1237:9+6
    assume {:print "$at(130,51148,51154)"} true;
L2:

    // trace_return[0]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1225:78+501
    assume {:print "$at(130,50659,51160)"} true;
    assume {:print "$track_return(51,11,0):", $t7} $t7 == $t7;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1225:78+501
    goto L5;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:13+181
    assume {:print "$at(130,50946,51127)"} true;
L3:

    // pack_ref_deep($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:13+181
    assume {:print "$at(130,50946,51127)"} true;

    // drop($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:13+181

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1232:13+181
    goto L2;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1238:5+1
    assume {:print "$at(130,51159,51160)"} true;
L5:

    // return $t7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1238:5+1
    assume {:print "$at(130,51159,51160)"} true;
    $ret0 := $t7;
    return;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1238:5+1
L6:

    // abort($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1238:5+1
    assume {:print "$at(130,51159,51160)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun coin::deposit<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:858:5+1001
procedure {:inline 1} $1_coin_deposit'#0'(_$t0: int, _$t1: $1_coin_Coin'#0') returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_coin_CoinStore'#0');
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: bool;
    var $t6: bool;
    var $t7: $1_coin_CoinStore'#0';
    var $t8: bool;
    var $t9: $Mutation ($1_coin_CoinStore'#0');
    var $t10: int;
    var $t11: bool;
    var $t12: $Mutation ($1_event_EventHandle'$1_coin_DepositEvent');
    var $t13: int;
    var $t14: $1_coin_DepositEvent;
    var $t15: $Mutation ($1_coin_Coin'#0');
    var $t16: int;
    var $t17: int;
    var $t18: $1_object_Object'$1_fungible_asset_Metadata';
    var $t19: bool;
    var $t20: bool;
    var $t21: bool;
    var $t22: int;
    var $t23: $1_fungible_asset_FungibleAsset;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: bool;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: bool;
    var $t32: bool;
    var $t0: int;
    var $t1: $1_coin_Coin'#0';
    var $1_coin_CoinInfo'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_coin_CoinStore'#0'': $1_coin_CoinStore'#0';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t7, global<0x1::coin::CoinStore<#0>>($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:323:9+59
    assume {:print "$at(131,14121,14180)"} true;
    assume ($t7 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t0));

    // trace_local[account_addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:858:5+1
    assume {:print "$at(130,35754,35755)"} true;
    assume {:print "$track_local(51,12,0):", $t0} $t0 == $t0;

    // trace_local[coin]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:858:5+1
    assume {:print "$track_local(51,12,1):", $t1} $t1 == $t1;

    // $t8 := exists<0x1::coin::CoinStore<#0>>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:862:13+41
    assume {:print "$at(130,35912,35953)"} true;
    $t8 := $ResourceExists($1_coin_CoinStore'#0'_$memory, $t0);

    // if ($t8) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:862:9+841
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:863:30+52
    assume {:print "$at(130,35986,36038)"} true;
L1:

    // $t9 := borrow_global<0x1::coin::CoinStore<#0>>($t0) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:863:30+52
    assume {:print "$at(130,35986,36038)"} true;
    if (!$ResourceExists($1_coin_CoinStore'#0'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_coin_CoinStore'#0'_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(130,35986,36038)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_local[coin_store]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:863:30+52
    $temp_0'$1_coin_CoinStore'#0'' := $Dereference($t9);
    assume {:print "$track_local(51,12,2):", $temp_0'$1_coin_CoinStore'#0''} $temp_0'$1_coin_CoinStore'#0'' == $temp_0'$1_coin_CoinStore'#0'';

    // $t11 := get_field<0x1::coin::CoinStore<#0>>.frozen($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:865:18+17
    assume {:print "$at(130,36078,36095)"} true;
    $t11 := $Dereference($t9)->$frozen;

    // if ($t11) goto L2 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:865:17+18
    if ($t11) { goto L2; } else { goto L3; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:869:21+30
    assume {:print "$at(130,36232,36262)"} true;
L3:

    // $t12 := borrow_field<0x1::coin::CoinStore<#0>>.deposit_events($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:869:21+30
    assume {:print "$at(130,36232,36262)"} true;
    $t12 := $ChildMutation($t9, 2, $Dereference($t9)->$deposit_events);

    // $t13 := get_field<0x1::coin::Coin<#0>>.value($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:870:44+10
    assume {:print "$at(130,36307,36317)"} true;
    $t13 := $t1->$value;

    // $t14 := pack 0x1::coin::DepositEvent($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:870:21+35
    $t14 := $1_coin_DepositEvent($t13);

    // opaque begin: event::emit_event<0x1::coin::DepositEvent>($t12, $t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:868:17+159
    assume {:print "$at(130,36179,36338)"} true;

    // opaque end: event::emit_event<0x1::coin::DepositEvent>($t12, $t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:868:17+159

    // write_back[Reference($t9).deposit_events (0x1::event::EventHandle<0x1::coin::DepositEvent>)]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:868:17+159
    $t9 := $UpdateMutation($t9, $Update'$1_coin_CoinStore'#0''_deposit_events($Dereference($t9), $Dereference($t12)));

    // $t15 := borrow_field<0x1::coin::CoinStore<#0>>.coin($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:872:19+20
    assume {:print "$at(130,36358,36378)"} true;
    $t15 := $ChildMutation($t9, 0, $Dereference($t9)->$coin);

    // coin::merge<#0>($t15, $t1) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:872:13+33
    call $t15 := $1_coin_merge'#0'($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(130,36352,36385)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // write_back[Reference($t9).coin (0x1::coin::Coin<#0>)]($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:872:13+33
    $t9 := $UpdateMutation($t9, $Update'$1_coin_CoinStore'#0''_coin($Dereference($t9), $Dereference($t15)));

    // write_back[0x1::coin::CoinStore<#0>@]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:872:13+33
    $1_coin_CoinStore'#0'_$memory := $ResourceUpdate($1_coin_CoinStore'#0'_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:862:9+841
    assume {:print "$at(130,35908,36749)"} true;
L10:

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:862:9+841
    assume {:print "$at(130,35908,36749)"} true;
    goto L15;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:864:13+6
    assume {:print "$at(130,36052,36058)"} true;
L2:

    // drop($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:864:13+6
    assume {:print "$at(130,36052,36058)"} true;

    // $t16 := 10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:866:42+7
    assume {:print "$at(130,36138,36145)"} true;
    $t16 := 10;
    assume $IsValid'u64'($t16);

    // $t17 := error::permission_denied($t16) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:866:17+33
    call $t17 := $1_error_permission_denied($t16);
    if ($abort_flag) {
        assume {:print "$at(130,36113,36146)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_abort($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:864:13+6
    assume {:print "$at(130,36052,36058)"} true;
    assume {:print "$track_abort(51,12):", $t17} $t17 == $t17;

    // $t10 := move($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:864:13+6
    $t10 := $t17;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:864:13+6
    goto L16;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:874:28+34
    assume {:print "$at(130,36431,36465)"} true;
L0:

    // $t18 := coin::ensure_paired_metadata<#0>() on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:874:28+34
    assume {:print "$at(130,36431,36465)"} true;
    call $t18 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,36431,36465)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_local[account_address]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:900:16+33
    assume {:print "$at(130,37333,37366)"} true;
    assume {:print "$track_local(51,12,3):", $t0} $t0 == $t0;

    // trace_local[metadata]($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:900:16+33
    assume {:print "$track_local(51,12,4):", $t18} $t18 == $t18;

    // $t19 := features::new_accounts_default_to_fa_store_enabled() on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+52
    assume {:print "$at(130,37459,37511)"} true;
    call $t19 := $1_features_new_accounts_default_to_fa_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(130,37459,37511)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // if ($t19) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
    if ($t19) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
L5:

    // $t20 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
    assume {:print "$at(130,37459,37618)"} true;
    $t20 := true;
    assume $IsValid'bool'($t20);

    // $t5 := $t20 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
    $t5 := $t20;

    // trace_local[$t2]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
    assume {:print "$track_local(51,12,5):", $t20} $t20 == $t20;

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
L14:

    // if ($t5) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    assume {:print "$at(130,37459,37867)"} true;
    if ($t5) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
L7:

    // $t21 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    assume {:print "$at(130,37459,37867)"} true;
    $t21 := true;
    assume $IsValid'bool'($t21);

    // $t6 := $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    $t6 := $t21;

    // trace_local[$t16]($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    assume {:print "$track_local(51,12,6):", $t21} $t21 == $t21;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:875:13+259
    assume {:print "$at(130,36479,36738)"} true;
L11:

    // if ($t6) goto L9 else goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:875:13+259
    assume {:print "$at(130,36479,36738)"} true;
    if ($t6) { goto L9; } else { goto L8; }

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:876:49+12
    assume {:print "$at(130,36593,36605)"} true;
L9:

    // assume Identical($t22, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:305:9+58
    assume {:print "$at(131,13514,13572)"} true;
    assume ($t22 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t23 := coin::coin_to_fungible_asset<#0>($t1) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:876:63+28
    assume {:print "$at(130,36607,36635)"} true;
    call $t23 := $1_coin_coin_to_fungible_asset'#0'($t1);
    if ($abort_flag) {
        assume {:print "$at(130,36607,36635)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // primary_fungible_store::deposit($t0, $t23) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:876:17+75
    call $1_primary_fungible_store_deposit($t0, $t23);
    if ($abort_flag) {
        assume {:print "$at(130,36561,36636)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:876:17+75
    goto L10;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:878:40+25
    assume {:print "$at(130,36698,36723)"} true;
L8:

    // $t24 := 5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:878:40+25
    assume {:print "$at(130,36698,36723)"} true;
    $t24 := 5;
    assume $IsValid'u64'($t24);

    // $t25 := error::not_found($t24) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:878:23+43
    call $t25 := $1_error_not_found($t24);
    if ($abort_flag) {
        assume {:print "$at(130,36681,36724)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_abort($t25) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:878:17+49
    assume {:print "$at(130,36675,36724)"} true;
    assume {:print "$track_abort(51,12):", $t25} $t25 == $t25;

    // $t10 := move($t25) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:878:17+49
    $t10 := $t25;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:878:17+49
    goto L16;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:906:17+15
    assume {:print "$at(130,37737,37752)"} true;
L6:

    // $t26 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t0, $t18) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:905:41+128
    assume {:print "$at(130,37664,37792)"} true;
    call $t26 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t18);
    if ($abort_flag) {
        assume {:print "$at(130,37664,37792)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t27 := fungible_asset::store_exists($t26) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:909:13+51
    assume {:print "$at(130,37806,37857)"} true;
    call $t27 := $1_fungible_asset_store_exists($t26);
    if ($abort_flag) {
        assume {:print "$at(130,37806,37857)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t6 := $t27 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:909:13+51
    $t6 := $t27;

    // trace_local[$t16]($t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:909:13+51
    assume {:print "$track_local(51,12,6):", $t27} $t27 == $t27;

    // goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:909:13+51
    goto L11;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:66+56
    assume {:print "$at(130,37516,37572)"} true;
L4:

    // $t28 := features::new_accounts_default_to_fa_apt_store_enabled() on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:66+56
    assume {:print "$at(130,37516,37572)"} true;
    call $t28 := $1_features_new_accounts_default_to_fa_apt_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(130,37516,37572)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // if ($t28) goto L13 else goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    if ($t28) { goto L13; } else { goto L12; }

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:149+9
L13:

    // $t29 := object::object_address<0x1::fungible_asset::Metadata>($t18) on_abort goto L16 with $t10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:126+33
    assume {:print "$at(130,37576,37609)"} true;
    call $t29 := $1_object_object_address'$1_fungible_asset_Metadata'($t18);
    if ($abort_flag) {
        assume {:print "$at(130,37576,37609)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(51,12):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t30 := 0xa at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:163+4
    $t30 := 10;
    assume $IsValid'address'($t30);

    // $t31 := ==($t29, $t30) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:126+41
    $t31 := $IsEqual'address'($t29, $t30);

    // $t5 := $t31 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:126+41
    $t5 := $t31;

    // trace_local[$t2]($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:126+41
    assume {:print "$track_local(51,12,5):", $t31} $t31 == $t31;

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    goto L14;

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
L12:

    // $t32 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    assume {:print "$at(130,37515,37618)"} true;
    $t32 := false;
    assume $IsValid'bool'($t32);

    // $t5 := $t32 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    $t5 := $t32;

    // trace_local[$t2]($t32) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    assume {:print "$track_local(51,12,5):", $t32} $t32 == $t32;

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    goto L14;

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:881:5+1
    assume {:print "$at(130,36754,36755)"} true;
L15:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:881:5+1
    assume {:print "$at(130,36754,36755)"} true;
    return;

    // label L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:881:5+1
L16:

    // abort($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:881:5+1
    assume {:print "$at(130,36754,36755)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun coin::mint_internal<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1197:5+1216
procedure {:inline 1} $1_coin_mint_internal'#0'(_$t0: int) returns ($ret0: $1_coin_Coin'#0')
{
    // declare local variables
    var $t1: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t2: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: $1_coin_Coin'#0';
    var $t8: $1_coin_Coin'#0';
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: $Mutation ($1_coin_CoinInfo'#0');
    var $t13: $Mutation ($1_option_Option'$1_optional_aggregator_OptionalAggregator');
    var $t14: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t15: bool;
    var $t16: $Mutation ($1_optional_aggregator_OptionalAggregator);
    var $t17: int;
    var $t18: $1_coin_Ghost$supply'#0';
    var $t19: int;
    var $t20: $Mutation ($1_coin_Ghost$supply'#0');
    var $t21: $1_coin_Coin'#0';
    var $t0: int;
    var $1_coin_CoinInfo'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'': $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $temp_0'$1_optional_aggregator_OptionalAggregator': $1_optional_aggregator_OptionalAggregator;
    var $temp_0'u64': int;
    var $1_coin_Ghost$supply'#0'_$memory#91: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#92: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#93: $Memory $1_coin_CoinInfo'#0';
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:109:9+58
    assume {:print "$at(131,6122,6180)"} true;
    assume ($t3 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // trace_local[amount]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1197:5+1
    assume {:print "$at(130,49364,49365)"} true;
    assume {:print "$track_local(51,16,0):", $t0} $t0 == $t0;

    // $t4 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1198:23+1
    assume {:print "$at(130,49463,49464)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t0, $t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1198:13+11
    $t5 := $IsEqual'u64'($t0, $t4);

    // if ($t5) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1198:9+103
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1200:24+1
    assume {:print "$at(130,49527,49528)"} true;
L1:

    // $t6 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1200:24+1
    assume {:print "$at(130,49527,49528)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := pack 0x1::coin::Coin<#0>($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1199:20+55
    assume {:print "$at(130,49487,49542)"} true;
    $t7 := $1_coin_Coin'#0'($t6);

    // trace_return[0]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1199:13+62
    assume {:print "$track_return(51,16,0):", $t7} $t7 == $t7;

    // $t8 := move($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1199:13+62
    $t8 := $t7;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1199:13+62
    goto L5;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    assume {:print "$at(130,49625,49649)"} true;
L0:

    // $t9 := opaque begin: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    assume {:print "$at(130,49625,49649)"} true;

    // $t10 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    havoc $t10;

    // if ($t10) goto L8 else goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    if ($t10) { goto L8; } else { goto L7; }

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
L8:

    // trace_abort($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    assume {:print "$at(130,49625,49649)"} true;
    assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    goto L6;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
L7:

    // @93 := save_mem(coin::CoinInfo<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    assume {:print "$at(130,49625,49649)"} true;
    $1_coin_CoinInfo'#0'_$memory#93 := $1_coin_CoinInfo'#0'_$memory;

    // @91 := save_mem(coin::supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    $1_coin_Ghost$supply'#0'_$memory#91 := $1_coin_Ghost$supply'#0'_$memory;

    // @92 := save_mem(coin::aggregate_supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#92 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    assume $IsValid'address'($t9);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@91]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@92]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@93]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#91, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#92, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#93, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t9, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24
    assume $IsEqual'address'($t9, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t9 := opaque end: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:71+24

    // $t12 := borrow_global<0x1::coin::CoinInfo<#0>>($t9) on_abort goto L6 with $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:33+63
    if (!$ResourceExists($1_coin_CoinInfo'#0'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(130,49587,49650)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;
        goto L6;
    }

    // $t13 := borrow_field<0x1::coin::CoinInfo<#0>>.supply($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:28+75
    $t13 := $ChildMutation($t12, 3, $Dereference($t12)->$supply);

    // trace_local[maybe_supply]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1204:28+75
    $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' := $Dereference($t13);
    assume {:print "$track_local(51,16,1):", $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator''} $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'' == $temp_0'$1_option_Option'$1_optional_aggregator_OptionalAggregator'';

    // $t14 := read_ref($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:29+12
    assume {:print "$at(130,49687,49699)"} true;
    $t14 := $Dereference($t13);

    // $t15 := opaque begin: option::is_some<0x1::optional_aggregator::OptionalAggregator>($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:13+29

    // assume WellFormed($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:13+29
    assume $IsValid'bool'($t15);

    // assume Eq<bool>($t15, option::spec_is_some<0x1::optional_aggregator::OptionalAggregator>($t14)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:13+29
    assume $IsEqual'bool'($t15, $1_option_spec_is_some'$1_optional_aggregator_OptionalAggregator'($t14));

    // $t15 := opaque end: option::is_some<0x1::optional_aggregator::OptionalAggregator>($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:13+29

    // if ($t15) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:9+774
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1206:26+32
    assume {:print "$at(130,49729,49761)"} true;
L3:

    // $t16 := option::borrow_mut<0x1::optional_aggregator::OptionalAggregator>($t13) on_abort goto L6 with $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1206:26+32
    assume {:print "$at(130,49729,49761)"} true;
    call $t16,$t13 := $1_option_borrow_mut'$1_optional_aggregator_OptionalAggregator'($t13);
    if ($abort_flag) {
        assume {:print "$at(130,49729,49761)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;
        goto L6;
    }

    // trace_local[supply]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1206:26+32
    $temp_0'$1_optional_aggregator_OptionalAggregator' := $Dereference($t16);
    assume {:print "$track_local(51,16,2):", $temp_0'$1_optional_aggregator_OptionalAggregator'} $temp_0'$1_optional_aggregator_OptionalAggregator' == $temp_0'$1_optional_aggregator_OptionalAggregator';

    // assume Implies(optional_aggregator::$is_parallelizable(Freeze(false)($t16)), Le(Add(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator<0x1::optional_aggregator::OptionalAggregator>($t16))), $t0), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator<0x1::optional_aggregator::OptionalAggregator>($t16))))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1210:17+263
    assume {:print "$at(130,49905,50168)"} true;
    assume ($1_optional_aggregator_$is_parallelizable($Dereference($t16)) ==> (($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($Dereference($t16)->$aggregator)) + $t0) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($Dereference($t16)->$aggregator))));

    // assume Implies(Not(optional_aggregator::$is_parallelizable(Freeze(false)($t16))), Le(Add(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer<0x1::optional_aggregator::OptionalAggregator>($t16))), $t0), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer<0x1::optional_aggregator::OptionalAggregator>($t16))))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1214:17+167
    assume {:print "$at(130,50185,50352)"} true;
    assume (!$1_optional_aggregator_$is_parallelizable($Dereference($t16)) ==> (($1_option_$borrow'$1_optional_aggregator_Integer'($Dereference($t16)->$integer)->$value + $t0) <= $1_option_$borrow'$1_optional_aggregator_Integer'($Dereference($t16)->$integer)->$limit));

    // $t17 := (u128)($t0) on_abort goto L6 with $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1217:46+16
    assume {:print "$at(130,50413,50429)"} true;
    call $t17 := $CastU128($t0);
    if ($abort_flag) {
        assume {:print "$at(130,50413,50429)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;
        goto L6;
    }

    // optional_aggregator::add($t16, $t17) on_abort goto L6 with $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1217:13+50
    call $t16 := $1_optional_aggregator_add($t16, $t17);
    if ($abort_flag) {
        assume {:print "$at(130,50380,50430)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(51,16):", $t11} $t11 == $t11;
        goto L6;
    }

    // write_back[Reference($t13).vec (vector<0x1::optional_aggregator::OptionalAggregator>)/[]]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1217:13+50
    $t13 := $UpdateMutation($t13, (var $$sel0 := $Dereference($t13)->$vec; $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec($Dereference($t13), UpdateVec($$sel0, ReadVec($t16->p, LenVec($t13->p) + 1), $Dereference($t16)))));

    // write_back[Reference($t12).supply (0x1::option::Option<0x1::optional_aggregator::OptionalAggregator>)]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1217:13+50
    $t12 := $UpdateMutation($t12, $Update'$1_coin_CoinInfo'#0''_supply($Dereference($t12), $Dereference($t13)));

    // pack_ref_deep($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1217:13+50

    // write_back[0x1::coin::CoinInfo<#0>@]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1217:13+50
    $1_coin_CoinInfo'#0'_$memory := $ResourceUpdate($1_coin_CoinInfo'#0'_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1219:9+81
    assume {:print "$at(130,50451,50532)"} true;
L4:

    // assume Identical($t18, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t0))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1220:13+52
    assume {:print "$at(130,50470,50522)"} true;
    assume ($t18 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $t0)));

    // assume Identical($t19, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1220:13+52
    assume ($t19 == 0);

    // $t20 := borrow_global<0x1::coin::Ghost$supply<#0>>($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1220:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t19), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t19));
    }

    // write_ref($t20, $t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1220:13+52
    $t20 := $UpdateMutation($t20, $t18);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1220:13+52
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // $t21 := pack 0x1::coin::Coin<#0>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1222:9+32
    assume {:print "$at(130,50542,50574)"} true;
    $t21 := $1_coin_Coin'#0'($t0);

    // trace_return[0]($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1197:80+1141
    assume {:print "$at(130,49439,50580)"} true;
    assume {:print "$track_return(51,16,0):", $t21} $t21 == $t21;

    // $t8 := move($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1197:80+1141
    $t8 := $t21;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1197:80+1141
    goto L5;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:9+774
    assume {:print "$at(130,49667,50441)"} true;
L2:

    // pack_ref_deep($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:9+774
    assume {:print "$at(130,49667,50441)"} true;

    // drop($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:9+774

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1205:9+774
    goto L4;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1223:5+1
    assume {:print "$at(130,50579,50580)"} true;
L5:

    // return $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1223:5+1
    assume {:print "$at(130,50579,50580)"} true;
    $ret0 := $t8;
    return;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1223:5+1
L6:

    // abort($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1223:5+1
    assume {:print "$at(130,50579,50580)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun coin::withdraw<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1126:5+1853
procedure {:inline 1} $1_coin_withdraw'#0'(_$t0: $signer, _$t1: int) returns ($ret0: $1_coin_Coin'#0')
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: $Mutation ($1_coin_CoinStore'#0');
    var $t10: $1_coin_Coin'#0';
    var $t11: $1_fungible_asset_FungibleAsset;
    var $t12: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t13: bool;
    var $t14: int;
    var $t15: $1_coin_CoinStore'#0';
    var $t16: int;
    var $t17: int;
    var $t18: $1_coin_CoinStore'#0';
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: bool;
    var $t23: $1_coin_CoinStore'#0';
    var $t24: $1_coin_Coin'#0';
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: $1_object_Object'$1_fungible_asset_Metadata';
    var $t31: bool;
    var $t32: int;
    var $t33: $Mutation ($1_coin_CoinStore'#0');
    var $t34: bool;
    var $t35: $Mutation ($1_event_EventHandle'$1_coin_WithdrawEvent');
    var $t36: $1_coin_WithdrawEvent;
    var $t37: $Mutation ($1_coin_Coin'#0');
    var $t38: int;
    var $t39: bool;
    var $t40: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t41: $1_object_Object'$1_fungible_asset_Metadata';
    var $t42: bool;
    var $t43: $1_fungible_asset_FungibleAsset;
    var $t44: $Mutation ($1_coin_Coin'#0');
    var $t45: $1_coin_Coin'#0';
    var $t46: $1_coin_Coin'#0';
    var $t47: int;
    var $t48: int;
    var $t49: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t50: bool;
    var $t51: $1_object_Object'$1_fungible_asset_Metadata';
    var $t52: bool;
    var $t53: bool;
    var $t54: int;
    var $t55: int;
    var $t56: int;
    var $t57: bool;
    var $t58: int;
    var $t0: $signer;
    var $t1: int;
    var $1_coin_CoinStore'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_coin_CoinStore'#0'': $1_coin_CoinStore'#0';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t14, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:525:9+47
    assume {:print "$at(131,22469,22516)"} true;
    assume ($t14 == $1_signer_$address_of($t0));

    // assume Identical($t15, global<0x1::coin::CoinStore<#0>>($t14)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:526:9+59
    assume {:print "$at(131,22525,22584)"} true;
    assume ($t15 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t14));

    // assume Identical($t16, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t15))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:527:9+36
    assume {:print "$at(131,22593,22629)"} true;
    assume ($t16 == $t15->$coin->$value);

    // assume Identical($t17, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:535:9+47
    assume {:print "$at(131,22926,22973)"} true;
    assume ($t17 == $1_signer_$address_of($t0));

    // assume Identical($t18, global<0x1::coin::CoinStore<#0>>($t17)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:536:9+59
    assume {:print "$at(131,22982,23041)"} true;
    assume ($t18 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t17));

    // assume Identical($t19, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t18))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:537:9+36
    assume {:print "$at(131,23050,23086)"} true;
    assume ($t19 == $t18->$coin->$value);

    // trace_local[account]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1126:5+1
    assume {:print "$at(130,46635,46636)"} true;
    assume {:print "$track_local(51,18,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1126:5+1
    assume {:print "$track_local(51,18,1):", $t1} $t1 == $t1;

    // $t20 := signer::address_of($t0) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1130:28+27
    assume {:print "$at(130,46828,46855)"} true;
    call $t20 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(130,46828,46855)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[account_addr]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1130:28+27
    assume {:print "$track_local(51,18,2):", $t20} $t20 == $t20;

    // trace_local[account_addr]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:561:16+28
    assume {:print "$at(130,23445,23473)"} true;
    assume {:print "$track_local(51,18,3):", $t20} $t20 == $t20;

    // trace_local[owner]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:699:16+12
    assume {:print "$at(130,29298,29310)"} true;
    assume {:print "$track_local(51,18,4):", $t20} $t20 == $t20;

    // $t22 := exists<0x1::coin::CoinStore<#0>>($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:700:13+34
    assume {:print "$at(130,29356,29390)"} true;
    $t22 := $ResourceExists($1_coin_CoinStore'#0'_$memory, $t20);

    // if ($t22) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:700:9+147
    if ($t22) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:701:13+41
    assume {:print "$at(130,29406,29447)"} true;
L1:

    // $t23 := get_global<0x1::coin::CoinStore<#0>>($t20) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:701:13+41
    assume {:print "$at(130,29406,29447)"} true;
    if (!$ResourceExists($1_coin_CoinStore'#0'_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $ResourceValue($1_coin_CoinStore'#0'_$memory, $t20);
    }
    if ($abort_flag) {
        assume {:print "$at(130,29406,29447)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // $t24 := get_field<0x1::coin::CoinStore<#0>>.coin($t23) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:701:13+46
    $t24 := $t23->$coin;

    // $t25 := get_field<0x1::coin::Coin<#0>>.value($t24) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:701:13+52
    $t25 := $t24->$value;

    // $t5 := $t25 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:701:13+52
    $t5 := $t25;

    // trace_local[coin_balance]($t25) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:701:13+52
    assume {:print "$track_local(51,18,5):", $t25} $t25 == $t25;

    // label L21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:566:13+12
    assume {:print "$at(130,23633,23645)"} true;
L21:

    // $t26 := >=($t5, $t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:566:13+22
    assume {:print "$at(130,23633,23655)"} true;
    call $t26 := $Ge($t5, $t1);

    // if ($t26) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:566:9+460
    if ($t26) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:567:14+6
    assume {:print "$at(130,23672,23678)"} true;
L3:

    // $t6 := $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:567:14+6
    assume {:print "$at(130,23672,23678)"} true;
    $t6 := $t1;

    // trace_local[$t15]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:567:14+6
    assume {:print "$track_local(51,18,6):", $t1} $t1 == $t1;

    // $t27 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:567:22+1
    $t27 := 0;
    assume $IsValid'u64'($t27);

    // $t7 := $t27 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:567:22+1
    $t7 := $t27;

    // trace_local[fa_amount_to_withdraw]($t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:567:22+1
    assume {:print "$track_local(51,18,7):", $t27} $t27 == $t27;

    // label L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1136:34+23
    assume {:print "$at(130,47050,47073)"} true;
L19:

    // $t28 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1136:60+1
    assume {:print "$at(130,47076,47077)"} true;
    $t28 := 0;
    assume $IsValid'u64'($t28);

    // $t29 := >($t6, $t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1136:34+27
    call $t29 := $Gt($t6, $t28);

    // if ($t29) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1136:30+1092
    if ($t29) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1137:28+34
    assume {:print "$at(130,47108,47142)"} true;
L5:

    // $t30 := coin::ensure_paired_metadata<#0>() on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1137:28+34
    assume {:print "$at(130,47108,47142)"} true;
    call $t30 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,47108,47142)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[metadata]($t30) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1137:28+34
    assume {:print "$track_local(51,18,8):", $t30} $t30 == $t30;

    // $t31 := opaque begin: permissioned_signer::is_permissioned_signer($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1138:16+52
    assume {:print "$at(130,47159,47211)"} true;

    // assume WellFormed($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1138:16+52
    assume $IsValid'bool'($t31);

    // assume Eq<bool>($t31, permissioned_signer::spec_is_permissioned_signer($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1138:16+52
    assume $IsEqual'bool'($t31, $1_permissioned_signer_spec_is_permissioned_signer($t0));

    // $t31 := opaque end: permissioned_signer::is_permissioned_signer($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1138:16+52

    // if ($t31) goto L6 else goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1138:13+484
    if ($t31) { goto L6; } else { goto L8; }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1142:21+7
    assume {:print "$at(130,47464,47471)"} true;
L6:

    // $t32 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t20, $t30) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1143:21+69
    assume {:print "$at(130,47493,47562)"} true;
    call $t32 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t20, $t30);
    if ($abort_flag) {
        assume {:print "$at(130,47493,47562)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // fungible_asset::withdraw_permission_check_by_address($t0, $t32, $t6) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1141:17+235
    assume {:print "$at(130,47390,47625)"} true;
    call $1_fungible_asset_withdraw_permission_check_by_address($t0, $t32, $t6);
    if ($abort_flag) {
        assume {:print "$at(130,47390,47625)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1148:30+52
    assume {:print "$at(130,47672,47724)"} true;
L8:

    // $t33 := borrow_global<0x1::coin::CoinStore<#0>>($t20) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1148:30+52
    assume {:print "$at(130,47672,47724)"} true;
    if (!$ResourceExists($1_coin_CoinStore'#0'_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t33 := $Mutation($Global($t20), EmptyVec(), $ResourceValue($1_coin_CoinStore'#0'_$memory, $t20));
    }
    if ($abort_flag) {
        assume {:print "$at(130,47672,47724)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[coin_store]($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1148:30+52
    $temp_0'$1_coin_CoinStore'#0'' := $Dereference($t33);
    assume {:print "$track_local(51,18,9):", $temp_0'$1_coin_CoinStore'#0''} $temp_0'$1_coin_CoinStore'#0'' == $temp_0'$1_coin_CoinStore'#0'';

    // $t34 := get_field<0x1::coin::CoinStore<#0>>.frozen($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1150:18+17
    assume {:print "$at(130,47764,47781)"} true;
    $t34 := $Dereference($t33)->$frozen;

    // if ($t34) goto L9 else goto L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1150:17+18
    if ($t34) { goto L9; } else { goto L10; }

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1154:17+31
    assume {:print "$at(130,47911,47942)"} true;
L10:

    // $t35 := borrow_field<0x1::coin::CoinStore<#0>>.withdraw_events($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1154:17+31
    assume {:print "$at(130,47911,47942)"} true;
    $t35 := $ChildMutation($t33, 3, $Dereference($t33)->$withdraw_events);

    // $t36 := pack 0x1::coin::WithdrawEvent($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1155:17+49
    assume {:print "$at(130,47960,48009)"} true;
    $t36 := $1_coin_WithdrawEvent($t6);

    // opaque begin: event::emit_event<0x1::coin::WithdrawEvent>($t35, $t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1153:13+163
    assume {:print "$at(130,47861,48024)"} true;

    // opaque end: event::emit_event<0x1::coin::WithdrawEvent>($t35, $t36) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1153:13+163

    // write_back[Reference($t33).withdraw_events (0x1::event::EventHandle<0x1::coin::WithdrawEvent>)]($t35) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1153:13+163
    $t33 := $UpdateMutation($t33, $Update'$1_coin_CoinStore'#0''_withdraw_events($Dereference($t33), $Dereference($t35)));

    // $t37 := borrow_field<0x1::coin::CoinStore<#0>>.coin($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1157:21+20
    assume {:print "$at(130,48046,48066)"} true;
    $t37 := $ChildMutation($t33, 0, $Dereference($t33)->$coin);

    // $t10 := coin::extract<#0>($t37, $t6) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1157:13+54
    call $t10,$t37 := $1_coin_extract'#0'($t37, $t6);
    if ($abort_flag) {
        assume {:print "$at(130,48038,48092)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // write_back[Reference($t33).coin (0x1::coin::Coin<#0>)]($t37) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1157:13+54
    $t33 := $UpdateMutation($t33, $Update'$1_coin_CoinStore'#0''_coin($Dereference($t33), $Dereference($t37)));

    // write_back[0x1::coin::CoinStore<#0>@]($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1157:13+54
    $1_coin_CoinStore'#0'_$memory := $ResourceUpdate($1_coin_CoinStore'#0'_$memory, $GlobalLocationAddress($t33),
        $Dereference($t33));

    // trace_local[withdrawn_coin]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1157:13+54
    assume {:print "$track_local(51,18,10):", $t10} $t10 == $t10;

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1161:13+21
    assume {:print "$at(130,48152,48173)"} true;
L14:

    // $t38 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1161:37+1
    assume {:print "$at(130,48176,48177)"} true;
    $t38 := 0;
    assume $IsValid'u64'($t38);

    // $t39 := >($t7, $t38) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1161:13+25
    call $t39 := $Gt($t7, $t38);

    // if ($t39) goto L12 else goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1161:9+310
    if ($t39) { goto L12; } else { goto L11; }

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1163:17+7
    assume {:print "$at(130,48252,48259)"} true;
L12:

    // $t40 := coin::paired_metadata<#0>() on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:38+27
    assume {:print "$at(130,48298,48325)"} true;
    call $t40 := $1_coin_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,48298,48325)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // $t41 := opaque begin: option::destroy_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49

    // assume Identical($t42, option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
    assume ($t42 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t40));

    // if ($t42) goto L25 else goto L24 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
    if ($t42) { goto L25; } else { goto L24; }

    // label L25 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
L25:

    // assume And(option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40), Eq(262145, $t21)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
    assume {:print "$at(130,48277,48326)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t40) && $IsEqual'num'(262145, $t21));

    // trace_abort($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
    assume {:print "$at(130,48277,48326)"} true;
    assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;

    // goto L23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
    goto L23;

    // label L24 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
L24:

    // assume WellFormed($t41) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
    assume {:print "$at(130,48277,48326)"} true;
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t41);

    // assume Eq<0x1::object::Object<0x1::fungible_asset::Metadata>>($t41, option::spec_borrow<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t41, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t40));

    // $t41 := opaque end: option::destroy_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t40) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1164:17+49

    // $t43 := primary_fungible_store::withdraw<0x1::fungible_asset::Metadata>($t0, $t41, $t7) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1162:22+177
    assume {:print "$at(130,48202,48379)"} true;
    call $t43 := $1_primary_fungible_store_withdraw'$1_fungible_asset_Metadata'($t0, $t41, $t7);
    if ($abort_flag) {
        assume {:print "$at(130,48202,48379)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[fa]($t43) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1162:22+177
    assume {:print "$track_local(51,18,11):", $t43} $t43 == $t43;

    // $t44 := borrow_local($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1167:19+19
    assume {:print "$at(130,48399,48418)"} true;
    $t44 := $Mutation($Local(10), EmptyVec(), $t10);

    // $t45 := coin::fungible_asset_to_coin<#0>($t43) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1167:40+26
    call $t45 := $1_coin_fungible_asset_to_coin'#0'($t43);
    if ($abort_flag) {
        assume {:print "$at(130,48420,48446)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // coin::merge<#0>($t44, $t45) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1167:13+54
    call $t44 := $1_coin_merge'#0'($t44, $t45);
    if ($abort_flag) {
        assume {:print "$at(130,48393,48447)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // write_back[LocalRoot($t10)@]($t44) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1167:13+54
    $t10 := $Dereference($t44);

    // trace_local[withdrawn_coin]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1167:13+54
    assume {:print "$track_local(51,18,10):", $t10} $t10 == $t10;

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1169:9+14
    assume {:print "$at(130,48468,48482)"} true;
L13:

    // $t46 := move($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1169:9+14
    assume {:print "$at(130,48468,48482)"} true;
    $t46 := $t10;

    // trace_return[0]($t46) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1129:87+1689
    assume {:print "$at(130,46799,48488)"} true;
    assume {:print "$track_return(51,18,0):", $t46} $t46 == $t46;

    // goto L22 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1129:87+1689
    goto L22;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1161:9+310
    assume {:print "$at(130,48148,48458)"} true;
L11:

    // goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1161:9+310
    assume {:print "$at(130,48148,48458)"} true;
    goto L13;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1149:13+6
    assume {:print "$at(130,47738,47744)"} true;
L9:

    // drop($t33) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1149:13+6
    assume {:print "$at(130,47738,47744)"} true;

    // $t47 := 10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1151:42+7
    assume {:print "$at(130,47824,47831)"} true;
    $t47 := 10;
    assume $IsValid'u64'($t47);

    // $t48 := error::permission_denied($t47) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1151:17+33
    call $t48 := $1_error_permission_denied($t47);
    if ($abort_flag) {
        assume {:print "$at(130,47799,47832)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_abort($t48) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1149:13+6
    assume {:print "$at(130,47738,47744)"} true;
    assume {:print "$track_abort(51,18):", $t48} $t48 == $t48;

    // $t21 := move($t48) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1149:13+6
    $t21 := $t48;

    // goto L23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1149:13+6
    goto L23;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1159:13+6
    assume {:print "$at(130,48122,48128)"} true;
L4:

    // $t10 := coin::zero<#0>() on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1159:13+6
    assume {:print "$at(130,48122,48128)"} true;
    call $t10 := $1_coin_zero'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,48122,48128)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[withdrawn_coin]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1159:13+6
    assume {:print "$track_local(51,18,10):", $t10} $t10 == $t10;

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1159:13+6
    goto L14;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:569:28+27
    assume {:print "$at(130,23727,23754)"} true;
L2:

    // $t49 := coin::paired_metadata<#0>() on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:569:28+27
    assume {:print "$at(130,23727,23754)"} true;
    call $t49 := $1_coin_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,23727,23754)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_local[metadata]($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:569:28+27
    assume {:print "$track_local(51,18,12):", $t49} $t49 == $t49;

    // $t50 := opaque begin: option::is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+26
    assume {:print "$at(130,23772,23798)"} true;

    // assume WellFormed($t50) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+26
    assume $IsValid'bool'($t50);

    // assume Eq<bool>($t50, option::spec_is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+26
    assume $IsEqual'bool'($t50, $1_option_spec_is_some'$1_object_Object'$1_fungible_asset_Metadata''($t49));

    // $t50 := opaque end: option::is_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+26

    // if ($t50) goto L16 else goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+166
    if ($t50) { goto L16; } else { goto L15; }

    // label L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:571:17+12
    assume {:print "$at(130,23864,23876)"} true;
L16:

    // $t51 := opaque begin: option::destroy_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
    assume {:print "$at(130,23894,23924)"} true;

    // assume Identical($t52, option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
    assume ($t52 == $1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t49));

    // if ($t52) goto L27 else goto L26 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
    if ($t52) { goto L27; } else { goto L26; }

    // label L27 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
L27:

    // assume And(option::spec_is_none<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49), Eq(262145, $t21)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
    assume {:print "$at(130,23894,23924)"} true;
    assume ($1_option_spec_is_none'$1_object_Object'$1_fungible_asset_Metadata''($t49) && $IsEqual'num'(262145, $t21));

    // trace_abort($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
    assume {:print "$at(130,23894,23924)"} true;
    assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;

    // goto L23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
    goto L23;

    // label L26 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
L26:

    // assume WellFormed($t51) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
    assume {:print "$at(130,23894,23924)"} true;
    assume $IsValid'$1_object_Object'$1_fungible_asset_Metadata''($t51);

    // assume Eq<0x1::object::Object<0x1::fungible_asset::Metadata>>($t51, option::spec_borrow<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30
    assume $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t51, $1_option_spec_borrow'$1_object_Object'$1_fungible_asset_Metadata''($t49));

    // $t51 := opaque end: option::destroy_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:572:17+30

    // $t53 := primary_fungible_store::primary_store_exists<0x1::fungible_asset::Metadata>($t20, $t51) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:47+136
    assume {:print "$at(130,23802,23938)"} true;
    call $t53 := $1_primary_fungible_store_primary_store_exists'$1_fungible_asset_Metadata'($t20, $t51);
    if ($abort_flag) {
        assume {:print "$at(130,23802,23938)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // $t13 := $t53 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:47+136
    $t13 := $t53;

    // trace_local[$t10]($t53) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:47+136
    assume {:print "$track_local(51,18,13):", $t53} $t53 == $t53;

    // label L20 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:13+311
L20:

    // if ($t13) goto L18 else goto L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:13+311
    assume {:print "$at(130,23768,24079)"} true;
    if ($t13) { goto L18; } else { goto L17; }

    // label L18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:574:18+12
    assume {:print "$at(130,23957,23969)"} true;
L18:

    // $t6 := $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:574:18+12
    assume {:print "$at(130,23957,23969)"} true;
    $t6 := $t5;

    // trace_local[$t15]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:574:18+12
    assume {:print "$track_local(51,18,6):", $t5} $t5 == $t5;

    // $t54 := -($t1, $t5) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:574:32+21
    call $t54 := $Sub($t1, $t5);
    if ($abort_flag) {
        assume {:print "$at(130,23971,23992)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // $t7 := $t54 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:574:32+21
    $t7 := $t54;

    // trace_local[fa_amount_to_withdraw]($t54) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:574:32+21
    assume {:print "$track_local(51,18,7):", $t54} $t54 == $t54;

    // goto L19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:574:32+21
    goto L19;

    // label L17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:576:17+52
    assume {:print "$at(130,24027,24079)"} true;
L17:

    // $t55 := 6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:576:47+21
    assume {:print "$at(130,24057,24078)"} true;
    $t55 := 6;
    assume $IsValid'u64'($t55);

    // $t56 := error::invalid_argument($t55) on_abort goto L23 with $t21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:576:23+46
    call $t56 := $1_error_invalid_argument($t55);
    if ($abort_flag) {
        assume {:print "$at(130,24033,24079)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(51,18):", $t21} $t21 == $t21;
        goto L23;
    }

    // trace_abort($t56) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:576:17+52
    assume {:print "$at(130,24027,24079)"} true;
    assume {:print "$track_abort(51,18):", $t56} $t56 == $t56;

    // $t21 := move($t56) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:576:17+52
    $t21 := $t56;

    // goto L23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:576:17+52
    goto L23;

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+166
    assume {:print "$at(130,23772,23938)"} true;
L15:

    // $t57 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+166
    assume {:print "$at(130,23772,23938)"} true;
    $t57 := false;
    assume $IsValid'bool'($t57);

    // $t13 := $t57 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+166
    $t13 := $t57;

    // trace_local[$t10]($t57) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+166
    assume {:print "$track_local(51,18,13):", $t57} $t57 == $t57;

    // goto L20 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:570:17+166
    goto L20;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:703:13+1
    assume {:print "$at(130,29488,29489)"} true;
L0:

    // $t58 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:703:13+1
    assume {:print "$at(130,29488,29489)"} true;
    $t58 := 0;
    assume $IsValid'u64'($t58);

    // $t5 := $t58 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:703:13+1
    $t5 := $t58;

    // trace_local[coin_balance]($t58) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:703:13+1
    assume {:print "$track_local(51,18,5):", $t58} $t58 == $t58;

    // goto L21 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:703:13+1
    goto L21;

    // label L22 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1170:5+1
    assume {:print "$at(130,48487,48488)"} true;
L22:

    // return $t46 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1170:5+1
    assume {:print "$at(130,48487,48488)"} true;
    $ret0 := $t46;
    return;

    // label L23 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1170:5+1
L23:

    // abort($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1170:5+1
    assume {:print "$at(130,48487,48488)"} true;
    $abort_code := $t21;
    $abort_flag := true;
    return;

}

// fun coin::zero<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1173:5+193
procedure {:inline 1} $1_coin_zero'#0'() returns ($ret0: $1_coin_Coin'#0')
{
    // declare local variables
    var $t0: $1_coin_Ghost$supply'#0';
    var $t1: int;
    var $t2: $Mutation ($1_coin_Ghost$supply'#0');
    var $t3: int;
    var $t4: $1_coin_Coin'#0';
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';

    // bytecode translation starts here
    // assume Identical($t0, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), 0))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1175:13+47
    assume {:print "$at(130,48626,48673)"} true;
    assume ($t0 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + 0)));

    // assume Identical($t1, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1175:13+47
    assume ($t1 == 0);

    // $t2 := borrow_global<0x1::coin::Ghost$supply<#0>>($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1175:13+47
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t1));
    }

    // write_ref($t2, $t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1175:13+47
    $t2 := $UpdateMutation($t2, $t0);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1175:13+47
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t2),
        $Dereference($t2));

    // $t3 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1178:20+1
    assume {:print "$at(130,48729,48730)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := pack 0x1::coin::Coin<#0>($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1177:9+47
    assume {:print "$at(130,48693,48740)"} true;
    $t4 := $1_coin_Coin'#0'($t3);

    // trace_return[0]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1173:49+149
    assume {:print "$at(130,48597,48746)"} true;
    assume {:print "$track_return(51,19,0):", $t4} $t4 == $t4;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1180:5+1
    assume {:print "$at(130,48745,48746)"} true;
L1:

    // return $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1180:5+1
    assume {:print "$at(130,48745,48746)"} true;
    $ret0 := $t4;
    return;

}

// fun coin::coin_to_fungible_asset<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:392:5+296
procedure {:inline 1} $1_coin_coin_to_fungible_asset'#0'(_$t0: $1_coin_Coin'#0') returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_fungible_asset_FungibleAsset;
    var $t0: $1_coin_Coin'#0';
    var $1_coin_CoinInfo'#0'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:305:9+58
    assume {:print "$at(131,13514,13572)"} true;
    assume ($t3 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:392:5+1
    assume {:print "$at(130,14505,14506)"} true;
    assume {:print "$track_local(51,25,0):", $t0} $t0 == $t0;

    // $t4 := coin::ensure_paired_metadata<#0>() on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:395:24+34
    assume {:print "$at(130,14662,14696)"} true;
    call $t4 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,14662,14696)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,25):", $t5} $t5 == $t5;
        goto L2;
    }

    // assume Identical($t6, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:247:9+58
    assume {:print "$at(131,11125,11183)"} true;
    assume ($t6 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t7 := coin::burn_internal<#0>($t0) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:396:22+19
    assume {:print "$at(130,14719,14738)"} true;
    call $t7 := $1_coin_burn_internal'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(130,14719,14738)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,25):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t8 := fungible_asset::mint_internal($t4, $t7) on_abort goto L2 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:397:9+47
    assume {:print "$at(130,14748,14795)"} true;
    call $t8 := $1_fungible_asset_mint_internal($t4, $t7);
    if ($abort_flag) {
        assume {:print "$at(130,14748,14795)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,25):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:397:9+47
    assume {:print "$track_return(51,25,0):", $t8} $t8 == $t8;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:398:5+1
    assume {:print "$at(130,14800,14801)"} true;
L1:

    // return $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:398:5+1
    assume {:print "$at(130,14800,14801)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:398:5+1
L2:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:398:5+1
    assume {:print "$at(130,14800,14801)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun coin::ensure_paired_metadata<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:376:5+188
procedure {:inline 1} $1_coin_ensure_paired_metadata'#0'() returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t0: $Mutation ($1_coin_CoinConversionMap);
    var $t1: $1_type_info_TypeInfo;
    var $t2: bool;
    var $t3: bool;
    var $t4: $1_object_ConstructorRef;
    var $t5: $signer;
    var $t6: $signer;
    var $t7: $1_type_info_TypeInfo;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: $1_fungible_asset_TransferRef;
    var $t10: $1_fungible_asset_BurnRef;
    var $t11: $1_fungible_asset_MintRef;
    var $t12: $1_coin_PairedFungibleAssetRefs;
    var $t13: $signer;
    var $t14: $1_string_String;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: $Mutation ($1_coin_CoinConversionMap);
    var $t21: $1_type_info_TypeInfo;
    var $t22: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t23: bool;
    var $t24: $1_string_String;
    var $t25: Vec (int);
    var $t26: $1_string_String;
    var $t27: bool;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t31: $1_object_ConstructorRef;
    var $t32: $1_option_Option'u128';
    var $t33: int;
    var $t34: $1_string_String;
    var $t35: int;
    var $t36: $1_string_String;
    var $t37: int;
    var $t38: int;
    var $t39: Vec (int);
    var $t40: $1_string_String;
    var $t41: Vec (int);
    var $t42: $1_string_String;
    var $t43: $signer;
    var $t44: $1_type_info_TypeInfo;
    var $t45: $1_coin_PairedCoinType;
    var $t46: $1_object_Object'$1_fungible_asset_Metadata';
    var $t47: $Mutation (Table int ($1_object_Object'$1_fungible_asset_Metadata'));
    var $t48: int;
    var $t49: $1_coin_PairCreation;
    var $t50: $1_fungible_asset_MintRef;
    var $t51: $1_fungible_asset_TransferRef;
    var $t52: $1_fungible_asset_BurnRef;
    var $t53: $1_option_Option'$1_fungible_asset_MintRef';
    var $t54: $1_option_Option'$1_fungible_asset_TransferRef';
    var $t55: $1_option_Option'$1_fungible_asset_BurnRef';
    var $t56: $1_coin_PairedFungibleAssetRefs;
    var $t57: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t58: $1_object_Object'$1_fungible_asset_Metadata';
    var $t59: int;
    var $t60: $signer;
    var $t61: $1_string_String;
    var $t62: Vec (int);
    var $t63: int;
    var $t64: int;
    var $t65: $1_object_ConstructorRef;
    var $t66: int;
    var $t67: int;
    var $t68: bool;
    var $t69: int;
    var $t70: int;
    var $t71: int;
    var $t72: int;
    var $temp_0'$1_coin_CoinConversionMap': $1_coin_CoinConversionMap;
    var $temp_0'$1_coin_PairedFungibleAssetRefs': $1_coin_PairedFungibleAssetRefs;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;

    // bytecode translation starts here
    // $t15 := features::coin_to_fungible_asset_migration_feature_enabled() on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:321:13+60
    assume {:print "$at(130,11116,11176)"} true;
    call $t15 := $1_features_coin_to_fungible_asset_migration_feature_enabled();
    if ($abort_flag) {
        assume {:print "$at(130,11116,11176)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // if ($t15) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:320:9+6
    assume {:print "$at(130,11095,11101)"} true;
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:43+16
    assume {:print "$at(130,11298,11314)"} true;
L1:

    // $t17 := 0x1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:43+16
    assume {:print "$at(130,11298,11314)"} true;
    $t17 := 1;
    assume $IsValid'address'($t17);

    // $t18 := exists<0x1::coin::CoinConversionMap>($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:17+43
    $t18 := $ResourceExists($1_coin_CoinConversionMap_$memory, $t17);

    // if ($t18) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:9+6
    if ($t18) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:325:56+16
    assume {:print "$at(130,11423,11439)"} true;
L3:

    // $t19 := 0x1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:325:56+16
    assume {:print "$at(130,11423,11439)"} true;
    $t19 := 1;
    assume $IsValid'address'($t19);

    // $t20 := borrow_global<0x1::coin::CoinConversionMap>($t19) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:325:19+54
    if (!$ResourceExists($1_coin_CoinConversionMap_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t19), EmptyVec(), $ResourceValue($1_coin_CoinConversionMap_$memory, $t19));
    }
    if ($abort_flag) {
        assume {:print "$at(130,11386,11440)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[map]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:325:19+54
    $temp_0'$1_coin_CoinConversionMap' := $Dereference($t20);
    assume {:print "$track_local(51,33,0):", $temp_0'$1_coin_CoinConversionMap'} $temp_0'$1_coin_CoinConversionMap' == $temp_0'$1_coin_CoinConversionMap';

    // $t21 := type_info::type_of<#0>() on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:326:20+30
    assume {:print "$at(130,11461,11491)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t21 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(130,11461,11491)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[type]($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:326:20+30
    assume {:print "$track_local(51,33,1):", $t21} $t21 == $t21;

    // $t22 := get_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:327:30+31
    assume {:print "$at(130,11522,11553)"} true;
    $t22 := $Dereference($t20)->$coin_to_fungible_asset_map;

    // $t23 := table::contains<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t22, $t21) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:327:14+54
    call $t23 := $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t22, $t21);
    if ($abort_flag) {
        assume {:print "$at(130,11506,11560)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // if ($t23) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:327:13+55
    if ($t23) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:327:9+2163
L5:

    // goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:327:9+2163
    assume {:print "$at(130,11501,13664)"} true;
    goto L6;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:316:9+32
    assume {:print "$at(130,10882,10914)"} true;
L4:

    // $t24 := type_info::type_name<#0>() on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:316:9+32
    assume {:print "$at(130,10882,10914)"} true;
    $t24 := $1_string_String($TypeName(#0_info));
    if ($abort_flag) {
        assume {:print "$at(130,10882,10914)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t25 := [48, 120, 49, 58, 58, 97, 112, 116, 111, 115, 95, 99, 111, 105, 110, 58, 58, 65, 112, 116, 111, 115, 67, 111, 105, 110] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:316:58+29
    $t25 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(48, 120, 49, 58), MakeVec4(58, 97, 112, 116)), MakeVec4(111, 115, 95, 99)), MakeVec4(111, 105, 110, 58)), MakeVec4(58, 65, 112, 116)), MakeVec4(111, 115, 67, 111)), MakeVec2(105, 110));
    assume $IsValid'vec'u8''($t25);

    // $t26 := string::utf8($t25) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:316:45+43
    call $t26 := $1_string_utf8($t25);
    if ($abort_flag) {
        assume {:print "$at(130,10918,10961)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t27 := ==($t24, $t26) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:316:9+79
    $t27 := $IsEqual'$1_string_String'($t24, $t26);

    // trace_local[$t1]($t27) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:316:9+79
    assume {:print "$track_local(51,33,2):", $t27} $t27 == $t27;

    // if ($t27) goto L7 else goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:21+7
    assume {:print "$at(130,11629,11636)"} true;
    if ($t27) { goto L7; } else { goto L8; }

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:21+29
L8:

    // $t28 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:21+29
    assume {:print "$at(130,11629,11658)"} true;
    $t28 := true;
    assume $IsValid'bool'($t28);

    // $t3 := $t28 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:21+29
    $t3 := $t28;

    // trace_local[$t19]($t28) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:21+29
    assume {:print "$track_local(51,33,3):", $t28} $t28 == $t28;

    // label L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:13+6
L14:

    // if ($t3) goto L10 else goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:13+6
    assume {:print "$at(130,11621,11627)"} true;
    if ($t3) { goto L10; } else { goto L9; }

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:331:17+380
    assume {:print "$at(130,11767,12147)"} true;
L10:

    // if ($t27) goto L12 else goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:331:17+380
    assume {:print "$at(130,11767,12147)"} true;
    if ($t27) { goto L12; } else { goto L11; }

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:332:61+16
    assume {:print "$at(130,11841,11857)"} true;
L12:

    // $t29 := 0x1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:332:61+16
    assume {:print "$at(130,11841,11857)"} true;
    $t29 := 1;
    assume $IsValid'address'($t29);

    // $t30 := 0xa at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:332:79+21
    $t30 := 10;
    assume $IsValid'address'($t30);

    // $t31 := object::create_sticky_object_at_address($t29, $t30) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:332:21+80
    call $t31 := $1_object_create_sticky_object_at_address($t29, $t30);
    if ($abort_flag) {
        assume {:print "$at(130,11801,11881)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t4 := $t31 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:332:21+80
    $t4 := $t31;

    // trace_local[metadata_object_cref]($t31) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:332:21+80
    assume {:print "$track_local(51,33,4):", $t31} $t31 == $t31;

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:340:17+21
    assume {:print "$at(130,12246,12267)"} true;
L13:

    // $t32 := opaque begin: option::none<u128>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:341:17+14
    assume {:print "$at(130,12285,12299)"} true;

    // assume And(WellFormed($t32), Le(Len<u128>(select option::Option.vec($t32)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:341:17+14
    assume ($IsValid'$1_option_Option'u128''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<0x1::option::Option<u128>>($t32, option::spec_none<u128>()) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:341:17+14
    assume $IsEqual'$1_option_Option'u128''($t32, $1_option_spec_none'u128'());

    // $t32 := opaque end: option::none<u128>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:341:17+14

    // assume Identical($t33, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:192:9+58
    assume {:print "$at(131,9288,9346)"} true;
    assume ($t33 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t34 := coin::name<#0>() on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:342:17+16
    assume {:print "$at(130,12317,12333)"} true;
    call $t34 := $1_coin_name'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,12317,12333)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t35, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:192:9+58
    assume {:print "$at(131,9288,9346)"} true;
    assume ($t35 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t36 := coin::symbol<#0>() on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:343:17+18
    assume {:print "$at(130,12351,12369)"} true;
    call $t36 := $1_coin_symbol'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,12351,12369)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t37, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:192:9+58
    assume {:print "$at(131,9288,9346)"} true;
    assume ($t37 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t38 := coin::decimals<#0>() on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:344:17+20
    assume {:print "$at(130,12387,12407)"} true;
    call $t38 := $1_coin_decimals'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,12387,12407)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t39 := [] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:345:30+3
    assume {:print "$at(130,12438,12441)"} true;
    $t39 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t39);

    // $t40 := string::utf8($t39) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:345:17+17
    call $t40 := $1_string_utf8($t39);
    if ($abort_flag) {
        assume {:print "$at(130,12425,12442)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t41 := [] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:346:30+3
    assume {:print "$at(130,12473,12476)"} true;
    $t41 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t41);

    // $t42 := string::utf8($t41) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:346:17+17
    call $t42 := $1_string_utf8($t41);
    if ($abort_flag) {
        assume {:print "$at(130,12460,12477)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // primary_fungible_store::create_primary_store_enabled_fungible_asset($t4, $t32, $t34, $t36, $t38, $t40, $t42) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:339:13+331
    assume {:print "$at(130,12161,12492)"} true;
    call $1_primary_fungible_store_create_primary_store_enabled_fungible_asset($t4, $t32, $t34, $t36, $t38, $t40, $t42);
    if ($abort_flag) {
        assume {:print "$at(130,12161,12492)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t43 := object::generate_signer($t4) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:349:43+46
    assume {:print "$at(130,12537,12583)"} true;
    call $t43 := $1_object_generate_signer($t4);
    if ($abort_flag) {
        assume {:print "$at(130,12537,12583)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[$t42]($t43) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:349:43+46
    assume {:print "$track_local(51,33,5):", $t43} $t43 == $t43;

    // trace_local[metadata_object_signer]($t43) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:349:42+47
    assume {:print "$track_local(51,33,6):", $t43} $t43 == $t43;

    // $t44 := type_info::type_of<#0>() on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:350:24+30
    assume {:print "$at(130,12608,12638)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t44 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(130,12608,12638)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[type]($t44) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:350:24+30
    assume {:print "$track_local(51,33,7):", $t44} $t44 == $t44;

    // $t45 := pack 0x1::coin::PairedCoinType($t44) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:351:45+23
    assume {:print "$at(130,12684,12707)"} true;
    $t45 := $1_coin_PairedCoinType($t44);

    // move_to<0x1::coin::PairedCoinType>($t45, $t43) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:351:13+56
    if ($ResourceExists($1_coin_PairedCoinType_$memory, $t43->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_PairedCoinType_$memory := $ResourceUpdate($1_coin_PairedCoinType_$memory, $t43->$addr, $t45);
    }
    if ($abort_flag) {
        assume {:print "$at(130,12652,12708)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t46 := object::object_from_constructor_ref<0x1::fungible_asset::Metadata>($t4) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:352:32+58
    assume {:print "$at(130,12741,12799)"} true;
    call $t46 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t4);
    if ($abort_flag) {
        assume {:print "$at(130,12741,12799)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[metadata_obj]($t46) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:352:32+58
    assume {:print "$track_local(51,33,8):", $t46} $t46 == $t46;

    // $t47 := borrow_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:354:24+35
    assume {:print "$at(130,12825,12860)"} true;
    $t47 := $ChildMutation($t20, 0, $Dereference($t20)->$coin_to_fungible_asset_map);

    // table::add<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t47, $t44, $t46) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:354:13+67
    call $t47 := $1_table_add'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t47, $t44, $t46);
    if ($abort_flag) {
        assume {:print "$at(130,12814,12881)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // write_back[Reference($t20).coin_to_fungible_asset_map (0x1::table::Table<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>)]($t47) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:354:13+67
    $t20 := $UpdateMutation($t20, $Update'$1_coin_CoinConversionMap'_coin_to_fungible_asset_map($Dereference($t20), $Dereference($t47)));

    // $t48 := object::object_address<0x1::fungible_asset::Metadata>($t46) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:357:50+29
    assume {:print "$at(130,13004,13033)"} true;
    call $t48 := $1_object_object_address'$1_fungible_asset_Metadata'($t46);
    if ($abort_flag) {
        assume {:print "$at(130,13004,13033)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t49 := pack 0x1::coin::PairCreation($t44, $t48) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:355:25+140
    assume {:print "$at(130,12907,13047)"} true;
    $t49 := $1_coin_PairCreation($t44, $t48);

    // opaque begin: event::emit<0x1::coin::PairCreation>($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:355:13+153

    // opaque end: event::emit<0x1::coin::PairCreation>($t49) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:355:13+153

    // $t50 := fungible_asset::generate_mint_ref($t4) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:361:28+56
    assume {:print "$at(130,13118,13174)"} true;
    call $t50 := $1_fungible_asset_generate_mint_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(130,13118,13174)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t51 := fungible_asset::generate_transfer_ref($t4) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:362:32+60
    assume {:print "$at(130,13207,13267)"} true;
    call $t51 := $1_fungible_asset_generate_transfer_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(130,13207,13267)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[transfer_ref]($t51) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:362:32+60
    assume {:print "$track_local(51,33,9):", $t51} $t51 == $t51;

    // $t52 := fungible_asset::generate_burn_ref($t4) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:363:28+56
    assume {:print "$at(130,13296,13352)"} true;
    call $t52 := $1_fungible_asset_generate_burn_ref($t4);
    if ($abort_flag) {
        assume {:print "$at(130,13296,13352)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[burn_ref]($t52) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:363:28+56
    assume {:print "$track_local(51,33,10):", $t52} $t52 == $t52;

    // $t53 := opaque begin: option::some<0x1::fungible_asset::MintRef>($t50) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:366:35+22
    assume {:print "$at(130,13474,13496)"} true;

    // assume And(WellFormed($t53), Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec($t53)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:366:35+22
    assume ($IsValid'$1_option_Option'$1_fungible_asset_MintRef''($t53) && (LenVec($t53->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::MintRef>>($t53, option::spec_some<0x1::fungible_asset::MintRef>($t50)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:366:35+22
    assume $IsEqual'$1_option_Option'$1_fungible_asset_MintRef''($t53, $1_option_spec_some'$1_fungible_asset_MintRef'($t50));

    // $t53 := opaque end: option::some<0x1::fungible_asset::MintRef>($t50) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:366:35+22

    // $t54 := opaque begin: option::some<0x1::fungible_asset::TransferRef>($t51) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:367:39+26
    assume {:print "$at(130,13536,13562)"} true;

    // assume And(WellFormed($t54), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec($t54)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:367:39+26
    assume ($IsValid'$1_option_Option'$1_fungible_asset_TransferRef''($t54) && (LenVec($t54->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::TransferRef>>($t54, option::spec_some<0x1::fungible_asset::TransferRef>($t51)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:367:39+26
    assume $IsEqual'$1_option_Option'$1_fungible_asset_TransferRef''($t54, $1_option_spec_some'$1_fungible_asset_TransferRef'($t51));

    // $t54 := opaque end: option::some<0x1::fungible_asset::TransferRef>($t51) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:367:39+26

    // $t55 := opaque begin: option::some<0x1::fungible_asset::BurnRef>($t52) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:368:35+22
    assume {:print "$at(130,13598,13620)"} true;

    // assume And(WellFormed($t55), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec($t55)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:368:35+22
    assume ($IsValid'$1_option_Option'$1_fungible_asset_BurnRef''($t55) && (LenVec($t55->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::fungible_asset::BurnRef>>($t55, option::spec_some<0x1::fungible_asset::BurnRef>($t52)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:368:35+22
    assume $IsEqual'$1_option_Option'$1_fungible_asset_BurnRef''($t55, $1_option_spec_some'$1_fungible_asset_BurnRef'($t52));

    // $t55 := opaque end: option::some<0x1::fungible_asset::BurnRef>($t52) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:368:35+22

    // $t56 := pack 0x1::coin::PairedFungibleAssetRefs($t53, $t54, $t55) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:365:17+225
    assume {:print "$at(130,13414,13639)"} true;
    $t56 := $1_coin_PairedFungibleAssetRefs($t53, $t54, $t55);

    // trace_local[$t62]($t56) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:364:13+287
    assume {:print "$at(130,13366,13653)"} true;
    assume {:print "$track_local(51,33,12):", $t56} $t56 == $t56;

    // move_to<0x1::coin::PairedFungibleAssetRefs>($t56, $t43) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:364:13+287
    if ($ResourceExists($1_coin_PairedFungibleAssetRefs_$memory, $t43->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_PairedFungibleAssetRefs_$memory := $ResourceUpdate($1_coin_PairedFungibleAssetRefs_$memory, $t43->$addr, $t56);
    }
    if ($abort_flag) {
        assume {:print "$at(130,13366,13653)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:372:24+31
    assume {:print "$at(130,13689,13720)"} true;
L6:

    // $t57 := get_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:372:24+31
    assume {:print "$at(130,13689,13720)"} true;
    $t57 := $Dereference($t20)->$coin_to_fungible_asset_map;

    // write_back[0x1::coin::CoinConversionMap@]($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:372:24+31
    $1_coin_CoinConversionMap_$memory := $ResourceUpdate($1_coin_CoinConversionMap_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // $t58 := table::borrow<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t57, $t21) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:372:10+52
    call $t58 := $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t57, $t21);
    if ($abort_flag) {
        assume {:print "$at(130,13675,13727)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_return[0]($t58) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:319:117+2648
    assume {:print "$at(130,11085,13733)"} true;
    assume {:print "$track_return(51,33,0):", $t58} $t58 == $t58;

    // goto L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:319:117+2648
    goto L15;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:335:55+21
    assume {:print "$at(130,12010,12031)"} true;
L11:

    // $t59 := 0xa at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:335:55+21
    assume {:print "$at(130,12010,12031)"} true;
    $t59 := 10;
    assume $IsValid'address'($t59);

    // $t60 := opaque begin: create_signer::create_signer($t59) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:335:26+51

    // assume WellFormed($t60) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:335:26+51
    assume $IsValid'signer'($t60) && $1_signer_is_txn_signer($t60) && $1_signer_is_txn_signer_addr($t60->$addr);

    // assume Eq<address>(signer::$address_of($t60), $t59) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:335:26+51
    assume $IsEqual'address'($1_signer_$address_of($t60), $t59);

    // assume Eq<signer>($t60, create_signer::spec_create_signer($t59)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:335:26+51
    assume $IsEqual'signer'($t60, $1_create_signer_spec_create_signer($t59));

    // $t60 := opaque end: create_signer::create_signer($t59) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:335:26+51

    // trace_local[$t26]($t60) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:335:26+51
    assume {:print "$track_local(51,33,13):", $t60} $t60 == $t60;

    // $t61 := type_info::type_name<#0>() on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:336:41+32
    assume {:print "$at(130,12074,12106)"} true;
    $t61 := $1_string_String($TypeName(#0_info));
    if ($abort_flag) {
        assume {:print "$at(130,12074,12106)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_local[$t31]($t61) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:336:41+32
    assume {:print "$track_local(51,33,14):", $t61} $t61 == $t61;

    // $t62 := string::bytes($t61) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:336:26+48
    call $t62 := $1_string_bytes($t61);
    if ($abort_flag) {
        assume {:print "$at(130,12059,12107)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // assume Identical($t63, signer::$address_of($t60)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:162:9+50
    assume {:print "$at(186,6936,6986)"} true;
    assume ($t63 == $1_signer_$address_of($t60));

    // assume Identical($t64, object::spec_create_object_address($t63, $t62)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/object.spec.move:163:9+65
    assume {:print "$at(186,6995,7060)"} true;
    assume ($t64 == $1_object_spec_create_object_address($t63, $t62));

    // $t65 := object::create_named_object($t60, $t62) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:334:21+202
    assume {:print "$at(130,11927,12129)"} true;
    call $t65 := $1_object_create_named_object($t60, $t62);
    if ($abort_flag) {
        assume {:print "$at(130,11927,12129)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // $t4 := $t65 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:334:21+202
    $t4 := $t65;

    // trace_local[metadata_object_cref]($t65) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:334:21+202
    assume {:print "$track_local(51,33,4):", $t65} $t65 == $t65;

    // goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:334:21+202
    goto L13;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:13+6
    assume {:print "$at(130,11621,11627)"} true;
L9:

    // drop($t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:13+6
    assume {:print "$at(130,11621,11627)"} true;

    // $t66 := 28 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:73+27
    $t66 := 28;
    assume $IsValid'u64'($t66);

    // $t67 := error::invalid_state($t66) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:52+49
    call $t67 := $1_error_invalid_state($t66);
    if ($abort_flag) {
        assume {:print "$at(130,11660,11709)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t67) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:13+6
    assume {:print "$at(130,11621,11627)"} true;
    assume {:print "$track_abort(51,33):", $t67} $t67 == $t67;

    // $t16 := move($t67) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:13+6
    $t16 := $t67;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:13+6
    goto L16;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:32+18
L7:

    // $t68 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:32+18
    assume {:print "$at(130,11640,11658)"} true;
    $t68 := false;
    assume $IsValid'bool'($t68);

    // $t3 := $t68 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:32+18
    $t3 := $t68;

    // trace_local[$t19]($t68) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:32+18
    assume {:print "$track_local(51,33,3):", $t68} $t68 == $t68;

    // goto L14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:329:32+18
    goto L14;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:79+30
    assume {:print "$at(130,11334,11364)"} true;
L2:

    // $t69 := 27 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:79+30
    assume {:print "$at(130,11334,11364)"} true;
    $t69 := 27;
    assume $IsValid'u64'($t69);

    // $t70 := error::not_found($t69) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:62+48
    call $t70 := $1_error_not_found($t69);
    if ($abort_flag) {
        assume {:print "$at(130,11317,11365)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t70) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:9+6
    assume {:print "$at(130,11264,11270)"} true;
    assume {:print "$track_abort(51,33):", $t70} $t70 == $t70;

    // $t16 := move($t70) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:9+6
    $t16 := $t70;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:324:9+6
    goto L16;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:322:34+32
    assume {:print "$at(130,11211,11243)"} true;
L0:

    // $t71 := 26 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:322:34+32
    assume {:print "$at(130,11211,11243)"} true;
    $t71 := 26;
    assume $IsValid'u64'($t71);

    // $t72 := error::invalid_state($t71) on_abort goto L16 with $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:322:13+54
    call $t72 := $1_error_invalid_state($t71);
    if ($abort_flag) {
        assume {:print "$at(130,11190,11244)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(51,33):", $t16} $t16 == $t16;
        goto L16;
    }

    // trace_abort($t72) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:320:9+6
    assume {:print "$at(130,11095,11101)"} true;
    assume {:print "$track_abort(51,33):", $t72} $t72 == $t72;

    // $t16 := move($t72) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:320:9+6
    $t16 := $t72;

    // goto L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:320:9+6
    goto L16;

    // label L15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:378:5+1
    assume {:print "$at(130,14017,14018)"} true;
L15:

    // return $t58 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:378:5+1
    assume {:print "$at(130,14017,14018)"} true;
    $ret0 := $t58;
    return;

    // label L16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:378:5+1
L16:

    // abort($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:378:5+1
    assume {:print "$at(130,14017,14018)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun coin::extract_all<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:963:5+372
procedure {:inline 1} $1_coin_extract_all'#0'(_$t0: $Mutation ($1_coin_Coin'#0')) returns ($ret0: $1_coin_Coin'#0', $ret1: $Mutation ($1_coin_Coin'#0'))
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $1_coin_Ghost$supply'#0';
    var $t4: int;
    var $t5: $Mutation ($1_coin_Ghost$supply'#0');
    var $t6: int;
    var $t7: $Mutation (int);
    var $t8: $1_coin_Ghost$supply'#0';
    var $t9: int;
    var $t10: $Mutation ($1_coin_Ghost$supply'#0');
    var $t11: $1_coin_Coin'#0';
    var $t0: $Mutation ($1_coin_Coin'#0');
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:963:5+1
    assume {:print "$at(130,40254,40255)"} true;
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,34,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // $t2 := get_field<0x1::coin::Coin<#0>>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:964:27+10
    assume {:print "$at(130,40358,40368)"} true;
    $t2 := $Dereference($t0)->$value;

    // trace_local[total_value]($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:964:27+10
    assume {:print "$track_local(51,34,1):", $t2} $t2 == $t2;

    // assume Identical($t3, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value<0x1::coin::Coin<#0>>($t0)))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:966:13+56
    assume {:print "$at(130,40397,40453)"} true;
    assume ($t3 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v - $Dereference($t0)->$value)));

    // assume Identical($t4, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:966:13+56
    assume ($t4 == 0);

    // $t5 := borrow_global<0x1::coin::Ghost$supply<#0>>($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:966:13+56
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t4));
    }

    // write_ref($t5, $t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:966:13+56
    $t5 := $UpdateMutation($t5, $t3);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:966:13+56
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t5),
        $Dereference($t5));

    // $t6 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:968:22+1
    assume {:print "$at(130,40486,40487)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := borrow_field<0x1::coin::Coin<#0>>.value($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:968:9+10
    $t7 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t7, $t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:968:9+14
    $t7 := $UpdateMutation($t7, $t6);

    // write_back[Reference($t0).value (u64)]($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:968:9+14
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'#0''_value($Dereference($t0), $Dereference($t7)));

    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:968:9+14
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,34,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // assume Identical($t8, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), $t2))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:970:13+57
    assume {:print "$at(130,40516,40573)"} true;
    assume ($t8 == $1_coin_Ghost$supply'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $t2)));

    // assume Identical($t9, 0x0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:970:13+57
    assume ($t9 == 0);

    // $t10 := borrow_global<0x1::coin::Ghost$supply<#0>>($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:970:13+57
    if (!$ResourceExists($1_coin_Ghost$supply'#0'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $t9));
    }

    // write_ref($t10, $t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:970:13+57
    $t10 := $UpdateMutation($t10, $t8);

    // write_back[0x1::coin::Ghost$supply<#0>@]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:970:13+57
    $1_coin_Ghost$supply'#0'_$memory := $ResourceUpdate($1_coin_Ghost$supply'#0'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t11 := pack 0x1::coin::Coin<#0>($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:972:9+27
    assume {:print "$at(130,40593,40620)"} true;
    $t11 := $1_coin_Coin'#0'($t2);

    // trace_return[0]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:963:81+296
    assume {:print "$at(130,40330,40626)"} true;
    assume {:print "$track_return(51,34,0):", $t11} $t11 == $t11;

    // trace_local[coin]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:963:81+296
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t0);
    assume {:print "$track_local(51,34,0):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:973:5+1
    assume {:print "$at(130,40625,40626)"} true;
L1:

    // return $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:973:5+1
    assume {:print "$at(130,40625,40626)"} true;
    $ret0 := $t11;
    $ret1 := $t0;
    return;

}

// fun coin::fungible_asset_to_coin<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:401:5+684
procedure {:inline 1} $1_coin_fungible_asset_to_coin'#0'(_$t0: $1_fungible_asset_FungibleAsset) returns ($ret0: $1_coin_Coin'#0')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_coin_PairedCoinType;
    var $t8: $1_type_info_TypeInfo;
    var $t9: $1_type_info_TypeInfo;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: $1_coin_Coin'#0';
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t0: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[fungible_asset]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:401:5+1
    assume {:print "$at(130,14895,14896)"} true;
    assume {:print "$track_local(51,36,0):", $t0} $t0 == $t0;

    // $t3 := fungible_asset::metadata_from_asset($t0) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:404:53+52
    assume {:print "$at(130,15081,15133)"} true;
    call $t3 := $1_fungible_asset_metadata_from_asset($t0);
    if ($abort_flag) {
        assume {:print "$at(130,15081,15133)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_local[$t4]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:404:53+52
    assume {:print "$track_local(51,36,1):", $t3} $t3 == $t3;

    // $t5 := object::object_address<0x1::fungible_asset::Metadata>($t3) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:404:29+77
    call $t5 := $1_object_object_address'$1_fungible_asset_Metadata'($t3);
    if ($abort_flag) {
        assume {:print "$at(130,15057,15134)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_local[metadata_addr]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:404:29+77
    assume {:print "$track_local(51,36,2):", $t5} $t5 == $t5;

    // $t6 := object::object_exists<0x1::coin::PairedCoinType>($t5) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:406:13+52
    assume {:print "$at(130,15165,15217)"} true;
    call $t6 := $1_object_object_exists'$1_coin_PairedCoinType'($t5);
    if ($abort_flag) {
        assume {:print "$at(130,15165,15217)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // if ($t6) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:405:9+6
    assume {:print "$at(130,15144,15150)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:409:30+44
    assume {:print "$at(130,15302,15346)"} true;
L1:

    // $t7 := get_global<0x1::coin::PairedCoinType>($t5) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:409:30+44
    assume {:print "$at(130,15302,15346)"} true;
    if (!$ResourceExists($1_coin_PairedCoinType_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_coin_PairedCoinType_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(130,15302,15346)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // $t8 := get_field<0x1::coin::PairedCoinType>.type($t7) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:409:30+49
    $t8 := $t7->$type;

    // $t9 := type_info::type_of<#0>() on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:35+30
    assume {:print "$at(130,15387,15417)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t9 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(130,15387,15417)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // $t10 := ==($t8, $t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:17+48
    $t10 := $IsEqual'$1_type_info_TypeInfo'($t8, $t9);

    // if ($t10) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:9+6
    if ($t10) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:411:22+45
    assume {:print "$at(130,15487,15532)"} true;
L3:

    // $t11 := fungible_asset::burn_internal($t0) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:411:22+45
    assume {:print "$at(130,15487,15532)"} true;
    call $t11 := $1_fungible_asset_burn_internal($t0);
    if ($abort_flag) {
        assume {:print "$at(130,15487,15532)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // assume Identical($t12, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:109:9+58
    assume {:print "$at(131,6122,6180)"} true;
    assume ($t12 == $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t13 := coin::mint_internal<#0>($t11) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:412:9+31
    assume {:print "$at(130,15542,15573)"} true;
    call $t13 := $1_coin_mint_internal'#0'($t11);
    if ($abort_flag) {
        assume {:print "$at(130,15542,15573)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_return[0]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:403:57+552
    assume {:print "$at(130,15027,15579)"} true;
    assume {:print "$track_return(51,36,0):", $t13} $t13 == $t13;

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:403:57+552
    goto L4;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:91+19
    assume {:print "$at(130,15443,15462)"} true;
L2:

    // $t14 := 17 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:91+19
    assume {:print "$at(130,15443,15462)"} true;
    $t14 := 17;
    assume $IsValid'u64'($t14);

    // $t15 := error::invalid_argument($t14) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:67+44
    call $t15 := $1_error_invalid_argument($t14);
    if ($abort_flag) {
        assume {:print "$at(130,15419,15463)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:9+6
    assume {:print "$at(130,15361,15367)"} true;
    assume {:print "$track_abort(51,36):", $t15} $t15 == $t15;

    // $t4 := move($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:9+6
    $t4 := $t15;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:410:9+6
    goto L5;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:407:30+12
    assume {:print "$at(130,15248,15260)"} true;
L0:

    // $t16 := 15 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:407:30+12
    assume {:print "$at(130,15248,15260)"} true;
    $t16 := 15;
    assume $IsValid'u64'($t16);

    // $t17 := error::not_found($t16) on_abort goto L5 with $t4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:407:13+30
    call $t17 := $1_error_not_found($t16);
    if ($abort_flag) {
        assume {:print "$at(130,15231,15261)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(51,36):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:405:9+6
    assume {:print "$at(130,15144,15150)"} true;
    assume {:print "$track_abort(51,36):", $t17} $t17 == $t17;

    // $t4 := move($t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:405:9+6
    $t4 := $t17;

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:405:9+6
    goto L5;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:413:5+1
    assume {:print "$at(130,15578,15579)"} true;
L4:

    // return $t13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:413:5+1
    assume {:print "$at(130,15578,15579)"} true;
    $ret0 := $t13;
    return;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:413:5+1
L5:

    // abort($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:413:5+1
    assume {:print "$at(130,15578,15579)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun coin::is_account_registered<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:728:5+465
procedure {:inline 1} $1_coin_is_account_registered'#0'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_object_Object'$1_fungible_asset_Metadata';
    var $t10: bool;
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:728:5+1
    assume {:print "$at(130,30260,30261)"} true;
    assume {:print "$track_local(51,42,0):", $t0} $t0 == $t0;

    // $t5 := coin::is_coin_initialized<#0>() on_abort goto L13 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:729:17+31
    assume {:print "$at(130,30387,30418)"} true;
    call $t5 := $1_coin_is_coin_initialized'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,30387,30418)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t5) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:729:9+6
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:730:13+41
    assume {:print "$at(130,30484,30525)"} true;
L1:

    // $t7 := exists<0x1::coin::CoinStore<#0>>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:730:13+41
    assume {:print "$at(130,30484,30525)"} true;
    $t7 := $ResourceExists($1_coin_CoinStore'#0'_$memory, $t0);

    // if ($t7) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:730:9+239
    if ($t7) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:731:13+4
    assume {:print "$at(130,30541,30545)"} true;
L3:

    // $t8 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:731:13+4
    assume {:print "$at(130,30541,30545)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:731:13+4
    $t1 := $t8;

    // trace_local[$t2]($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:731:13+4
    assume {:print "$track_local(51,42,1):", $t8} $t8 == $t8;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:728:114+356
    assume {:print "$at(130,30369,30725)"} true;
L8:

    // trace_return[0]($t1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:728:114+356
    assume {:print "$at(130,30369,30725)"} true;
    assume {:print "$track_return(51,42,0):", $t1} $t1 == $t1;

    // goto L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:728:114+356
    goto L12;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:733:35+34
    assume {:print "$at(130,30597,30631)"} true;
L2:

    // $t9 := coin::ensure_paired_metadata<#0>() on_abort goto L13 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:733:35+34
    assume {:print "$at(130,30597,30631)"} true;
    call $t9 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,30597,30631)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_local[account_address]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:900:16+33
    assume {:print "$at(130,37333,37366)"} true;
    assume {:print "$track_local(51,42,2):", $t0} $t0 == $t0;

    // trace_local[metadata]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:900:16+33
    assume {:print "$track_local(51,42,3):", $t9} $t9 == $t9;

    // $t10 := features::new_accounts_default_to_fa_store_enabled() on_abort goto L13 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+52
    assume {:print "$at(130,37459,37511)"} true;
    call $t10 := $1_features_new_accounts_default_to_fa_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(130,37459,37511)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t10) goto L5 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
    if ($t10) { goto L5; } else { goto L4; }

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
L5:

    // $t11 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
    assume {:print "$at(130,37459,37618)"} true;
    $t11 := true;
    assume $IsValid'bool'($t11);

    // $t4 := $t11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
    $t4 := $t11;

    // trace_local[$t10]($t11) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+159
    assume {:print "$track_local(51,42,4):", $t11} $t11 == $t11;

    // label L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
L11:

    // if ($t4) goto L7 else goto L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    assume {:print "$at(130,37459,37867)"} true;
    if ($t4) { goto L7; } else { goto L6; }

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
L7:

    // $t12 := true at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    assume {:print "$at(130,37459,37867)"} true;
    $t12 := true;
    assume $IsValid'bool'($t12);

    // $t1 := $t12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    $t1 := $t12;

    // trace_local[$t2]($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    assume {:print "$track_local(51,42,1):", $t12} $t12 == $t12;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:9+408
    goto L8;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:906:17+15
    assume {:print "$at(130,37737,37752)"} true;
L6:

    // $t13 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t0, $t9) on_abort goto L13 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:905:41+128
    assume {:print "$at(130,37664,37792)"} true;
    call $t13 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(130,37664,37792)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t14 := fungible_asset::store_exists($t13) on_abort goto L13 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:909:13+51
    assume {:print "$at(130,37806,37857)"} true;
    call $t14 := $1_fungible_asset_store_exists($t13);
    if ($abort_flag) {
        assume {:print "$at(130,37806,37857)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t1 := $t14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:909:13+51
    $t1 := $t14;

    // trace_local[$t2]($t14) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:909:13+51
    assume {:print "$track_local(51,42,1):", $t14} $t14 == $t14;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:909:13+51
    goto L8;

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:66+56
    assume {:print "$at(130,37516,37572)"} true;
L4:

    // $t15 := features::new_accounts_default_to_fa_apt_store_enabled() on_abort goto L13 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:66+56
    assume {:print "$at(130,37516,37572)"} true;
    call $t15 := $1_features_new_accounts_default_to_fa_apt_store_enabled();
    if ($abort_flag) {
        assume {:print "$at(130,37516,37572)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // if ($t15) goto L10 else goto L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    if ($t15) { goto L10; } else { goto L9; }

    // label L10 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:149+9
L10:

    // $t16 := object::object_address<0x1::fungible_asset::Metadata>($t9) on_abort goto L13 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:126+33
    assume {:print "$at(130,37576,37609)"} true;
    call $t16 := $1_object_object_address'$1_fungible_asset_Metadata'($t9);
    if ($abort_flag) {
        assume {:print "$at(130,37576,37609)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t17 := 0xa at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:163+4
    $t17 := 10;
    assume $IsValid'address'($t17);

    // $t18 := ==($t16, $t17) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:126+41
    $t18 := $IsEqual'address'($t16, $t17);

    // $t4 := $t18 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:126+41
    $t4 := $t18;

    // trace_local[$t10]($t18) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:126+41
    assume {:print "$track_local(51,42,4):", $t18} $t18 == $t18;

    // goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    goto L11;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
L9:

    // $t19 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    assume {:print "$at(130,37515,37618)"} true;
    $t19 := false;
    assume $IsValid'bool'($t19);

    // $t4 := $t19 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    $t4 := $t19;

    // trace_local[$t10]($t19) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    assume {:print "$track_local(51,42,4):", $t19} $t19 == $t19;

    // goto L11 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:904:65+103
    goto L11;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:729:74+24
    assume {:print "$at(130,30444,30468)"} true;
L0:

    // $t20 := 3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:729:74+24
    assume {:print "$at(130,30444,30468)"} true;
    $t20 := 3;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L13 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:729:50+49
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(130,30420,30469)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,42):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:729:9+6
    assume {:print "$at(130,30379,30385)"} true;
    assume {:print "$track_abort(51,42):", $t21} $t21 == $t21;

    // $t6 := move($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:729:9+6
    $t6 := $t21;

    // goto L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:729:9+6
    goto L13;

    // label L12 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:736:5+1
    assume {:print "$at(130,30724,30725)"} true;
L12:

    // return $t1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:736:5+1
    assume {:print "$at(130,30724,30725)"} true;
    $ret0 := $t1;
    return;

    // label L13 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:736:5+1
L13:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:736:5+1
    assume {:print "$at(130,30724,30725)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::is_coin_initialized<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:709:5+117
procedure {:inline 1} $1_coin_is_coin_initialized'#0'() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $t2: int;
    var $t3: bool;
    var $temp_0'bool': bool;
    var $1_coin_Ghost$supply'#0'_$memory#156: $Memory $1_coin_Ghost$supply'#0';
    var $1_coin_Ghost$aggregate_supply'#0'_$memory#157: $Memory $1_coin_Ghost$aggregate_supply'#0';
    var $1_coin_CoinInfo'#0'_$memory#158: $Memory $1_coin_CoinInfo'#0';

    // bytecode translation starts here
    // $t0 := opaque begin: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    assume {:print "$at(130,29679,29703)"} true;

    // $t1 := havoc[val]() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    havoc $t1;

    // if ($t1) goto L4 else goto L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
L4:

    // trace_abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    assume {:print "$at(130,29679,29703)"} true;
    assume {:print "$track_abort(51,43):", $t2} $t2 == $t2;

    // goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    goto L2;

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
L3:

    // @158 := save_mem(coin::CoinInfo<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    assume {:print "$at(130,29679,29703)"} true;
    $1_coin_CoinInfo'#0'_$memory#158 := $1_coin_CoinInfo'#0'_$memory;

    // @156 := save_mem(coin::supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    $1_coin_Ghost$supply'#0'_$memory#156 := $1_coin_Ghost$supply'#0'_$memory;

    // @157 := save_mem(coin::aggregate_supply<#0>) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    $1_coin_Ghost$aggregate_supply'#0'_$memory#157 := $1_coin_Ghost$aggregate_supply'#0'_$memory;

    // assume WellFormed($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    assume $IsValid'address'($t0);

    // assume Implies(coin::spec_fun_supply_tracked[]<#0>(Add(select coin::Ghost$supply.v<#0>(global[@156]<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global[@157]<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global[@158]<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of[]<#0>())))), coin::spec_fun_supply_tracked<#0>(Add(select coin::Ghost$supply.v<#0>(global<0x1::coin::Ghost$supply<#0>>(0x0)), select coin::Ghost$aggregate_supply.v<#0>(global<0x1::coin::Ghost$aggregate_supply<#0>>(0x0))), select coin::CoinInfo.supply<0x1::coin::CoinInfo<#0>>(global<0x1::coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>()))))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    assume ($1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory#156, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory#157, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory#158, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply) ==> $1_coin_spec_fun_supply_tracked'#0'(($ResourceValue($1_coin_Ghost$supply'#0'_$memory, 0)->$v + $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, 0)->$v), $ResourceValue($1_coin_CoinInfo'#0'_$memory, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address)->$supply));

    // assume Eq<address>($t0, select type_info::TypeInfo.account_address<0x1::type_info::TypeInfo>(type_info::$type_of<#0>())) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24
    assume $IsEqual'address'($t0, $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s)->$account_address);

    // $t0 := opaque end: coin::coin_address<#0>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:36+24

    // $t3 := exists<0x1::coin::CoinInfo<#0>>($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:9+52
    $t3 := $ResourceExists($1_coin_CoinInfo'#0'_$memory, $t0);

    // trace_return[0]($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:710:9+52
    assume {:print "$track_return(51,43,0):", $t3} $t3 == $t3;

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:711:5+1
    assume {:print "$at(130,29709,29710)"} true;
L1:

    // return $t3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:711:5+1
    assume {:print "$at(130,29709,29710)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:711:5+1
L2:

    // abort($t2) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:711:5+1
    assume {:print "$at(130,29709,29710)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun coin::paired_metadata<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:286:5+545
procedure {:inline 1} $1_coin_paired_metadata'#0'() returns ($ret0: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'')
{
    // declare local variables
    var $t0: bool;
    var $t1: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t2: $1_type_info_TypeInfo;
    var $t3: int;
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_coin_CoinConversionMap;
    var $t9: Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $t10: $1_type_info_TypeInfo;
    var $t11: bool;
    var $t12: $1_object_Object'$1_fungible_asset_Metadata';
    var $t13: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t14: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t15: $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $t16: bool;
    var $temp_0'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata''': $1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'';
    var $temp_0'$1_table_Table'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''': Table int ($1_object_Object'$1_fungible_asset_Metadata');
    var $temp_0'$1_type_info_TypeInfo': $1_type_info_TypeInfo;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t3 := 0x1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:39+16
    assume {:print "$at(130,9744,9760)"} true;
    $t3 := 1;
    assume $IsValid'address'($t3);

    // $t4 := exists<0x1::coin::CoinConversionMap>($t3) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:13+43
    $t4 := $ResourceExists($1_coin_CoinConversionMap_$memory, $t3);

    // if ($t4) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:13+116
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:60+69
L1:

    // $t5 := features::coin_to_fungible_asset_migration_feature_enabled() on_abort goto L9 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:60+69
    assume {:print "$at(130,9765,9834)"} true;
    call $t5 := $1_features_coin_to_fungible_asset_migration_feature_enabled();
    if ($abort_flag) {
        assume {:print "$at(130,9765,9834)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // $t0 := $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:60+69
    $t0 := $t5;

    // trace_local[$t2]($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:60+69
    assume {:print "$track_local(51,50,0):", $t5} $t5 == $t5;

    // label L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:9+413
L7:

    // if ($t0) goto L2 else goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:9+413
    assume {:print "$at(130,9714,10127)"} true;
    if ($t0) { goto L2; } else { goto L4; }

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:289:57+16
    assume {:print "$at(130,9894,9910)"} true;
L2:

    // $t7 := 0x1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:289:57+16
    assume {:print "$at(130,9894,9910)"} true;
    $t7 := 1;
    assume $IsValid'address'($t7);

    // $t8 := get_global<0x1::coin::CoinConversionMap>($t7) on_abort goto L9 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:289:24+50
    if (!$ResourceExists($1_coin_CoinConversionMap_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $ResourceValue($1_coin_CoinConversionMap_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(130,9861,9911)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // $t9 := get_field<0x1::coin::CoinConversionMap>.coin_to_fungible_asset_map($t8) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:289:23+78
    $t9 := $t8->$coin_to_fungible_asset_map;

    // trace_local[map]($t9) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:289:23+78
    assume {:print "$track_local(51,50,1):", $t9} $t9 == $t9;

    // $t10 := type_info::type_of<#0>() on_abort goto L9 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:290:24+30
    assume {:print "$at(130,9963,9993)"} true;
    if (!(#0_info is $TypeParamStruct)) {
        call $ExecFailureAbort();
    }
    else {
        $t10 := $1_type_info_TypeInfo(#0_info->a, #0_info->m, #0_info->s);
    }
    if ($abort_flag) {
        assume {:print "$at(130,9963,9993)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // trace_local[type]($t10) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:290:24+30
    assume {:print "$track_local(51,50,2):", $t10} $t10 == $t10;

    // $t11 := table::contains<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t9, $t10) on_abort goto L9 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:291:17+26
    assume {:print "$at(130,10011,10037)"} true;
    call $t11 := $1_table_contains'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(130,10011,10037)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // if ($t11) goto L6 else goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:291:13+110
    if ($t11) { goto L6; } else { goto L5; }

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:52+3
    assume {:print "$at(130,10092,10095)"} true;
L6:

    // $t12 := table::borrow<0x1::type_info::TypeInfo, 0x1::object::Object<0x1::fungible_asset::Metadata>>($t9, $t10) on_abort goto L9 with $t6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:38+24
    assume {:print "$at(130,10078,10102)"} true;
    call $t12 := $1_table_borrow'$1_type_info_TypeInfo_$1_object_Object'$1_fungible_asset_Metadata''($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(130,10078,10102)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(51,50):", $t6} $t6 == $t6;
        goto L9;
    }

    // $t13 := opaque begin: option::some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:24+39

    // assume And(WellFormed($t13), Le(Len<0x1::object::Object<0x1::fungible_asset::Metadata>>(select option::Option.vec($t13)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:24+39
    assume ($IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t13) && (LenVec($t13->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>>>($t13, option::spec_some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:24+39
    assume $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t13, $1_option_spec_some'$1_object_Object'$1_fungible_asset_Metadata''($t12));

    // $t13 := opaque end: option::some<0x1::object::Object<0x1::fungible_asset::Metadata>>($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:24+39

    // trace_return[0]($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:17+46
    assume {:print "$track_return(51,50,0):", $t13} $t13 == $t13;

    // $t14 := move($t13) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:17+46
    $t14 := $t13;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:292:17+46
    goto L8;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:291:13+110
    assume {:print "$at(130,10007,10117)"} true;
L5:

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:295:9+14
    assume {:print "$at(130,10137,10151)"} true;
L4:

    // $t15 := opaque begin: option::none<0x1::object::Object<0x1::fungible_asset::Metadata>>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:295:9+14
    assume {:print "$at(130,10137,10151)"} true;

    // assume And(WellFormed($t15), Le(Len<0x1::object::Object<0x1::fungible_asset::Metadata>>(select option::Option.vec($t15)), 1)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:295:9+14
    assume ($IsValid'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t15) && (LenVec($t15->$vec) <= 1));

    // assume Eq<0x1::option::Option<0x1::object::Object<0x1::fungible_asset::Metadata>>>($t15, option::spec_none<0x1::object::Object<0x1::fungible_asset::Metadata>>()) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:295:9+14
    assume $IsEqual'$1_option_Option'$1_object_Object'$1_fungible_asset_Metadata'''($t15, $1_option_spec_none'$1_object_Object'$1_fungible_asset_Metadata''());

    // $t15 := opaque end: option::none<0x1::object::Object<0x1::fungible_asset::Metadata>>() at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:295:9+14

    // trace_return[0]($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:286:97+453
    assume {:print "$at(130,9704,10157)"} true;
    assume {:print "$track_return(51,50,0):", $t15} $t15 == $t15;

    // $t14 := move($t15) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:286:97+453
    $t14 := $t15;

    // goto L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:286:97+453
    goto L8;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:13+116
    assume {:print "$at(130,9718,9834)"} true;
L0:

    // $t16 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:13+116
    assume {:print "$at(130,9718,9834)"} true;
    $t16 := false;
    assume $IsValid'bool'($t16);

    // $t0 := $t16 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:13+116
    $t0 := $t16;

    // trace_local[$t2]($t16) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:13+116
    assume {:print "$track_local(51,50,0):", $t16} $t16 == $t16;

    // goto L7 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:287:13+116
    goto L7;

    // label L8 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:296:5+1
    assume {:print "$at(130,10156,10157)"} true;
L8:

    // return $t14 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:296:5+1
    assume {:print "$at(130,10156,10157)"} true;
    $ret0 := $t14;
    return;

    // label L9 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:296:5+1
L9:

    // abort($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:296:5+1
    assume {:print "$at(130,10156,10157)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::register<#0> [baseline] at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1092:5+758
procedure {:inline 1} $1_coin_register'#0'(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t3: $1_coin_CoinStore'#0';
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: $1_coin_Coin'#0';
    var $t14: bool;
    var $t15: int;
    var $t16: $1_account_Account;
    var $t17: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t18: int;
    var $t19: $1_account_Account;
    var $t20: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t21: $1_coin_CoinStore'#0';
    var $t0: $signer;
    var $temp_0'$1_coin_CoinStore'#0'': $1_coin_CoinStore'#0';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1092:5+1
    assume {:print "$at(130,45324,45325)"} true;
    assume {:print "$track_local(51,53,0):", $t0} $t0 == $t0;

    // $t4 := signer::address_of($t0) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1093:28+27
    assume {:print "$at(130,45438,45465)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(130,45438,45465)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[account_addr]($t4) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1093:28+27
    assume {:print "$track_local(51,53,1):", $t4} $t4 == $t4;

    // trace_local[account]($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:625:16+28
    assume {:print "$at(130,26434,26462)"} true;
    assume {:print "$track_local(51,53,2):", $t0} $t0 == $t0;

    // $t6 := opaque begin: permissioned_signer::is_permissioned_signer($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:626:12+52
    assume {:print "$at(130,26504,26556)"} true;

    // assume WellFormed($t6) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:626:12+52
    assume $IsValid'bool'($t6);

    // assume Eq<bool>($t6, permissioned_signer::spec_is_permissioned_signer($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:626:12+52
    assume $IsEqual'bool'($t6, $1_permissioned_signer_spec_is_permissioned_signer($t0));

    // $t6 := opaque end: permissioned_signer::is_permissioned_signer($t0) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:626:12+52

    // if ($t6) goto L1 else goto L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:626:9+378
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:628:17+7
    assume {:print "$at(130,26642,26649)"} true;
L1:

    // $t7 := signer::address_of($t0) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:630:21+27
    assume {:print "$at(130,26734,26761)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(130,26734,26761)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t8 := coin::ensure_paired_metadata<#0>() on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:631:21+34
    assume {:print "$at(130,26783,26817)"} true;
    call $t8 := $1_coin_ensure_paired_metadata'#0'();
    if ($abort_flag) {
        assume {:print "$at(130,26783,26817)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t9 := primary_fungible_store::primary_store_address<0x1::fungible_asset::Metadata>($t7, $t8) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:629:17+168
    assume {:print "$at(130,26667,26835)"} true;
    call $t9 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t7, $t8);
    if ($abort_flag) {
        assume {:print "$at(130,26667,26835)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t10 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:633:17+1
    assume {:print "$at(130,26853,26854)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // fungible_asset::withdraw_permission_check_by_address($t0, $t9, $t10) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:627:13+296
    assume {:print "$at(130,26572,26868)"} true;
    call $1_fungible_asset_withdraw_permission_check_by_address($t0, $t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(130,26572,26868)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // label L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1096:13+45
    assume {:print "$at(130,45623,45668)"} true;
L4:

    // $t11 := coin::is_account_registered<#0>($t4) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1096:13+45
    assume {:print "$at(130,45623,45668)"} true;
    call $t11 := $1_coin_is_account_registered'#0'($t4);
    if ($abort_flag) {
        assume {:print "$at(130,45623,45668)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // if ($t11) goto L3 else goto L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1096:9+81
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1097:13+6
    assume {:print "$at(130,45684,45690)"} true;
L3:

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1097:13+6
    assume {:print "$at(130,45684,45690)"} true;
    goto L5;

    // label L2 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1100:9+46
    assume {:print "$at(130,45711,45757)"} true;
L2:

    // account::register_coin<#0>($t4) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1100:9+46
    assume {:print "$at(130,45711,45757)"} true;
    call $1_account_register_coin'#0'($t4);
    if ($abort_flag) {
        assume {:print "$at(130,45711,45757)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t12 := 0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1102:33+1
    assume {:print "$at(130,45838,45839)"} true;
    $t12 := 0;
    assume $IsValid'u64'($t12);

    // $t13 := pack 0x1::coin::Coin<#0>($t12) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1102:19+17
    $t13 := $1_coin_Coin'#0'($t12);

    // $t14 := false at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1103:21+5
    assume {:print "$at(130,45863,45868)"} true;
    $t14 := false;
    assume $IsValid'bool'($t14);

    // assume Identical($t15, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:656:9+39
    assume {:print "$at(97,32702,32741)"} true;
    assume ($t15 == $1_signer_$address_of($t0));

    // assume Identical($t16, global<0x1::account::Account>($t15)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:657:9+36
    assume {:print "$at(97,32750,32786)"} true;
    assume ($t16 == $ResourceValue($1_account_Account_$memory, $t15));

    // $t17 := account::new_event_handle<0x1::coin::DepositEvent>($t0) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1104:29+48
    assume {:print "$at(130,45898,45946)"} true;
    call $t17 := $1_account_new_event_handle'$1_coin_DepositEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(130,45898,45946)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // assume Identical($t18, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:656:9+39
    assume {:print "$at(97,32702,32741)"} true;
    assume ($t18 == $1_signer_$address_of($t0));

    // assume Identical($t19, global<0x1::account::Account>($t18)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:657:9+36
    assume {:print "$at(97,32750,32786)"} true;
    assume ($t19 == $ResourceValue($1_account_Account_$memory, $t18));

    // $t20 := account::new_event_handle<0x1::coin::WithdrawEvent>($t0) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1105:30+49
    assume {:print "$at(130,45977,46026)"} true;
    call $t20 := $1_account_new_event_handle'$1_coin_WithdrawEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(130,45977,46026)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t21 := pack 0x1::coin::CoinStore<#0>($t13, $t14, $t17, $t20) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1101:26+253
    assume {:print "$at(130,45784,46037)"} true;
    $t21 := $1_coin_CoinStore'#0'($t13, $t14, $t17, $t20);

    // trace_local[coin_store]($t21) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1101:26+253
    assume {:print "$track_local(51,53,3):", $t21} $t21 == $t21;

    // move_to<0x1::coin::CoinStore<#0>>($t21, $t0) on_abort goto L6 with $t5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1107:9+28
    assume {:print "$at(130,46047,46075)"} true;
    if ($ResourceExists($1_coin_CoinStore'#0'_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_coin_CoinStore'#0'_$memory := $ResourceUpdate($1_coin_CoinStore'#0'_$memory, $t0->$addr, $t21);
    }
    if ($abort_flag) {
        assume {:print "$at(130,46047,46075)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(51,53):", $t5} $t5 == $t5;
        goto L6;
    }

    // goto L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1092:90+673
    assume {:print "$at(130,45409,46082)"} true;
    goto L5;

    // label L0 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:626:9+378
    assume {:print "$at(130,26501,26879)"} true;
L0:

    // goto L4 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:626:9+378
    assume {:print "$at(130,26501,26879)"} true;
    goto L4;

    // label L5 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1108:5+1
    assume {:print "$at(130,46081,46082)"} true;
L5:

    // return () at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1108:5+1
    assume {:print "$at(130,46081,46082)"} true;
    return;

    // label L6 at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1108:5+1
L6:

    // abort($t5) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.move:1108:5+1
    assume {:print "$at(130,46081,46082)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/sources/hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.move:161:5+155
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $ResourceValue($1_reconfiguration_Configuration_$memory, 1)->$last_reconfiguration_time
}

// struct reconfiguration::Configuration at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.move:43:5+306
datatype $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent')
}
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, s->$last_reconfiguration_time, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, x, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, s->$last_reconfiguration_time, x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'(s->$epoch)
      && $IsValid'u64'(s->$last_reconfiguration_time)
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s->$events)
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.move:30:5+64
datatype $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent($epoch: int)
}
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'(s->$epoch)
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// struct pivot_markets::Position at pivot-tst/contract/sources/pivot_markets.move:32:5+252
datatype $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position($user: int, $outcome: int, $shares: int, $avg_price: int, $timestamp: int)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'_user(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position, x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position(x, s->$outcome, s->$shares, s->$avg_price, s->$timestamp)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'_outcome(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position, x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position(s->$user, x, s->$shares, s->$avg_price, s->$timestamp)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'_shares(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position, x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position(s->$user, s->$outcome, x, s->$avg_price, s->$timestamp)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'_avg_price(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position, x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position(s->$user, s->$outcome, s->$shares, x, s->$timestamp)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'_timestamp(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position, x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position(s->$user, s->$outcome, s->$shares, s->$avg_price, x)
}
function $IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position): bool {
    $IsValid'address'(s->$user)
      && $IsValid'u8'(s->$outcome)
      && $IsValid'u64'(s->$shares)
      && $IsValid'u64'(s->$avg_price)
      && $IsValid'u64'(s->$timestamp)
}
function {:inline} $IsEqual'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'(s1: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position, s2: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position): bool {
    s1 == s2
}

// struct pivot_markets::Market<#0> at pivot-tst/contract/sources/pivot_markets.move:40:5+729
datatype $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'($id: int, $description: $1_string_String, $end_time: int, $yes_pool: $1_coin_Coin'#0', $no_pool: $1_coin_Coin'#0', $liquidity_pool: $1_coin_Coin'#0', $positions: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position), $user_positions: Table int (Vec (int)), $next_position_id: int, $resolved: bool, $outcome: $1_option_Option'u8', $oracle: int, $total_yes_shares: int, $total_no_shares: int, $liquidity_providers: Table int (int), $total_liquidity: int, $participant_count: int, $creation_time: int)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_id(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(x, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_description(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: $1_string_String): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, x, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_end_time(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, x, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_yes_pool(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: $1_coin_Coin'#0'): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, x, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_no_pool(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: $1_coin_Coin'#0'): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, x, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_pool(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: $1_coin_Coin'#0'): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, x, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_positions(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position)): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, x, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_user_positions(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: Table int (Vec (int))): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, x, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_next_position_id(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, x, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_resolved(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: bool): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, x, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_outcome(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: $1_option_Option'u8'): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, x, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_oracle(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, x, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_total_yes_shares(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, x, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_total_no_shares(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, x, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_providers(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: Table int (int)): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, x, s->$total_liquidity, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_total_liquidity(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, x, s->$participant_count, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_participant_count(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, x, s->$creation_time)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_creation_time(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'(s->$id, s->$description, s->$end_time, s->$yes_pool, s->$no_pool, s->$liquidity_pool, s->$positions, s->$user_positions, s->$next_position_id, s->$resolved, s->$outcome, s->$oracle, s->$total_yes_shares, s->$total_no_shares, s->$liquidity_providers, s->$total_liquidity, s->$participant_count, x)
}
function $IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'): bool {
    $IsValid'u64'(s->$id)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'u64'(s->$end_time)
      && $IsValid'$1_coin_Coin'#0''(s->$yes_pool)
      && $IsValid'$1_coin_Coin'#0''(s->$no_pool)
      && $IsValid'$1_coin_Coin'#0''(s->$liquidity_pool)
      && $IsValid'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(s->$positions)
      && $IsValid'$1_table_Table'address_vec'u64'''(s->$user_positions)
      && $IsValid'u64'(s->$next_position_id)
      && $IsValid'bool'(s->$resolved)
      && $IsValid'$1_option_Option'u8''(s->$outcome)
      && $IsValid'address'(s->$oracle)
      && $IsValid'u64'(s->$total_yes_shares)
      && $IsValid'u64'(s->$total_no_shares)
      && $IsValid'$1_table_Table'address_u64''(s->$liquidity_providers)
      && $IsValid'u64'(s->$total_liquidity)
      && $IsValid'u64'(s->$participant_count)
      && $IsValid'u64'(s->$creation_time)
}
function {:inline} $IsEqual'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''(s1: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', s2: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'): bool {
    $IsEqual'u64'(s1->$id, s2->$id)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'u64'(s1->$end_time, s2->$end_time)
    && $IsEqual'$1_coin_Coin'#0''(s1->$yes_pool, s2->$yes_pool)
    && $IsEqual'$1_coin_Coin'#0''(s1->$no_pool, s2->$no_pool)
    && $IsEqual'$1_coin_Coin'#0''(s1->$liquidity_pool, s2->$liquidity_pool)
    && $IsEqual'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position''(s1->$positions, s2->$positions)
    && $IsEqual'$1_table_Table'address_vec'u64'''(s1->$user_positions, s2->$user_positions)
    && $IsEqual'u64'(s1->$next_position_id, s2->$next_position_id)
    && $IsEqual'bool'(s1->$resolved, s2->$resolved)
    && $IsEqual'$1_option_Option'u8''(s1->$outcome, s2->$outcome)
    && $IsEqual'address'(s1->$oracle, s2->$oracle)
    && $IsEqual'u64'(s1->$total_yes_shares, s2->$total_yes_shares)
    && $IsEqual'u64'(s1->$total_no_shares, s2->$total_no_shares)
    && $IsEqual'$1_table_Table'address_u64''(s1->$liquidity_providers, s2->$liquidity_providers)
    && $IsEqual'u64'(s1->$total_liquidity, s2->$total_liquidity)
    && $IsEqual'u64'(s1->$participant_count, s2->$participant_count)
    && $IsEqual'u64'(s1->$creation_time, s2->$creation_time)}

// struct pivot_markets::MarketStore<#0> at pivot-tst/contract/sources/pivot_markets.move:61:5+270
datatype $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'($admin: int, $markets: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'), $next_id: int, $platform_fee_rate: int, $lp_fee_rate: int)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_admin(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'(x, s->$markets, s->$next_id, s->$platform_fee_rate, s->$lp_fee_rate)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0', x: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0')): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'(s->$admin, x, s->$next_id, s->$platform_fee_rate, s->$lp_fee_rate)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_next_id(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'(s->$admin, s->$markets, x, s->$platform_fee_rate, s->$lp_fee_rate)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_platform_fee_rate(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'(s->$admin, s->$markets, s->$next_id, x, s->$lp_fee_rate)
}
function {:inline} $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_lp_fee_rate(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0', x: int): $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0' {
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'(s->$admin, s->$markets, s->$next_id, s->$platform_fee_rate, x)
}
function $IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(s: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'): bool {
    $IsValid'address'(s->$admin)
      && $IsValid'$1_table_Table'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'''(s->$markets)
      && $IsValid'u64'(s->$next_id)
      && $IsValid'u64'(s->$platform_fee_rate)
      && $IsValid'u64'(s->$lp_fee_rate)
}
function {:inline} $IsEqual'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''(s1: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0', s2: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'): bool {
    s1 == s2
}
var $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory: $Memory $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';

// fun pivot_markets::initialize [verification] at pivot-tst/contract/sources/pivot_markets.move:70:5+781
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_initialize$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: bool;
    var $t7: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $t12: bool;
    var $t13: Vec (int);
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume {:print "$at(2,2403,2404)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::account::Account: ResourceDomain<0x1::account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // trace_local[admin]($t0) at pivot-tst/contract/sources/pivot_markets.move:70:5+1
    assume {:print "$track_local(101,0,0):", $t0} $t0 == $t0;

    // $t2 := signer::address_of($t0) on_abort goto L8 with $t3 at pivot-tst/contract/sources/pivot_markets.move:71:26+25
    assume {:print "$at(2,2484,2509)"} true;
    call $t2 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,2484,2509)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(101,0):", $t3} $t3 == $t3;
        goto L8;
    }

    // trace_local[admin_addr]($t2) at pivot-tst/contract/sources/pivot_markets.move:71:26+25
    assume {:print "$track_local(101,0,1):", $t2} $t2 == $t2;

    // $t4 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:72:31+14
    assume {:print "$at(2,2541,2555)"} true;
    $t4 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t4);

    // $t5 := ==($t2, $t4) at pivot-tst/contract/sources/pivot_markets.move:72:17+28
    $t5 := $IsEqual'address'($t2, $t4);

    // if ($t5) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:72:9+6
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:73:18+41
    assume {:print "$at(2,2614,2655)"} true;
L1:

    // $t6 := exists<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t2) at pivot-tst/contract/sources/pivot_markets.move:73:18+41
    assume {:print "$at(2,2614,2655)"} true;
    $t6 := $ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t2);

    // if ($t6) goto L2 else goto L3 at pivot-tst/contract/sources/pivot_markets.move:73:17+42
    if ($t6) { goto L2; } else { goto L3; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:75:17+5
    assume {:print "$at(2,2721,2726)"} true;
L3:

    // $t7 := table::new<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>() on_abort goto L8 with $t3 at pivot-tst/contract/sources/pivot_markets.move:77:22+12
    assume {:print "$at(2,2804,2816)"} true;
    call $t7 := $1_table_new'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''();
    if ($abort_flag) {
        assume {:print "$at(2,2804,2816)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(101,0):", $t3} $t3 == $t3;
        goto L8;
    }

    // $t8 := 0 at pivot-tst/contract/sources/pivot_markets.move:78:22+1
    assume {:print "$at(2,2839,2840)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // $t9 := 50 at pivot-tst/contract/sources/pivot_markets.move:79:32+2
    assume {:print "$at(2,2873,2875)"} true;
    $t9 := 50;
    assume $IsValid'u64'($t9);

    // $t10 := 200 at pivot-tst/contract/sources/pivot_markets.move:80:26+3
    assume {:print "$at(2,2910,2913)"} true;
    $t10 := 200;
    assume $IsValid'u64'($t10);

    // $t11 := pack 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>($t2, $t7, $t8, $t9, $t10) at pivot-tst/contract/sources/pivot_markets.move:75:24+202
    assume {:print "$at(2,2728,2930)"} true;
    $t11 := $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'($t2, $t7, $t8, $t9, $t10);

    // move_to<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t11, $t0) on_abort goto L8 with $t3 at pivot-tst/contract/sources/pivot_markets.move:75:9+218
    if ($ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t0->$addr, $t11);
    }
    if ($abort_flag) {
        assume {:print "$at(2,2713,2931)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(101,0):", $t3} $t3 == $t3;
        goto L8;
    }

    // $t12 := coin::is_account_registered<#0>($t2) on_abort goto L8 with $t3 at pivot-tst/contract/sources/pivot_markets.move:84:14+49
    assume {:print "$at(2,3004,3053)"} true;
    call $t12 := $1_coin_is_account_registered'#0'($t2);
    if ($abort_flag) {
        assume {:print "$at(2,3004,3053)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(101,0):", $t3} $t3 == $t3;
        goto L8;
    }

    // if ($t12) goto L4 else goto L5 at pivot-tst/contract/sources/pivot_markets.move:84:13+50
    if ($t12) { goto L4; } else { goto L5; }

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:85:13+53
    assume {:print "$at(2,3069,3122)"} true;
L5:

    // assume Identical($t13, bcs::$to_bytes<address>($t2)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/account/account.spec.move:122:9+56
    assume {:print "$at(97,7171,7227)"} true;
    assume ($t13 == $1_bcs_$to_bytes'address'($t2));

    // account::create_account_if_does_not_exist($t2) on_abort goto L8 with $t3 at pivot-tst/contract/sources/pivot_markets.move:85:13+53
    assume {:print "$at(2,3069,3122)"} true;
    call $1_account_create_account_if_does_not_exist($t2);
    if ($abort_flag) {
        assume {:print "$at(2,3069,3122)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(101,0):", $t3} $t3 == $t3;
        goto L8;
    }

    // coin::register<#0>($t0) on_abort goto L8 with $t3 at pivot-tst/contract/sources/pivot_markets.move:86:13+31
    assume {:print "$at(2,3136,3167)"} true;
    call $1_coin_register'#0'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3136,3167)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(101,0):", $t3} $t3 == $t3;
        goto L8;
    }

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:70:59+727
    assume {:print "$at(2,2457,3184)"} true;
L6:

    // goto L7 at pivot-tst/contract/sources/pivot_markets.move:70:59+727
    assume {:print "$at(2,2457,3184)"} true;
    goto L7;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:84:9+179
    assume {:print "$at(2,2999,3178)"} true;
L4:

    // goto L6 at pivot-tst/contract/sources/pivot_markets.move:84:9+179
    assume {:print "$at(2,2999,3178)"} true;
    goto L6;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:73:9+6
    assume {:print "$at(2,2605,2611)"} true;
L2:

    // $t14 := 9 at pivot-tst/contract/sources/pivot_markets.move:73:83+21
    assume {:print "$at(2,2679,2700)"} true;
    $t14 := 9;
    assume $IsValid'u64'($t14);

    // $t15 := error::already_exists($t14) on_abort goto L8 with $t3 at pivot-tst/contract/sources/pivot_markets.move:73:61+44
    call $t15 := $1_error_already_exists($t14);
    if ($abort_flag) {
        assume {:print "$at(2,2657,2701)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(101,0):", $t3} $t3 == $t3;
        goto L8;
    }

    // trace_abort($t15) at pivot-tst/contract/sources/pivot_markets.move:73:9+6
    assume {:print "$at(2,2605,2611)"} true;
    assume {:print "$track_abort(101,0):", $t15} $t15 == $t15;

    // $t3 := move($t15) at pivot-tst/contract/sources/pivot_markets.move:73:9+6
    $t3 := $t15;

    // goto L8 at pivot-tst/contract/sources/pivot_markets.move:73:9+6
    goto L8;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:72:9+6
    assume {:print "$at(2,2519,2525)"} true;
L0:

    // $t16 := 0 at pivot-tst/contract/sources/pivot_markets.move:72:72+11
    assume {:print "$at(2,2582,2593)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t17 := error::permission_denied($t16) on_abort goto L8 with $t3 at pivot-tst/contract/sources/pivot_markets.move:72:47+37
    call $t17 := $1_error_permission_denied($t16);
    if ($abort_flag) {
        assume {:print "$at(2,2557,2594)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(101,0):", $t3} $t3 == $t3;
        goto L8;
    }

    // trace_abort($t17) at pivot-tst/contract/sources/pivot_markets.move:72:9+6
    assume {:print "$at(2,2519,2525)"} true;
    assume {:print "$track_abort(101,0):", $t17} $t17 == $t17;

    // $t3 := move($t17) at pivot-tst/contract/sources/pivot_markets.move:72:9+6
    $t3 := $t17;

    // goto L8 at pivot-tst/contract/sources/pivot_markets.move:72:9+6
    goto L8;

    // label L7 at pivot-tst/contract/sources/pivot_markets.move:88:5+1
    assume {:print "$at(2,3183,3184)"} true;
L7:

    // return () at pivot-tst/contract/sources/pivot_markets.move:88:5+1
    assume {:print "$at(2,3183,3184)"} true;
    return;

    // label L8 at pivot-tst/contract/sources/pivot_markets.move:88:5+1
L8:

    // abort($t3) at pivot-tst/contract/sources/pivot_markets.move:88:5+1
    assume {:print "$at(2,3183,3184)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun pivot_markets::add_liquidity [verification] at pivot-tst/contract/sources/pivot_markets.move:134:5+1134
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_add_liquidity$verify(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t4: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t5: $1_coin_Coin'#0';
    var $t6: int;
    var $t7: $Mutation (int);
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t12: int;
    var $t13: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t14: bool;
    var $t15: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'));
    var $t16: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t17: bool;
    var $t18: int;
    var $t19: $1_coin_CoinStore'#0';
    var $t20: int;
    var $t21: int;
    var $t22: $1_coin_CoinStore'#0';
    var $t23: int;
    var $t24: $1_coin_Coin'#0';
    var $t25: $Mutation ($1_coin_Coin'#0');
    var $t26: int;
    var $t27: Table int (int);
    var $t28: bool;
    var $t29: $Mutation (Table int (int));
    var $t30: int;
    var $t31: $Mutation (Table int (int));
    var $t32: $Mutation (int);
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: $Mutation (int);
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume {:print "$at(2,4717,4718)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume $IsValid'u64'($t2);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // trace_local[provider]($t0) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume {:print "$track_local(101,1,0):", $t0} $t0 == $t0;

    // trace_local[market_id]($t1) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume {:print "$track_local(101,1,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at pivot-tst/contract/sources/pivot_markets.move:134:5+1
    assume {:print "$track_local(101,1,2):", $t2} $t2 == $t2;

    // $t8 := 0 at pivot-tst/contract/sources/pivot_markets.move:139:26+1
    assume {:print "$at(2,4884,4885)"} true;
    $t8 := 0;
    assume $IsValid'u64'($t8);

    // $t9 := >($t2, $t8) at pivot-tst/contract/sources/pivot_markets.move:139:17+10
    call $t9 := $Gt($t2, $t8);

    // if ($t9) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:139:9+6
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:141:62+14
    assume {:print "$at(2,4997,5011)"} true;
L1:

    // $t10 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:141:62+14
    assume {:print "$at(2,4997,5011)"} true;
    $t10 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t10);

    // $t11 := borrow_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t10) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:141:21+56
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(2,4956,5012)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_local[store]($t11) at pivot-tst/contract/sources/pivot_markets.move:141:21+56
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' := $Dereference($t11);
    assume {:print "$track_local(101,1,3):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'';

    // $t13 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t11) at pivot-tst/contract/sources/pivot_markets.move:142:33+14
    assume {:print "$at(2,5046,5060)"} true;
    $t13 := $Dereference($t11)->$markets;

    // $t14 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t13, $t1) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:142:17+42
    call $t14 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,5030,5072)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // if ($t14) goto L3 else goto L2 at pivot-tst/contract/sources/pivot_markets.move:142:9+6
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:143:40+18
    assume {:print "$at(2,5152,5170)"} true;
L3:

    // $t15 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t11) at pivot-tst/contract/sources/pivot_markets.move:143:40+18
    assume {:print "$at(2,5152,5170)"} true;
    $t15 := $ChildMutation($t11, 1, $Dereference($t11)->$markets);

    // $t16 := table::borrow_mut<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t15, $t1) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:143:22+48
    call $t16,$t15 := $1_table_borrow_mut'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,5134,5182)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_local[market]($t16) at pivot-tst/contract/sources/pivot_markets.move:143:22+48
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' := $Dereference($t16);
    assume {:print "$track_local(101,1,4):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'';

    // $t17 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.resolved($t16) at pivot-tst/contract/sources/pivot_markets.move:145:18+15
    assume {:print "$at(2,5202,5217)"} true;
    $t17 := $Dereference($t16)->$resolved;

    // if ($t17) goto L11 else goto L5 at pivot-tst/contract/sources/pivot_markets.move:145:17+16
    if ($t17) { goto L11; } else { goto L5; }

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:147:46+8
    assume {:print "$at(2,5307,5315)"} true;
L5:

    // assume Identical($t18, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:525:9+47
    assume {:print "$at(131,22469,22516)"} true;
    assume ($t18 == $1_signer_$address_of($t0));

    // assume Identical($t19, global<0x1::coin::CoinStore<#0>>($t18)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:526:9+59
    assume {:print "$at(131,22525,22584)"} true;
    assume ($t19 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t18));

    // assume Identical($t20, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t19))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:527:9+36
    assume {:print "$at(131,22593,22629)"} true;
    assume ($t20 == $t19->$coin->$value);

    // assume Identical($t21, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:535:9+47
    assume {:print "$at(131,22926,22973)"} true;
    assume ($t21 == $1_signer_$address_of($t0));

    // assume Identical($t22, global<0x1::coin::CoinStore<#0>>($t21)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:536:9+59
    assume {:print "$at(131,22982,23041)"} true;
    assume ($t22 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t21));

    // assume Identical($t23, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t22))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:537:9+36
    assume {:print "$at(131,23050,23086)"} true;
    assume ($t23 == $t22->$coin->$value);

    // $t24 := coin::withdraw<#0>($t0, $t2) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:147:21+42
    assume {:print "$at(2,5282,5324)"} true;
    call $t24 := $1_coin_withdraw'#0'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,5282,5324)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_local[coins]($t24) at pivot-tst/contract/sources/pivot_markets.move:147:21+42
    assume {:print "$track_local(101,1,5):", $t24} $t24 == $t24;

    // $t25 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t16) at pivot-tst/contract/sources/pivot_markets.move:148:21+26
    assume {:print "$at(2,5346,5372)"} true;
    $t25 := $ChildMutation($t16, 5, $Dereference($t16)->$liquidity_pool);

    // coin::merge<#0>($t25, $t24) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:148:9+46
    call $t25 := $1_coin_merge'#0'($t25, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,5334,5380)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // write_back[Reference($t16).liquidity_pool (0x1::coin::Coin<#0>)]($t25) at pivot-tst/contract/sources/pivot_markets.move:148:9+46
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_pool($Dereference($t16), $Dereference($t25)));

    // $t26 := signer::address_of($t0) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:150:29+28
    assume {:print "$at(2,5419,5447)"} true;
    call $t26 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,5419,5447)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_local[$t9]($t26) at pivot-tst/contract/sources/pivot_markets.move:150:29+28
    assume {:print "$track_local(101,1,6):", $t26} $t26 == $t26;

    // $t27 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_providers($t16) at pivot-tst/contract/sources/pivot_markets.move:151:30+27
    assume {:print "$at(2,5478,5505)"} true;
    $t27 := $Dereference($t16)->$liquidity_providers;

    // $t28 := table::contains<address, u64>($t27, $t26) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:151:14+59
    call $t28 := $1_table_contains'address_u64'($t27, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,5462,5521)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // if ($t28) goto L7 else goto L6 at pivot-tst/contract/sources/pivot_markets.move:151:13+60
    if ($t28) { goto L7; } else { goto L6; }

    // label L7 at pivot-tst/contract/sources/pivot_markets.move:151:9+152
L7:

    // goto L8 at pivot-tst/contract/sources/pivot_markets.move:151:9+152
    assume {:print "$at(2,5457,5609)"} true;
    goto L8;

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:152:24+31
    assume {:print "$at(2,5548,5579)"} true;
L6:

    // $t29 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_providers($t16) at pivot-tst/contract/sources/pivot_markets.move:152:24+31
    assume {:print "$at(2,5548,5579)"} true;
    $t29 := $ChildMutation($t16, 14, $Dereference($t16)->$liquidity_providers);

    // $t30 := 0 at pivot-tst/contract/sources/pivot_markets.move:152:72+1
    $t30 := 0;
    assume $IsValid'u64'($t30);

    // table::add<address, u64>($t29, $t26, $t30) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:152:13+61
    call $t29 := $1_table_add'address_u64'($t29, $t26, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,5537,5598)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // write_back[Reference($t16).liquidity_providers (0x1::table::Table<address, u64>)]($t29) at pivot-tst/contract/sources/pivot_markets.move:152:13+61
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_providers($Dereference($t16), $Dereference($t29)));

    // label L8 at pivot-tst/contract/sources/pivot_markets.move:154:52+31
    assume {:print "$at(2,5662,5693)"} true;
L8:

    // $t31 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_providers($t16) at pivot-tst/contract/sources/pivot_markets.move:154:52+31
    assume {:print "$at(2,5662,5693)"} true;
    $t31 := $ChildMutation($t16, 14, $Dereference($t16)->$liquidity_providers);

    // $t32 := table::borrow_mut<address, u64>($t31, $t26) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:154:34+65
    call $t32,$t31 := $1_table_borrow_mut'address_u64'($t31, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,5644,5709)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_local[provider_liquidity]($t32) at pivot-tst/contract/sources/pivot_markets.move:154:34+65
    $temp_0'u64' := $Dereference($t32);
    assume {:print "$track_local(101,1,7):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t33 := read_ref($t32) at pivot-tst/contract/sources/pivot_markets.move:155:31+19
    assume {:print "$at(2,5741,5760)"} true;
    $t33 := $Dereference($t32);

    // $t34 := +($t33, $t2) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:155:31+28
    call $t34 := $AddU64($t33, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,5741,5769)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // write_ref($t32, $t34) at pivot-tst/contract/sources/pivot_markets.move:155:9+50
    $t32 := $UpdateMutation($t32, $t34);

    // write_back[Reference($t31)[]]($t32) at pivot-tst/contract/sources/pivot_markets.move:155:9+50
    $t31 := $UpdateMutation($t31, UpdateTable($Dereference($t31), ReadVec($t32->p, LenVec($t31->p)), $Dereference($t32)));

    // write_back[Reference($t16).liquidity_providers (0x1::table::Table<address, u64>)]($t31) at pivot-tst/contract/sources/pivot_markets.move:155:9+50
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_providers($Dereference($t16), $Dereference($t31)));

    // $t35 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_liquidity($t16) at pivot-tst/contract/sources/pivot_markets.move:157:34+22
    assume {:print "$at(2,5813,5835)"} true;
    $t35 := $Dereference($t16)->$total_liquidity;

    // $t36 := +($t35, $t2) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:157:34+31
    call $t36 := $AddU64($t35, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,5813,5844)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // $t37 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_liquidity($t16) at pivot-tst/contract/sources/pivot_markets.move:157:9+22
    $t37 := $ChildMutation($t16, 15, $Dereference($t16)->$total_liquidity);

    // write_ref($t37, $t36) at pivot-tst/contract/sources/pivot_markets.move:157:9+56
    $t37 := $UpdateMutation($t37, $t36);

    // write_back[Reference($t16).total_liquidity (u64)]($t37) at pivot-tst/contract/sources/pivot_markets.move:157:9+56
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_total_liquidity($Dereference($t16), $Dereference($t37)));

    // write_back[Reference($t15)[]]($t16) at pivot-tst/contract/sources/pivot_markets.move:157:9+56
    $t15 := $UpdateMutation($t15, UpdateTable($Dereference($t15), ReadVec($t16->p, LenVec($t15->p)), $Dereference($t16)));

    // write_back[Reference($t11).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t15) at pivot-tst/contract/sources/pivot_markets.move:157:9+56
    $t11 := $UpdateMutation($t11, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t11), $Dereference($t15)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t11) at pivot-tst/contract/sources/pivot_markets.move:157:9+56
    assume {:print "$at(2,5788,5844)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // goto L9 at pivot-tst/contract/sources/pivot_markets.move:138:28+994
    assume {:print "$at(2,4857,5851)"} true;
    goto L9;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:145:9+6
    assume {:print "$at(2,5193,5199)"} true;
L4:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t16) at pivot-tst/contract/sources/pivot_markets.move:145:9+6
    assume {:print "$at(2,5193,5199)"} true;

    // $t38 := 3 at pivot-tst/contract/sources/pivot_markets.move:145:56+17
    $t38 := 3;
    assume $IsValid'u64'($t38);

    // $t39 := error::invalid_state($t38) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:145:35+39
    call $t39 := $1_error_invalid_state($t38);
    if ($abort_flag) {
        assume {:print "$at(2,5219,5258)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_abort($t39) at pivot-tst/contract/sources/pivot_markets.move:145:9+6
    assume {:print "$at(2,5193,5199)"} true;
    assume {:print "$track_abort(101,1):", $t39} $t39 == $t39;

    // $t12 := move($t39) at pivot-tst/contract/sources/pivot_markets.move:145:9+6
    $t12 := $t39;

    // goto L10 at pivot-tst/contract/sources/pivot_markets.move:145:9+6
    goto L10;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:142:9+6
    assume {:print "$at(2,5022,5028)"} true;
L2:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t11) at pivot-tst/contract/sources/pivot_markets.move:142:9+6
    assume {:print "$at(2,5022,5028)"} true;

    // $t40 := 8 at pivot-tst/contract/sources/pivot_markets.move:142:78+18
    $t40 := 8;
    assume $IsValid'u64'($t40);

    // $t41 := error::not_found($t40) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:142:61+36
    call $t41 := $1_error_not_found($t40);
    if ($abort_flag) {
        assume {:print "$at(2,5074,5110)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_abort($t41) at pivot-tst/contract/sources/pivot_markets.move:142:9+6
    assume {:print "$at(2,5022,5028)"} true;
    assume {:print "$track_abort(101,1):", $t41} $t41 == $t41;

    // $t12 := move($t41) at pivot-tst/contract/sources/pivot_markets.move:142:9+6
    $t12 := $t41;

    // goto L10 at pivot-tst/contract/sources/pivot_markets.move:142:9+6
    goto L10;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:139:9+6
    assume {:print "$at(2,4867,4873)"} true;
L0:

    // $t42 := 7 at pivot-tst/contract/sources/pivot_markets.move:139:53+20
    assume {:print "$at(2,4911,4931)"} true;
    $t42 := 7;
    assume $IsValid'u64'($t42);

    // $t43 := error::invalid_argument($t42) on_abort goto L10 with $t12 at pivot-tst/contract/sources/pivot_markets.move:139:29+45
    call $t43 := $1_error_invalid_argument($t42);
    if ($abort_flag) {
        assume {:print "$at(2,4887,4932)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,1):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_abort($t43) at pivot-tst/contract/sources/pivot_markets.move:139:9+6
    assume {:print "$at(2,4867,4873)"} true;
    assume {:print "$track_abort(101,1):", $t43} $t43 == $t43;

    // $t12 := move($t43) at pivot-tst/contract/sources/pivot_markets.move:139:9+6
    $t12 := $t43;

    // goto L10 at pivot-tst/contract/sources/pivot_markets.move:139:9+6
    goto L10;

    // label L9 at pivot-tst/contract/sources/pivot_markets.move:158:5+1
    assume {:print "$at(2,5850,5851)"} true;
L9:

    // return () at pivot-tst/contract/sources/pivot_markets.move:158:5+1
    assume {:print "$at(2,5850,5851)"} true;
    return;

    // label L10 at pivot-tst/contract/sources/pivot_markets.move:158:5+1
L10:

    // abort($t12) at pivot-tst/contract/sources/pivot_markets.move:158:5+1
    assume {:print "$at(2,5850,5851)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

    // label L11 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L11:

    // drop($t15) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L4 at <internal>:1:1+10
    goto L4;

}

// fun pivot_markets::buy_position [verification] at pivot-tst/contract/sources/pivot_markets.move:177:5+2707
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_buy_position$verify(_$t0: $signer, _$t1: int, _$t2: int, _$t3: int, _$t4: int) returns ()
{
    // declare local variables
    var $t5: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t6: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $1_coin_Coin'#0';
    var $t15: int;
    var $t16: int;
    var $t17: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t22: int;
    var $t23: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t24: bool;
    var $t25: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'));
    var $t26: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t27: bool;
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: int;
    var $t32: bool;
    var $t33: bool;
    var $t34: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t44: bool;
    var $t45: int;
    var $t46: int;
    var $t47: int;
    var $t48: int;
    var $t49: int;
    var $t50: bool;
    var $t51: int;
    var $t52: bool;
    var $t53: int;
    var $t54: $1_coin_CoinStore'#0';
    var $t55: int;
    var $t56: int;
    var $t57: $1_coin_CoinStore'#0';
    var $t58: int;
    var $t59: $1_coin_Coin'#0';
    var $t60: int;
    var $t61: int;
    var $t62: int;
    var $t63: int;
    var $t64: $Mutation (int);
    var $t65: int;
    var $t66: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $t67: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position));
    var $t68: Table int (Vec (int));
    var $t69: bool;
    var $t70: $Mutation (Table int (Vec (int)));
    var $t71: Vec (int);
    var $t72: int;
    var $t73: int;
    var $t74: int;
    var $t75: $Mutation (int);
    var $t76: $Mutation (Table int (Vec (int)));
    var $t77: $Mutation (Vec (int));
    var $t78: int;
    var $t79: bool;
    var $t80: int;
    var $t81: int;
    var $t82: $Mutation (int);
    var $t83: $Mutation ($1_coin_Coin'#0');
    var $t84: int;
    var $t85: int;
    var $t86: $Mutation (int);
    var $t87: $Mutation ($1_coin_Coin'#0');
    var $t88: int;
    var $t89: int;
    var $t90: int;
    var $t91: int;
    var $t92: int;
    var $t93: int;
    var $t94: int;
    var $t95: int;
    var $t96: bool;
    var $t97: int;
    var $t98: int;
    var $t99: int;
    var $t100: int;
    var $t101: int;
    var $t102: int;
    var $t103: int;
    var $t104: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume {:print "$at(2,6520,6521)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume $IsValid'u8'($t2);

    // assume WellFormed($t3) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume $IsValid'u64'($t3);

    // assume WellFormed($t4) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume $IsValid'u64'($t4);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::timestamp::CurrentTimeMicroseconds: ResourceDomain<0x1::timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::reconfiguration::Configuration: ResourceDomain<0x1::reconfiguration::Configuration>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::timestamp::CurrentTimeMicroseconds>(0x1)) at pivot-tst/contract/sources/pivot_markets.move:177:5+2707
    // global invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.spec.move:36:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at pivot-tst/contract/sources/pivot_markets.move:177:5+2707
    // global invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.spec.move:51:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[user]($t0) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume {:print "$track_local(101,2,0):", $t0} $t0 == $t0;

    // trace_local[market_id]($t1) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume {:print "$track_local(101,2,1):", $t1} $t1 == $t1;

    // trace_local[outcome]($t2) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume {:print "$track_local(101,2,2):", $t2} $t2 == $t2;

    // trace_local[amount]($t3) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume {:print "$track_local(101,2,3):", $t3} $t3 == $t3;

    // trace_local[max_slippage]($t4) at pivot-tst/contract/sources/pivot_markets.move:177:5+1
    assume {:print "$track_local(101,2,4):", $t4} $t4 == $t4;

    // $t18 := 0 at pivot-tst/contract/sources/pivot_markets.move:184:26+1
    assume {:print "$at(2,6746,6747)"} true;
    $t18 := 0;
    assume $IsValid'u64'($t18);

    // $t19 := >($t3, $t18) at pivot-tst/contract/sources/pivot_markets.move:184:17+10
    call $t19 := $Gt($t3, $t18);

    // if ($t19) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:184:9+6
    if ($t19) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:186:62+14
    assume {:print "$at(2,6859,6873)"} true;
L1:

    // $t20 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:186:62+14
    assume {:print "$at(2,6859,6873)"} true;
    $t20 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t20);

    // $t21 := borrow_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t20) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:186:21+56
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t20)) {
        call $ExecFailureAbort();
    } else {
        $t21 := $Mutation($Global($t20), EmptyVec(), $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t20));
    }
    if ($abort_flag) {
        assume {:print "$at(2,6818,6874)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_local[store]($t21) at pivot-tst/contract/sources/pivot_markets.move:186:21+56
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' := $Dereference($t21);
    assume {:print "$track_local(101,2,5):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'';

    // $t23 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t21) at pivot-tst/contract/sources/pivot_markets.move:187:33+14
    assume {:print "$at(2,6908,6922)"} true;
    $t23 := $Dereference($t21)->$markets;

    // $t24 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t23, $t1) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:187:17+42
    call $t24 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t23, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,6892,6934)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // if ($t24) goto L3 else goto L2 at pivot-tst/contract/sources/pivot_markets.move:187:9+6
    if ($t24) { goto L3; } else { goto L2; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:188:40+18
    assume {:print "$at(2,7014,7032)"} true;
L3:

    // $t25 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t21) at pivot-tst/contract/sources/pivot_markets.move:188:40+18
    assume {:print "$at(2,7014,7032)"} true;
    $t25 := $ChildMutation($t21, 1, $Dereference($t21)->$markets);

    // $t26 := table::borrow_mut<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t25, $t1) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:188:22+48
    call $t26,$t25 := $1_table_borrow_mut'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t25, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,6996,7044)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_local[market]($t26) at pivot-tst/contract/sources/pivot_markets.move:188:22+48
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' := $Dereference($t26);
    assume {:print "$track_local(101,2,6):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'';

    // $t27 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.resolved($t26) at pivot-tst/contract/sources/pivot_markets.move:190:18+15
    assume {:print "$at(2,7064,7079)"} true;
    $t27 := $Dereference($t26)->$resolved;

    // if ($t27) goto L29 else goto L5 at pivot-tst/contract/sources/pivot_markets.move:190:17+16
    if ($t27) { goto L29; } else { goto L5; }

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:191:17+24
    assume {:print "$at(2,7139,7163)"} true;
L5:

    // $t28 := timestamp::now_seconds() on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:191:17+24
    assume {:print "$at(2,7139,7163)"} true;
    call $t28 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,7139,7163)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t29 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.end_time($t26) at pivot-tst/contract/sources/pivot_markets.move:191:44+15
    $t29 := $Dereference($t26)->$end_time;

    // $t30 := <($t28, $t29) at pivot-tst/contract/sources/pivot_markets.move:191:17+42
    call $t30 := $Lt($t28, $t29);

    // if ($t30) goto L7 else goto L30 at pivot-tst/contract/sources/pivot_markets.move:191:9+6
    if ($t30) { goto L7; } else { goto L30; }

    // label L7 at pivot-tst/contract/sources/pivot_markets.move:192:17+7
    assume {:print "$at(2,7238,7245)"} true;
L7:

    // $t31 := 1 at pivot-tst/contract/sources/pivot_markets.move:192:28+1
    assume {:print "$at(2,7249,7250)"} true;
    $t31 := 1;
    assume $IsValid'u8'($t31);

    // $t32 := ==($t2, $t31) at pivot-tst/contract/sources/pivot_markets.move:192:17+12
    $t32 := $IsEqual'u8'($t2, $t31);

    // if ($t32) goto L9 else goto L8 at pivot-tst/contract/sources/pivot_markets.move:192:17+28
    if ($t32) { goto L9; } else { goto L8; }

    // label L9 at pivot-tst/contract/sources/pivot_markets.move:192:17+28
L9:

    // $t33 := true at pivot-tst/contract/sources/pivot_markets.move:192:17+28
    assume {:print "$at(2,7238,7266)"} true;
    $t33 := true;
    assume $IsValid'bool'($t33);

    // $t7 := $t33 at pivot-tst/contract/sources/pivot_markets.move:192:17+28
    $t7 := $t33;

    // trace_local[$t5]($t33) at pivot-tst/contract/sources/pivot_markets.move:192:17+28
    assume {:print "$track_local(101,2,7):", $t33} $t33 == $t33;

    // label L26 at pivot-tst/contract/sources/pivot_markets.move:192:9+6
L26:

    // if ($t7) goto L11 else goto L31 at pivot-tst/contract/sources/pivot_markets.move:192:9+6
    assume {:print "$at(2,7230,7236)"} true;
    if ($t7) { goto L11; } else { goto L31; }

    // label L11 at pivot-tst/contract/sources/pivot_markets.move:194:45+6
    assume {:print "$at(2,7358,7364)"} true;
L11:

    // $t34 := read_ref($t26) at pivot-tst/contract/sources/pivot_markets.move:194:45+6
    assume {:print "$at(2,7358,7364)"} true;
    $t34 := $Dereference($t26);

    // $t35 := pivot_markets::calculate_price<#0>($t34, $t2) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:194:29+32
    call $t35 := $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_calculate_price'#0'($t34, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,7342,7374)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_local[$t6]($t35) at pivot-tst/contract/sources/pivot_markets.move:194:29+32
    assume {:print "$track_local(101,2,8):", $t35} $t35 == $t35;

    // $t36 := 10000 at pivot-tst/contract/sources/pivot_markets.move:195:32+5
    assume {:print "$at(2,7407,7412)"} true;
    $t36 := 10000;
    assume $IsValid'u64'($t36);

    // $t37 := *($t3, $t36) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:195:22+16
    call $t37 := $MulU64($t3, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,7397,7413)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t38 := /($t37, $t35) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:195:22+32
    call $t38 := $Div($t37, $t35);
    if ($abort_flag) {
        assume {:print "$at(2,7397,7429)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_local[$t7]($t38) at pivot-tst/contract/sources/pivot_markets.move:195:22+32
    assume {:print "$track_local(101,2,9):", $t38} $t38 == $t38;

    // $t39 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t26) at pivot-tst/contract/sources/pivot_markets.move:198:32+23
    assume {:print "$at(2,7497,7520)"} true;
    $t39 := $Dereference($t26)->$total_yes_shares;

    // $t40 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t26) at pivot-tst/contract/sources/pivot_markets.move:198:58+22
    $t40 := $Dereference($t26)->$total_no_shares;

    // $t41 := +($t39, $t40) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:198:32+48
    call $t41 := $AddU64($t39, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,7497,7545)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t42 := +($t41, $t38) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:198:32+57
    call $t42 := $AddU64($t41, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,7497,7554)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_local[$t42]($t42) at pivot-tst/contract/sources/pivot_markets.move:198:32+57
    assume {:print "$track_local(101,2,10):", $t42} $t42 == $t42;

    // $t43 := 1 at pivot-tst/contract/sources/pivot_markets.move:199:49+1
    assume {:print "$at(2,7604,7605)"} true;
    $t43 := 1;
    assume $IsValid'u8'($t43);

    // $t44 := ==($t2, $t43) at pivot-tst/contract/sources/pivot_markets.move:199:38+12
    $t44 := $IsEqual'u8'($t2, $t43);

    // if ($t44) goto L13 else goto L12 at pivot-tst/contract/sources/pivot_markets.move:199:34+87
    if ($t44) { goto L13; } else { goto L12; }

    // label L13 at pivot-tst/contract/sources/pivot_markets.move:199:52+23
L13:

    // $t45 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t26) at pivot-tst/contract/sources/pivot_markets.move:199:52+23
    assume {:print "$at(2,7607,7630)"} true;
    $t45 := $Dereference($t26)->$total_yes_shares;

    // $t46 := +($t45, $t38) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:199:52+32
    call $t46 := $AddU64($t45, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,7607,7639)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t11 := $t46 at pivot-tst/contract/sources/pivot_markets.move:199:52+32
    $t11 := $t46;

    // trace_local[$t47]($t46) at pivot-tst/contract/sources/pivot_markets.move:199:52+32
    assume {:print "$track_local(101,2,11):", $t46} $t46 == $t46;

    // label L25 at pivot-tst/contract/sources/pivot_markets.move:200:26+18
    assume {:print "$at(2,7703,7721)"} true;
L25:

    // $t47 := 10000 at pivot-tst/contract/sources/pivot_markets.move:200:47+5
    assume {:print "$at(2,7724,7729)"} true;
    $t47 := 10000;
    assume $IsValid'u64'($t47);

    // $t48 := *($t11, $t47) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:200:25+28
    call $t48 := $MulU64($t11, $t47);
    if ($abort_flag) {
        assume {:print "$at(2,7702,7730)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t49 := /($t48, $t42) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:200:25+47
    call $t49 := $Div($t48, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,7702,7749)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_local[$t59]($t49) at pivot-tst/contract/sources/pivot_markets.move:200:25+47
    assume {:print "$track_local(101,2,12):", $t49} $t49 == $t49;

    // $t50 := >($t49, $t35) at pivot-tst/contract/sources/pivot_markets.move:201:32+25
    assume {:print "$at(2,7782,7807)"} true;
    call $t50 := $Gt($t49, $t35);

    // if ($t50) goto L15 else goto L14 at pivot-tst/contract/sources/pivot_markets.move:201:28+87
    if ($t50) { goto L15; } else { goto L14; }

    // label L15 at pivot-tst/contract/sources/pivot_markets.move:201:59+9
L15:

    // $t51 := -($t49, $t35) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:201:59+25
    assume {:print "$at(2,7809,7834)"} true;
    call $t51 := $Sub($t49, $t35);
    if ($abort_flag) {
        assume {:print "$at(2,7809,7834)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t13 := $t51 at pivot-tst/contract/sources/pivot_markets.move:201:59+25
    $t13 := $t51;

    // trace_local[$t60]($t51) at pivot-tst/contract/sources/pivot_markets.move:201:59+25
    assume {:print "$track_local(101,2,13):", $t51} $t51 == $t51;

    // label L24 at pivot-tst/contract/sources/pivot_markets.move:202:17+12
    assume {:print "$at(2,7883,7895)"} true;
L24:

    // $t52 := <=($t13, $t4) at pivot-tst/contract/sources/pivot_markets.move:202:17+28
    assume {:print "$at(2,7883,7911)"} true;
    call $t52 := $Le($t13, $t4);

    // if ($t52) goto L17 else goto L32 at pivot-tst/contract/sources/pivot_markets.move:202:9+6
    if ($t52) { goto L17; } else { goto L32; }

    // label L17 at pivot-tst/contract/sources/pivot_markets.move:204:46+4
    assume {:print "$at(2,8006,8010)"} true;
L17:

    // assume Identical($t53, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:525:9+47
    assume {:print "$at(131,22469,22516)"} true;
    assume ($t53 == $1_signer_$address_of($t0));

    // assume Identical($t54, global<0x1::coin::CoinStore<#0>>($t53)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:526:9+59
    assume {:print "$at(131,22525,22584)"} true;
    assume ($t54 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t53));

    // assume Identical($t55, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t54))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:527:9+36
    assume {:print "$at(131,22593,22629)"} true;
    assume ($t55 == $t54->$coin->$value);

    // assume Identical($t56, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:535:9+47
    assume {:print "$at(131,22926,22973)"} true;
    assume ($t56 == $1_signer_$address_of($t0));

    // assume Identical($t57, global<0x1::coin::CoinStore<#0>>($t56)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:536:9+59
    assume {:print "$at(131,22982,23041)"} true;
    assume ($t57 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t56));

    // assume Identical($t58, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t57))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:537:9+36
    assume {:print "$at(131,23050,23086)"} true;
    assume ($t58 == $t57->$coin->$value);

    // $t59 := coin::withdraw<#0>($t0, $t3) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:204:21+38
    assume {:print "$at(2,7981,8019)"} true;
    call $t59 := $1_coin_withdraw'#0'($t0, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,7981,8019)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_local[coins]($t59) at pivot-tst/contract/sources/pivot_markets.move:204:21+38
    assume {:print "$track_local(101,2,14):", $t59} $t59 == $t59;

    // $t60 := signer::address_of($t0) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:205:25+24
    assume {:print "$at(2,8045,8069)"} true;
    call $t60 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,8045,8069)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_local[$t11]($t60) at pivot-tst/contract/sources/pivot_markets.move:205:25+24
    assume {:print "$track_local(101,2,15):", $t60} $t60 == $t60;

    // $t61 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.next_position_id($t26) at pivot-tst/contract/sources/pivot_markets.move:208:27+23
    assume {:print "$at(2,8125,8148)"} true;
    $t61 := $Dereference($t26)->$next_position_id;

    // trace_local[$t67]($t61) at pivot-tst/contract/sources/pivot_markets.move:208:27+23
    assume {:print "$track_local(101,2,16):", $t61} $t61 == $t61;

    // $t62 := 1 at pivot-tst/contract/sources/pivot_markets.move:209:49+1
    assume {:print "$at(2,8198,8199)"} true;
    $t62 := 1;
    assume $IsValid'u64'($t62);

    // $t63 := +($t61, $t62) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:209:35+15
    call $t63 := $AddU64($t61, $t62);
    if ($abort_flag) {
        assume {:print "$at(2,8184,8199)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t64 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.next_position_id($t26) at pivot-tst/contract/sources/pivot_markets.move:209:9+23
    $t64 := $ChildMutation($t26, 8, $Dereference($t26)->$next_position_id);

    // write_ref($t64, $t63) at pivot-tst/contract/sources/pivot_markets.move:209:9+41
    $t64 := $UpdateMutation($t64, $t63);

    // write_back[Reference($t26).next_position_id (u64)]($t64) at pivot-tst/contract/sources/pivot_markets.move:209:9+41
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_next_position_id($Dereference($t26), $Dereference($t64)));

    // $t65 := timestamp::now_seconds() on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:216:24+24
    assume {:print "$at(2,8367,8391)"} true;
    call $t65 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,8367,8391)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t66 := pack 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position($t60, $t2, $t38, $t35, $t65) at pivot-tst/contract/sources/pivot_markets.move:211:24+177
    assume {:print "$at(2,8225,8402)"} true;
    $t66 := $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position($t60, $t2, $t38, $t35, $t65);

    // trace_local[position]($t66) at pivot-tst/contract/sources/pivot_markets.move:211:24+177
    assume {:print "$track_local(101,2,17):", $t66} $t66 == $t66;

    // $t67 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t26) at pivot-tst/contract/sources/pivot_markets.move:219:20+21
    assume {:print "$at(2,8424,8445)"} true;
    $t67 := $ChildMutation($t26, 6, $Dereference($t26)->$positions);

    // table::add<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t67, $t61, $t66) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:219:9+56
    call $t67 := $1_table_add'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t67, $t61, $t66);
    if ($abort_flag) {
        assume {:print "$at(2,8413,8469)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // write_back[Reference($t26).positions (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>)]($t67) at pivot-tst/contract/sources/pivot_markets.move:219:9+56
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_positions($Dereference($t26), $Dereference($t67)));

    // $t68 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.user_positions($t26) at pivot-tst/contract/sources/pivot_markets.move:222:30+22
    assume {:print "$at(2,8533,8555)"} true;
    $t68 := $Dereference($t26)->$user_positions;

    // $t69 := table::contains<address, vector<u64>>($t68, $t60) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:222:14+50
    call $t69 := $1_table_contains'address_vec'u64''($t68, $t60);
    if ($abort_flag) {
        assume {:print "$at(2,8517,8567)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // if ($t69) goto L19 else goto L18 at pivot-tst/contract/sources/pivot_markets.move:222:13+51
    if ($t69) { goto L19; } else { goto L18; }

    // label L19 at pivot-tst/contract/sources/pivot_markets.move:222:9+222
L19:

    // goto L20 at pivot-tst/contract/sources/pivot_markets.move:222:9+222
    assume {:print "$at(2,8512,8734)"} true;
    goto L20;

    // label L18 at pivot-tst/contract/sources/pivot_markets.move:223:24+26
    assume {:print "$at(2,8594,8620)"} true;
L18:

    // $t70 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.user_positions($t26) at pivot-tst/contract/sources/pivot_markets.move:223:24+26
    assume {:print "$at(2,8594,8620)"} true;
    $t70 := $ChildMutation($t26, 7, $Dereference($t26)->$user_positions);

    // $t71 := vector::empty<u64>() on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:223:63+20
    call $t71 := $1_vector_empty'u64'();
    if ($abort_flag) {
        assume {:print "$at(2,8633,8653)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // table::add<address, vector<u64>>($t70, $t60, $t71) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:223:13+71
    call $t70 := $1_table_add'address_vec'u64''($t70, $t60, $t71);
    if ($abort_flag) {
        assume {:print "$at(2,8583,8654)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // write_back[Reference($t26).user_positions (0x1::table::Table<address, vector<u64>>)]($t70) at pivot-tst/contract/sources/pivot_markets.move:223:13+71
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_user_positions($Dereference($t26), $Dereference($t70)));

    // $t72 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.participant_count($t26) at pivot-tst/contract/sources/pivot_markets.move:224:40+24
    assume {:print "$at(2,8695,8719)"} true;
    $t72 := $Dereference($t26)->$participant_count;

    // $t73 := 1 at pivot-tst/contract/sources/pivot_markets.move:224:67+1
    $t73 := 1;
    assume $IsValid'u64'($t73);

    // $t74 := +($t72, $t73) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:224:40+28
    call $t74 := $AddU64($t72, $t73);
    if ($abort_flag) {
        assume {:print "$at(2,8695,8723)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t75 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.participant_count($t26) at pivot-tst/contract/sources/pivot_markets.move:224:13+24
    $t75 := $ChildMutation($t26, 16, $Dereference($t26)->$participant_count);

    // write_ref($t75, $t74) at pivot-tst/contract/sources/pivot_markets.move:224:13+55
    $t75 := $UpdateMutation($t75, $t74);

    // write_back[Reference($t26).participant_count (u64)]($t75) at pivot-tst/contract/sources/pivot_markets.move:224:13+55
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_participant_count($Dereference($t26), $Dereference($t75)));

    // label L20 at pivot-tst/contract/sources/pivot_markets.move:226:51+26
    assume {:print "$at(2,8786,8812)"} true;
L20:

    // $t76 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.user_positions($t26) at pivot-tst/contract/sources/pivot_markets.move:226:51+26
    assume {:print "$at(2,8786,8812)"} true;
    $t76 := $ChildMutation($t26, 7, $Dereference($t26)->$user_positions);

    // $t77 := table::borrow_mut<address, vector<u64>>($t76, $t60) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:226:33+56
    call $t77,$t76 := $1_table_borrow_mut'address_vec'u64''($t76, $t60);
    if ($abort_flag) {
        assume {:print "$at(2,8768,8824)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // vector::push_back<u64>($t77, $t61) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:227:9+49
    assume {:print "$at(2,8834,8883)"} true;
    call $t77 := $1_vector_push_back'u64'($t77, $t61);
    if ($abort_flag) {
        assume {:print "$at(2,8834,8883)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // write_back[Reference($t76)[]]($t77) at pivot-tst/contract/sources/pivot_markets.move:227:9+49
    $t76 := $UpdateMutation($t76, UpdateTable($Dereference($t76), ReadVec($t77->p, LenVec($t76->p)), $Dereference($t77)));

    // write_back[Reference($t26).user_positions (0x1::table::Table<address, vector<u64>>)]($t76) at pivot-tst/contract/sources/pivot_markets.move:227:9+49
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_user_positions($Dereference($t26), $Dereference($t76)));

    // $t78 := 1 at pivot-tst/contract/sources/pivot_markets.move:230:24+1
    assume {:print "$at(2,8940,8941)"} true;
    $t78 := 1;
    assume $IsValid'u8'($t78);

    // $t79 := ==($t2, $t78) at pivot-tst/contract/sources/pivot_markets.move:230:13+12
    $t79 := $IsEqual'u8'($t2, $t78);

    // if ($t79) goto L22 else goto L21 at pivot-tst/contract/sources/pivot_markets.move:230:9+295
    if ($t79) { goto L22; } else { goto L21; }

    // label L22 at pivot-tst/contract/sources/pivot_markets.move:231:39+23
    assume {:print "$at(2,8983,9006)"} true;
L22:

    // $t80 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t26) at pivot-tst/contract/sources/pivot_markets.move:231:39+23
    assume {:print "$at(2,8983,9006)"} true;
    $t80 := $Dereference($t26)->$total_yes_shares;

    // $t81 := +($t80, $t38) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:231:39+32
    call $t81 := $AddU64($t80, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,8983,9015)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t82 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t26) at pivot-tst/contract/sources/pivot_markets.move:231:13+23
    $t82 := $ChildMutation($t26, 12, $Dereference($t26)->$total_yes_shares);

    // write_ref($t82, $t81) at pivot-tst/contract/sources/pivot_markets.move:231:13+58
    $t82 := $UpdateMutation($t82, $t81);

    // write_back[Reference($t26).total_yes_shares (u64)]($t82) at pivot-tst/contract/sources/pivot_markets.move:231:13+58
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_total_yes_shares($Dereference($t26), $Dereference($t82)));

    // $t83 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.yes_pool($t26) at pivot-tst/contract/sources/pivot_markets.move:232:25+20
    assume {:print "$at(2,9041,9061)"} true;
    $t83 := $ChildMutation($t26, 3, $Dereference($t26)->$yes_pool);

    // coin::merge<#0>($t83, $t59) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:232:13+40
    call $t83 := $1_coin_merge'#0'($t83, $t59);
    if ($abort_flag) {
        assume {:print "$at(2,9029,9069)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // write_back[Reference($t26).yes_pool (0x1::coin::Coin<#0>)]($t83) at pivot-tst/contract/sources/pivot_markets.move:232:13+40
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_yes_pool($Dereference($t26), $Dereference($t83)));

    // write_back[Reference($t25)[]]($t26) at pivot-tst/contract/sources/pivot_markets.move:232:13+40
    $t25 := $UpdateMutation($t25, UpdateTable($Dereference($t25), ReadVec($t26->p, LenVec($t25->p)), $Dereference($t26)));

    // write_back[Reference($t21).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t25) at pivot-tst/contract/sources/pivot_markets.move:232:13+40
    $t21 := $UpdateMutation($t21, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t21), $Dereference($t25)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t21): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t21), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t21)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t21)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t21) at pivot-tst/contract/sources/pivot_markets.move:232:13+40
    assume {:print "$at(2,9029,9069)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // label L23 at pivot-tst/contract/sources/pivot_markets.move:183:28+2508
    assume {:print "$at(2,6719,9227)"} true;
L23:

    // goto L27 at pivot-tst/contract/sources/pivot_markets.move:183:28+2508
    assume {:print "$at(2,6719,9227)"} true;
    goto L27;

    // label L21 at pivot-tst/contract/sources/pivot_markets.move:234:38+22
    assume {:print "$at(2,9125,9147)"} true;
L21:

    // $t84 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t26) at pivot-tst/contract/sources/pivot_markets.move:234:38+22
    assume {:print "$at(2,9125,9147)"} true;
    $t84 := $Dereference($t26)->$total_no_shares;

    // $t85 := +($t84, $t38) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:234:38+31
    call $t85 := $AddU64($t84, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,9125,9156)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t86 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t26) at pivot-tst/contract/sources/pivot_markets.move:234:13+22
    $t86 := $ChildMutation($t26, 13, $Dereference($t26)->$total_no_shares);

    // write_ref($t86, $t85) at pivot-tst/contract/sources/pivot_markets.move:234:13+56
    $t86 := $UpdateMutation($t86, $t85);

    // write_back[Reference($t26).total_no_shares (u64)]($t86) at pivot-tst/contract/sources/pivot_markets.move:234:13+56
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_total_no_shares($Dereference($t26), $Dereference($t86)));

    // $t87 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.no_pool($t26) at pivot-tst/contract/sources/pivot_markets.move:235:25+19
    assume {:print "$at(2,9182,9201)"} true;
    $t87 := $ChildMutation($t26, 4, $Dereference($t26)->$no_pool);

    // coin::merge<#0>($t87, $t59) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:235:13+39
    call $t87 := $1_coin_merge'#0'($t87, $t59);
    if ($abort_flag) {
        assume {:print "$at(2,9170,9209)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // write_back[Reference($t26).no_pool (0x1::coin::Coin<#0>)]($t87) at pivot-tst/contract/sources/pivot_markets.move:235:13+39
    $t26 := $UpdateMutation($t26, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_no_pool($Dereference($t26), $Dereference($t87)));

    // write_back[Reference($t25)[]]($t26) at pivot-tst/contract/sources/pivot_markets.move:235:13+39
    $t25 := $UpdateMutation($t25, UpdateTable($Dereference($t25), ReadVec($t26->p, LenVec($t25->p)), $Dereference($t26)));

    // write_back[Reference($t21).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t25) at pivot-tst/contract/sources/pivot_markets.move:235:13+39
    $t21 := $UpdateMutation($t21, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t21), $Dereference($t25)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t21): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t21), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t21)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t21)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t21) at pivot-tst/contract/sources/pivot_markets.move:235:13+39
    assume {:print "$at(2,9170,9209)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:235:13+39
    goto L23;

    // label L16 at pivot-tst/contract/sources/pivot_markets.move:202:9+6
    assume {:print "$at(2,7875,7881)"} true;
L16:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t21): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t21), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t21)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t21)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t26) at pivot-tst/contract/sources/pivot_markets.move:202:9+6
    assume {:print "$at(2,7875,7881)"} true;

    // $t88 := 13 at pivot-tst/contract/sources/pivot_markets.move:202:71+19
    $t88 := 13;
    assume $IsValid'u64'($t88);

    // $t89 := error::invalid_argument($t88) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:202:47+44
    call $t89 := $1_error_invalid_argument($t88);
    if ($abort_flag) {
        assume {:print "$at(2,7913,7957)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_abort($t89) at pivot-tst/contract/sources/pivot_markets.move:202:9+6
    assume {:print "$at(2,7875,7881)"} true;
    assume {:print "$track_abort(101,2):", $t89} $t89 == $t89;

    // $t22 := move($t89) at pivot-tst/contract/sources/pivot_markets.move:202:9+6
    $t22 := $t89;

    // goto L28 at pivot-tst/contract/sources/pivot_markets.move:202:9+6
    goto L28;

    // label L14 at pivot-tst/contract/sources/pivot_markets.move:201:90+13
    assume {:print "$at(2,7840,7853)"} true;
L14:

    // $t90 := -($t35, $t49) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:201:90+25
    assume {:print "$at(2,7840,7865)"} true;
    call $t90 := $Sub($t35, $t49);
    if ($abort_flag) {
        assume {:print "$at(2,7840,7865)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t13 := $t90 at pivot-tst/contract/sources/pivot_markets.move:201:90+25
    $t13 := $t90;

    // trace_local[$t60]($t90) at pivot-tst/contract/sources/pivot_markets.move:201:90+25
    assume {:print "$track_local(101,2,13):", $t90} $t90 == $t90;

    // goto L24 at pivot-tst/contract/sources/pivot_markets.move:201:90+25
    goto L24;

    // label L12 at pivot-tst/contract/sources/pivot_markets.move:199:90+22
    assume {:print "$at(2,7645,7667)"} true;
L12:

    // $t91 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t26) at pivot-tst/contract/sources/pivot_markets.move:199:90+22
    assume {:print "$at(2,7645,7667)"} true;
    $t91 := $Dereference($t26)->$total_no_shares;

    // $t92 := +($t91, $t38) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:199:90+31
    call $t92 := $AddU64($t91, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,7645,7676)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // $t11 := $t92 at pivot-tst/contract/sources/pivot_markets.move:199:90+31
    $t11 := $t92;

    // trace_local[$t47]($t92) at pivot-tst/contract/sources/pivot_markets.move:199:90+31
    assume {:print "$track_local(101,2,11):", $t92} $t92 == $t92;

    // goto L25 at pivot-tst/contract/sources/pivot_markets.move:199:90+31
    goto L25;

    // label L10 at pivot-tst/contract/sources/pivot_markets.move:192:9+6
    assume {:print "$at(2,7230,7236)"} true;
L10:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t21): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t21), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t21)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t21)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t26) at pivot-tst/contract/sources/pivot_markets.move:192:9+6
    assume {:print "$at(2,7230,7236)"} true;

    // $t93 := 5 at pivot-tst/contract/sources/pivot_markets.move:192:71+17
    $t93 := 5;
    assume $IsValid'u64'($t93);

    // $t94 := error::invalid_argument($t93) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:192:47+42
    call $t94 := $1_error_invalid_argument($t93);
    if ($abort_flag) {
        assume {:print "$at(2,7268,7310)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_abort($t94) at pivot-tst/contract/sources/pivot_markets.move:192:9+6
    assume {:print "$at(2,7230,7236)"} true;
    assume {:print "$track_abort(101,2):", $t94} $t94 == $t94;

    // $t22 := move($t94) at pivot-tst/contract/sources/pivot_markets.move:192:9+6
    $t22 := $t94;

    // goto L28 at pivot-tst/contract/sources/pivot_markets.move:192:9+6
    goto L28;

    // label L8 at pivot-tst/contract/sources/pivot_markets.move:192:33+7
L8:

    // $t95 := 2 at pivot-tst/contract/sources/pivot_markets.move:192:44+1
    assume {:print "$at(2,7265,7266)"} true;
    $t95 := 2;
    assume $IsValid'u8'($t95);

    // $t96 := ==($t2, $t95) at pivot-tst/contract/sources/pivot_markets.move:192:33+12
    $t96 := $IsEqual'u8'($t2, $t95);

    // $t7 := $t96 at pivot-tst/contract/sources/pivot_markets.move:192:33+12
    $t7 := $t96;

    // trace_local[$t5]($t96) at pivot-tst/contract/sources/pivot_markets.move:192:33+12
    assume {:print "$track_local(101,2,7):", $t96} $t96 == $t96;

    // goto L26 at pivot-tst/contract/sources/pivot_markets.move:192:33+12
    goto L26;

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:191:9+6
    assume {:print "$at(2,7131,7137)"} true;
L6:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t21): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t21), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t21)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t21)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t26) at pivot-tst/contract/sources/pivot_markets.move:191:9+6
    assume {:print "$at(2,7131,7137)"} true;

    // $t97 := 1 at pivot-tst/contract/sources/pivot_markets.move:191:82+14
    $t97 := 1;
    assume $IsValid'u64'($t97);

    // $t98 := error::invalid_state($t97) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:191:61+36
    call $t98 := $1_error_invalid_state($t97);
    if ($abort_flag) {
        assume {:print "$at(2,7183,7219)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_abort($t98) at pivot-tst/contract/sources/pivot_markets.move:191:9+6
    assume {:print "$at(2,7131,7137)"} true;
    assume {:print "$track_abort(101,2):", $t98} $t98 == $t98;

    // $t22 := move($t98) at pivot-tst/contract/sources/pivot_markets.move:191:9+6
    $t22 := $t98;

    // goto L28 at pivot-tst/contract/sources/pivot_markets.move:191:9+6
    goto L28;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:190:9+6
    assume {:print "$at(2,7055,7061)"} true;
L4:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t21): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t21), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t21)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t21)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t26) at pivot-tst/contract/sources/pivot_markets.move:190:9+6
    assume {:print "$at(2,7055,7061)"} true;

    // $t99 := 3 at pivot-tst/contract/sources/pivot_markets.move:190:56+17
    $t99 := 3;
    assume $IsValid'u64'($t99);

    // $t100 := error::invalid_state($t99) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:190:35+39
    call $t100 := $1_error_invalid_state($t99);
    if ($abort_flag) {
        assume {:print "$at(2,7081,7120)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_abort($t100) at pivot-tst/contract/sources/pivot_markets.move:190:9+6
    assume {:print "$at(2,7055,7061)"} true;
    assume {:print "$track_abort(101,2):", $t100} $t100 == $t100;

    // $t22 := move($t100) at pivot-tst/contract/sources/pivot_markets.move:190:9+6
    $t22 := $t100;

    // goto L28 at pivot-tst/contract/sources/pivot_markets.move:190:9+6
    goto L28;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:187:9+6
    assume {:print "$at(2,6884,6890)"} true;
L2:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t21): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t21), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t21)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t21)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t21) at pivot-tst/contract/sources/pivot_markets.move:187:9+6
    assume {:print "$at(2,6884,6890)"} true;

    // $t101 := 8 at pivot-tst/contract/sources/pivot_markets.move:187:78+18
    $t101 := 8;
    assume $IsValid'u64'($t101);

    // $t102 := error::not_found($t101) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:187:61+36
    call $t102 := $1_error_not_found($t101);
    if ($abort_flag) {
        assume {:print "$at(2,6936,6972)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_abort($t102) at pivot-tst/contract/sources/pivot_markets.move:187:9+6
    assume {:print "$at(2,6884,6890)"} true;
    assume {:print "$track_abort(101,2):", $t102} $t102 == $t102;

    // $t22 := move($t102) at pivot-tst/contract/sources/pivot_markets.move:187:9+6
    $t22 := $t102;

    // goto L28 at pivot-tst/contract/sources/pivot_markets.move:187:9+6
    goto L28;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:184:9+6
    assume {:print "$at(2,6729,6735)"} true;
L0:

    // $t103 := 7 at pivot-tst/contract/sources/pivot_markets.move:184:53+20
    assume {:print "$at(2,6773,6793)"} true;
    $t103 := 7;
    assume $IsValid'u64'($t103);

    // $t104 := error::invalid_argument($t103) on_abort goto L28 with $t22 at pivot-tst/contract/sources/pivot_markets.move:184:29+45
    call $t104 := $1_error_invalid_argument($t103);
    if ($abort_flag) {
        assume {:print "$at(2,6749,6794)"} true;
        $t22 := $abort_code;
        assume {:print "$track_abort(101,2):", $t22} $t22 == $t22;
        goto L28;
    }

    // trace_abort($t104) at pivot-tst/contract/sources/pivot_markets.move:184:9+6
    assume {:print "$at(2,6729,6735)"} true;
    assume {:print "$track_abort(101,2):", $t104} $t104 == $t104;

    // $t22 := move($t104) at pivot-tst/contract/sources/pivot_markets.move:184:9+6
    $t22 := $t104;

    // goto L28 at pivot-tst/contract/sources/pivot_markets.move:184:9+6
    goto L28;

    // label L27 at pivot-tst/contract/sources/pivot_markets.move:237:5+1
    assume {:print "$at(2,9226,9227)"} true;
L27:

    // return () at pivot-tst/contract/sources/pivot_markets.move:237:5+1
    assume {:print "$at(2,9226,9227)"} true;
    return;

    // label L28 at pivot-tst/contract/sources/pivot_markets.move:237:5+1
L28:

    // abort($t22) at pivot-tst/contract/sources/pivot_markets.move:237:5+1
    assume {:print "$at(2,9226,9227)"} true;
    $abort_code := $t22;
    $abort_flag := true;
    return;

    // label L29 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L29:

    // drop($t25) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L4 at <internal>:1:1+10
    goto L4;

    // label L30 at <internal>:1:1+10
L30:

    // drop($t25) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L6 at <internal>:1:1+10
    goto L6;

    // label L31 at <internal>:1:1+10
L31:

    // drop($t25) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L10 at <internal>:1:1+10
    goto L10;

    // label L32 at <internal>:1:1+10
L32:

    // drop($t25) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L16 at <internal>:1:1+10
    goto L16;

}

// fun pivot_markets::calculate_price<#0> [baseline] at pivot-tst/contract/sources/pivot_markets.move:161:5+558
procedure {:inline 1} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_calculate_price'#0'(_$t0: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t0: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t1: int;
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[market]($t0) at pivot-tst/contract/sources/pivot_markets.move:161:5+1
    assume {:print "$at(2,5924,5925)"} true;
    assume {:print "$track_local(101,3,0):", $t0} $t0 == $t0;

    // trace_local[outcome]($t1) at pivot-tst/contract/sources/pivot_markets.move:161:5+1
    assume {:print "$track_local(101,3,1):", $t1} $t1 == $t1;

    // $t5 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t0) at pivot-tst/contract/sources/pivot_markets.move:162:28+23
    assume {:print "$at(2,6028,6051)"} true;
    $t5 := $t0->$total_yes_shares;

    // $t6 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t0) at pivot-tst/contract/sources/pivot_markets.move:162:54+22
    $t6 := $t0->$total_no_shares;

    // $t7 := +($t5, $t6) on_abort goto L9 with $t8 at pivot-tst/contract/sources/pivot_markets.move:162:28+48
    call $t7 := $AddU64($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,6028,6076)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(101,3):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[$t4]($t7) at pivot-tst/contract/sources/pivot_markets.move:162:28+48
    assume {:print "$track_local(101,3,2):", $t7} $t7 == $t7;

    // $t9 := 0 at pivot-tst/contract/sources/pivot_markets.move:163:29+1
    assume {:print "$at(2,6106,6107)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := ==($t7, $t9) at pivot-tst/contract/sources/pivot_markets.move:163:13+17
    $t10 := $IsEqual'u64'($t7, $t9);

    // if ($t10) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:163:9+98
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:163:32+75
L1:

    // $t11 := 5000 at pivot-tst/contract/sources/pivot_markets.move:164:20+4
    assume {:print "$at(2,6130,6134)"} true;
    $t11 := 5000;
    assume $IsValid'u64'($t11);

    // trace_return[0]($t11) at pivot-tst/contract/sources/pivot_markets.move:164:13+11
    assume {:print "$track_return(101,3,0):", $t11} $t11 == $t11;

    // $t12 := move($t11) at pivot-tst/contract/sources/pivot_markets.move:164:13+11
    $t12 := $t11;

    // goto L8 at pivot-tst/contract/sources/pivot_markets.move:164:13+11
    goto L8;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:167:34+7
    assume {:print "$at(2,6220,6227)"} true;
L0:

    // $t13 := 1 at pivot-tst/contract/sources/pivot_markets.move:167:45+1
    assume {:print "$at(2,6231,6232)"} true;
    $t13 := 1;
    assume $IsValid'u8'($t13);

    // $t14 := ==($t1, $t13) at pivot-tst/contract/sources/pivot_markets.move:167:34+12
    $t14 := $IsEqual'u8'($t1, $t13);

    // if ($t14) goto L3 else goto L2 at pivot-tst/contract/sources/pivot_markets.move:167:30+69
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:167:48+23
L3:

    // $t15 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t0) at pivot-tst/contract/sources/pivot_markets.move:167:48+23
    assume {:print "$at(2,6234,6257)"} true;
    $t15 := $t0->$total_yes_shares;

    // $t3 := $t15 at pivot-tst/contract/sources/pivot_markets.move:167:48+23
    $t3 := $t15;

    // trace_local[$t10]($t15) at pivot-tst/contract/sources/pivot_markets.move:167:48+23
    assume {:print "$track_local(101,3,3):", $t15} $t15 == $t15;

    // label L7 at pivot-tst/contract/sources/pivot_markets.move:169:13+12
    assume {:print "$at(2,6358,6370)"} true;
L7:

    // $t16 := 0 at pivot-tst/contract/sources/pivot_markets.move:169:29+1
    assume {:print "$at(2,6374,6375)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t17 := ==($t7, $t16) at pivot-tst/contract/sources/pivot_markets.move:169:13+17
    $t17 := $IsEqual'u64'($t7, $t16);

    // if ($t17) goto L5 else goto L4 at pivot-tst/contract/sources/pivot_markets.move:169:9+122
    if ($t17) { goto L5; } else { goto L4; }

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:170:13+4
    assume {:print "$at(2,6391,6395)"} true;
L5:

    // $t18 := 5000 at pivot-tst/contract/sources/pivot_markets.move:170:13+4
    assume {:print "$at(2,6391,6395)"} true;
    $t18 := 5000;
    assume $IsValid'u64'($t18);

    // $t4 := $t18 at pivot-tst/contract/sources/pivot_markets.move:170:13+4
    $t4 := $t18;

    // trace_local[$t6]($t18) at pivot-tst/contract/sources/pivot_markets.move:170:13+4
    assume {:print "$track_local(101,3,4):", $t18} $t18 == $t18;

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:161:80+483
    assume {:print "$at(2,5999,6482)"} true;
L6:

    // trace_return[0]($t4) at pivot-tst/contract/sources/pivot_markets.move:161:80+483
    assume {:print "$at(2,5999,6482)"} true;
    assume {:print "$track_return(101,3,0):", $t4} $t4 == $t4;

    // $t12 := move($t4) at pivot-tst/contract/sources/pivot_markets.move:161:80+483
    $t12 := $t4;

    // goto L8 at pivot-tst/contract/sources/pivot_markets.move:161:80+483
    goto L8;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:172:15+14
    assume {:print "$at(2,6427,6441)"} true;
L4:

    // $t19 := 10000 at pivot-tst/contract/sources/pivot_markets.move:172:32+5
    assume {:print "$at(2,6444,6449)"} true;
    $t19 := 10000;
    assume $IsValid'u64'($t19);

    // $t20 := *($t3, $t19) on_abort goto L9 with $t8 at pivot-tst/contract/sources/pivot_markets.move:172:14+24
    call $t20 := $MulU64($t3, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,6426,6450)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(101,3):", $t8} $t8 == $t8;
        goto L9;
    }

    // $t21 := /($t20, $t7) on_abort goto L9 with $t8 at pivot-tst/contract/sources/pivot_markets.move:172:13+41
    call $t21 := $Div($t20, $t7);
    if ($abort_flag) {
        assume {:print "$at(2,6425,6466)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(101,3):", $t8} $t8 == $t8;
        goto L9;
    }

    // $t4 := $t21 at pivot-tst/contract/sources/pivot_markets.move:172:13+41
    $t4 := $t21;

    // trace_local[$t6]($t21) at pivot-tst/contract/sources/pivot_markets.move:172:13+41
    assume {:print "$track_local(101,3,4):", $t21} $t21 == $t21;

    // goto L6 at pivot-tst/contract/sources/pivot_markets.move:172:13+41
    goto L6;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    assume {:print "$at(2,6263,6285)"} true;
L2:

    // $t22 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t0) at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    assume {:print "$at(2,6263,6285)"} true;
    $t22 := $t0->$total_no_shares;

    // $t3 := $t22 at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    $t3 := $t22;

    // trace_local[$t10]($t22) at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    assume {:print "$track_local(101,3,3):", $t22} $t22 == $t22;

    // goto L7 at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    goto L7;

    // label L8 at pivot-tst/contract/sources/pivot_markets.move:174:5+1
    assume {:print "$at(2,6481,6482)"} true;
L8:

    // return $t12 at pivot-tst/contract/sources/pivot_markets.move:174:5+1
    assume {:print "$at(2,6481,6482)"} true;
    $ret0 := $t12;
    return;

    // label L9 at pivot-tst/contract/sources/pivot_markets.move:174:5+1
L9:

    // abort($t8) at pivot-tst/contract/sources/pivot_markets.move:174:5+1
    assume {:print "$at(2,6481,6482)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun pivot_markets::calculate_price [verification] at pivot-tst/contract/sources/pivot_markets.move:161:5+558
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_calculate_price$verify(_$t0: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0', _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t0: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t1: int;
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume And(WellFormed($t0), Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome($t0))), 1)) at pivot-tst/contract/sources/pivot_markets.move:161:5+1
    assume {:print "$at(2,5924,5925)"} true;
    assume ($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t0) && (LenVec($t0->$outcome->$vec) <= 1));

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:161:5+1
    assume $IsValid'u8'($t1);

    // trace_local[market]($t0) at pivot-tst/contract/sources/pivot_markets.move:161:5+1
    assume {:print "$track_local(101,3,0):", $t0} $t0 == $t0;

    // trace_local[outcome]($t1) at pivot-tst/contract/sources/pivot_markets.move:161:5+1
    assume {:print "$track_local(101,3,1):", $t1} $t1 == $t1;

    // $t5 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t0) at pivot-tst/contract/sources/pivot_markets.move:162:28+23
    assume {:print "$at(2,6028,6051)"} true;
    $t5 := $t0->$total_yes_shares;

    // $t6 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t0) at pivot-tst/contract/sources/pivot_markets.move:162:54+22
    $t6 := $t0->$total_no_shares;

    // $t7 := +($t5, $t6) on_abort goto L9 with $t8 at pivot-tst/contract/sources/pivot_markets.move:162:28+48
    call $t7 := $AddU64($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,6028,6076)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(101,3):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_local[$t4]($t7) at pivot-tst/contract/sources/pivot_markets.move:162:28+48
    assume {:print "$track_local(101,3,2):", $t7} $t7 == $t7;

    // $t9 := 0 at pivot-tst/contract/sources/pivot_markets.move:163:29+1
    assume {:print "$at(2,6106,6107)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := ==($t7, $t9) at pivot-tst/contract/sources/pivot_markets.move:163:13+17
    $t10 := $IsEqual'u64'($t7, $t9);

    // if ($t10) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:163:9+98
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:163:32+75
L1:

    // $t11 := 5000 at pivot-tst/contract/sources/pivot_markets.move:164:20+4
    assume {:print "$at(2,6130,6134)"} true;
    $t11 := 5000;
    assume $IsValid'u64'($t11);

    // trace_return[0]($t11) at pivot-tst/contract/sources/pivot_markets.move:164:13+11
    assume {:print "$track_return(101,3,0):", $t11} $t11 == $t11;

    // $t12 := move($t11) at pivot-tst/contract/sources/pivot_markets.move:164:13+11
    $t12 := $t11;

    // goto L8 at pivot-tst/contract/sources/pivot_markets.move:164:13+11
    goto L8;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:167:34+7
    assume {:print "$at(2,6220,6227)"} true;
L0:

    // $t13 := 1 at pivot-tst/contract/sources/pivot_markets.move:167:45+1
    assume {:print "$at(2,6231,6232)"} true;
    $t13 := 1;
    assume $IsValid'u8'($t13);

    // $t14 := ==($t1, $t13) at pivot-tst/contract/sources/pivot_markets.move:167:34+12
    $t14 := $IsEqual'u8'($t1, $t13);

    // if ($t14) goto L3 else goto L2 at pivot-tst/contract/sources/pivot_markets.move:167:30+69
    if ($t14) { goto L3; } else { goto L2; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:167:48+23
L3:

    // $t15 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t0) at pivot-tst/contract/sources/pivot_markets.move:167:48+23
    assume {:print "$at(2,6234,6257)"} true;
    $t15 := $t0->$total_yes_shares;

    // $t3 := $t15 at pivot-tst/contract/sources/pivot_markets.move:167:48+23
    $t3 := $t15;

    // trace_local[$t10]($t15) at pivot-tst/contract/sources/pivot_markets.move:167:48+23
    assume {:print "$track_local(101,3,3):", $t15} $t15 == $t15;

    // label L7 at pivot-tst/contract/sources/pivot_markets.move:169:13+12
    assume {:print "$at(2,6358,6370)"} true;
L7:

    // $t16 := 0 at pivot-tst/contract/sources/pivot_markets.move:169:29+1
    assume {:print "$at(2,6374,6375)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t17 := ==($t7, $t16) at pivot-tst/contract/sources/pivot_markets.move:169:13+17
    $t17 := $IsEqual'u64'($t7, $t16);

    // if ($t17) goto L5 else goto L4 at pivot-tst/contract/sources/pivot_markets.move:169:9+122
    if ($t17) { goto L5; } else { goto L4; }

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:170:13+4
    assume {:print "$at(2,6391,6395)"} true;
L5:

    // $t18 := 5000 at pivot-tst/contract/sources/pivot_markets.move:170:13+4
    assume {:print "$at(2,6391,6395)"} true;
    $t18 := 5000;
    assume $IsValid'u64'($t18);

    // $t4 := $t18 at pivot-tst/contract/sources/pivot_markets.move:170:13+4
    $t4 := $t18;

    // trace_local[$t6]($t18) at pivot-tst/contract/sources/pivot_markets.move:170:13+4
    assume {:print "$track_local(101,3,4):", $t18} $t18 == $t18;

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:161:80+483
    assume {:print "$at(2,5999,6482)"} true;
L6:

    // trace_return[0]($t4) at pivot-tst/contract/sources/pivot_markets.move:161:80+483
    assume {:print "$at(2,5999,6482)"} true;
    assume {:print "$track_return(101,3,0):", $t4} $t4 == $t4;

    // $t12 := move($t4) at pivot-tst/contract/sources/pivot_markets.move:161:80+483
    $t12 := $t4;

    // goto L8 at pivot-tst/contract/sources/pivot_markets.move:161:80+483
    goto L8;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:172:15+14
    assume {:print "$at(2,6427,6441)"} true;
L4:

    // $t19 := 10000 at pivot-tst/contract/sources/pivot_markets.move:172:32+5
    assume {:print "$at(2,6444,6449)"} true;
    $t19 := 10000;
    assume $IsValid'u64'($t19);

    // $t20 := *($t3, $t19) on_abort goto L9 with $t8 at pivot-tst/contract/sources/pivot_markets.move:172:14+24
    call $t20 := $MulU64($t3, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,6426,6450)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(101,3):", $t8} $t8 == $t8;
        goto L9;
    }

    // $t21 := /($t20, $t7) on_abort goto L9 with $t8 at pivot-tst/contract/sources/pivot_markets.move:172:13+41
    call $t21 := $Div($t20, $t7);
    if ($abort_flag) {
        assume {:print "$at(2,6425,6466)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(101,3):", $t8} $t8 == $t8;
        goto L9;
    }

    // $t4 := $t21 at pivot-tst/contract/sources/pivot_markets.move:172:13+41
    $t4 := $t21;

    // trace_local[$t6]($t21) at pivot-tst/contract/sources/pivot_markets.move:172:13+41
    assume {:print "$track_local(101,3,4):", $t21} $t21 == $t21;

    // goto L6 at pivot-tst/contract/sources/pivot_markets.move:172:13+41
    goto L6;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    assume {:print "$at(2,6263,6285)"} true;
L2:

    // $t22 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t0) at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    assume {:print "$at(2,6263,6285)"} true;
    $t22 := $t0->$total_no_shares;

    // $t3 := $t22 at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    $t3 := $t22;

    // trace_local[$t10]($t22) at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    assume {:print "$track_local(101,3,3):", $t22} $t22 == $t22;

    // goto L7 at pivot-tst/contract/sources/pivot_markets.move:167:77+22
    goto L7;

    // label L8 at pivot-tst/contract/sources/pivot_markets.move:174:5+1
    assume {:print "$at(2,6481,6482)"} true;
L8:

    // return $t12 at pivot-tst/contract/sources/pivot_markets.move:174:5+1
    assume {:print "$at(2,6481,6482)"} true;
    $ret0 := $t12;
    return;

    // label L9 at pivot-tst/contract/sources/pivot_markets.move:174:5+1
L9:

    // abort($t8) at pivot-tst/contract/sources/pivot_markets.move:174:5+1
    assume {:print "$at(2,6481,6482)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun pivot_markets::claim_winnings [verification] at pivot-tst/contract/sources/pivot_markets.move:332:5+2406
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_claim_winnings$verify(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t4: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t5: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_coin_Coin'#0');
    var $t9: int;
    var $t10: int;
    var $t11: $1_coin_Coin'#0';
    var $t12: $Mutation (Vec (int));
    var $t13: int;
    var $t14: $1_coin_Coin'#0';
    var $t15: $1_coin_Coin'#0';
    var $t16: $Mutation ($1_coin_Coin'#0');
    var $t17: $Mutation ($1_coin_Coin'#0');
    var $t18: int;
    var $t19: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t20: int;
    var $t21: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t22: bool;
    var $t23: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'));
    var $t24: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t25: bool;
    var $t26: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var $t27: bool;
    var $t28: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position));
    var $t29: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $t30: int;
    var $t31: int;
    var $t32: bool;
    var $t33: $1_option_Option'u8';
    var $t34: int;
    var $t35: bool;
    var $t36: int;
    var $t37: bool;
    var $t38: int;
    var $t39: bool;
    var $t40: int;
    var $t41: bool;
    var $t42: int;
    var $t43: int;
    var $t44: bool;
    var $t45: $1_coin_Coin'#0';
    var $t46: int;
    var $t47: $1_coin_Coin'#0';
    var $t48: int;
    var $t49: int;
    var $t50: int;
    var $t51: int;
    var $t52: int;
    var $t53: $1_coin_Coin'#0';
    var $t54: int;
    var $t55: bool;
    var $t56: $1_coin_Coin'#0';
    var $t57: bool;
    var $t58: bool;
    var $t59: $1_coin_CoinStore'#0';
    var $t60: Table int (Vec (int));
    var $t61: bool;
    var $t62: $Mutation (Table int (Vec (int)));
    var $t63: $Mutation (Vec (int));
    var $t64: Vec (int);
    var $t65: bool;
    var $t66: int;
    var $t67: int;
    var $t68: bool;
    var $t69: bool;
    var $t70: $Mutation ($1_coin_Coin'#0');
    var $t71: $1_coin_Coin'#0';
    var $t72: int;
    var $t73: int;
    var $t74: $1_coin_Coin'#0';
    var $t75: $Mutation ($1_coin_Coin'#0');
    var $t76: $1_coin_Coin'#0';
    var $t77: int;
    var $t78: int;
    var $t79: int;
    var $t80: int;
    var $t81: int;
    var $t82: int;
    var $t83: int;
    var $t84: int;
    var $t85: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume {:print "$at(2,13296,13297)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume $IsValid'u64'($t2);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // uninit($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
    assume $t16->l == $Uninitialized();

    // uninit($t17) at <internal>:1:1+10
    assume $t17->l == $Uninitialized();

    // trace_local[user]($t0) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume {:print "$at(2,13296,13297)"} true;
    assume {:print "$track_local(101,4,0):", $t0} $t0 == $t0;

    // trace_local[market_id]($t1) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume {:print "$track_local(101,4,1):", $t1} $t1 == $t1;

    // trace_local[position_id]($t2) at pivot-tst/contract/sources/pivot_markets.move:332:5+1
    assume {:print "$track_local(101,4,2):", $t2} $t2 == $t2;

    // $t18 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:337:62+14
    assume {:print "$at(2,13501,13515)"} true;
    $t18 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t18);

    // $t19 := borrow_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t18) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:337:21+56
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $Mutation($Global($t18), EmptyVec(), $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t18));
    }
    if ($abort_flag) {
        assume {:print "$at(2,13460,13516)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_local[store]($t19) at pivot-tst/contract/sources/pivot_markets.move:337:21+56
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' := $Dereference($t19);
    assume {:print "$track_local(101,4,3):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'';

    // $t21 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t19) at pivot-tst/contract/sources/pivot_markets.move:338:33+14
    assume {:print "$at(2,13550,13564)"} true;
    $t21 := $Dereference($t19)->$markets;

    // $t22 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t21, $t1) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:338:17+42
    call $t22 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t21, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,13534,13576)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // if ($t22) goto L1 else goto L43 at pivot-tst/contract/sources/pivot_markets.move:338:9+6
    if ($t22) { goto L1; } else { goto L43; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:339:40+18
    assume {:print "$at(2,13656,13674)"} true;
L1:

    // $t23 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t19) at pivot-tst/contract/sources/pivot_markets.move:339:40+18
    assume {:print "$at(2,13656,13674)"} true;
    $t23 := $ChildMutation($t19, 1, $Dereference($t19)->$markets);

    // $t24 := table::borrow_mut<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t23, $t1) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:339:22+48
    call $t24,$t23 := $1_table_borrow_mut'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t23, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,13638,13686)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_local[market]($t24) at pivot-tst/contract/sources/pivot_markets.move:339:22+48
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' := $Dereference($t24);
    assume {:print "$track_local(101,4,4):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'';

    // $t25 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.resolved($t24) at pivot-tst/contract/sources/pivot_markets.move:341:17+15
    assume {:print "$at(2,13705,13720)"} true;
    $t25 := $Dereference($t24)->$resolved;

    // if ($t25) goto L3 else goto L44 at pivot-tst/contract/sources/pivot_markets.move:341:9+6
    if ($t25) { goto L3; } else { goto L44; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:342:33+17
    assume {:print "$at(2,13800,13817)"} true;
L3:

    // $t26 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t24) at pivot-tst/contract/sources/pivot_markets.move:342:33+17
    assume {:print "$at(2,13800,13817)"} true;
    $t26 := $Dereference($t24)->$positions;

    // $t27 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t26, $t2) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:342:17+47
    call $t27 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t26, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,13784,13831)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // if ($t27) goto L5 else goto L45 at pivot-tst/contract/sources/pivot_markets.move:342:9+6
    if ($t27) { goto L5; } else { goto L45; }

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:344:38+21
    assume {:print "$at(2,13912,13933)"} true;
L5:

    // $t28 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t24) at pivot-tst/contract/sources/pivot_markets.move:344:38+21
    assume {:print "$at(2,13912,13933)"} true;
    $t28 := $ChildMutation($t24, 6, $Dereference($t24)->$positions);

    // $t29 := table::remove<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t28, $t2) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:344:24+49
    call $t29,$t28 := $1_table_remove'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t28, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,13898,13947)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // write_back[Reference($t24).positions (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>)]($t28) at pivot-tst/contract/sources/pivot_markets.move:344:24+49
    $t24 := $UpdateMutation($t24, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_positions($Dereference($t24), $Dereference($t28)));

    // trace_local[position]($t29) at pivot-tst/contract/sources/pivot_markets.move:344:24+49
    assume {:print "$track_local(101,4,5):", $t29} $t29 == $t29;

    // $t30 := signer::address_of($t0) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:345:25+24
    assume {:print "$at(2,13973,13997)"} true;
    call $t30 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,13973,13997)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_local[$t4]($t30) at pivot-tst/contract/sources/pivot_markets.move:345:25+24
    assume {:print "$track_local(101,4,6):", $t30} $t30 == $t30;

    // $t31 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.user($t29) at pivot-tst/contract/sources/pivot_markets.move:346:17+13
    assume {:print "$at(2,14015,14028)"} true;
    $t31 := $t29->$user;

    // $t32 := ==($t31, $t30) at pivot-tst/contract/sources/pivot_markets.move:346:17+26
    $t32 := $IsEqual'address'($t31, $t30);

    // if ($t32) goto L7 else goto L46 at pivot-tst/contract/sources/pivot_markets.move:346:9+6
    if ($t32) { goto L7; } else { goto L46; }

    // label L7 at pivot-tst/contract/sources/pivot_markets.move:348:39+15
    assume {:print "$at(2,14122,14137)"} true;
L7:

    // $t33 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.outcome($t24) at pivot-tst/contract/sources/pivot_markets.move:348:39+15
    assume {:print "$at(2,14122,14137)"} true;
    $t33 := $Dereference($t24)->$outcome;

    // $t34 := opaque begin: option::borrow<u8>($t33) at pivot-tst/contract/sources/pivot_markets.move:348:24+31

    // assume Identical($t35, option::spec_is_none<u8>($t33)) at pivot-tst/contract/sources/pivot_markets.move:348:24+31
    assume ($t35 == $1_option_spec_is_none'u8'($t33));

    // if ($t35) goto L47 else goto L41 at pivot-tst/contract/sources/pivot_markets.move:348:24+31
    if ($t35) { goto L47; } else { goto L41; }

    // label L42 at pivot-tst/contract/sources/pivot_markets.move:348:24+31
L42:

    // assume And(option::spec_is_none<u8>($t33), Eq(262145, $t20)) at pivot-tst/contract/sources/pivot_markets.move:348:24+31
    assume {:print "$at(2,14107,14138)"} true;
    assume ($1_option_spec_is_none'u8'($t33) && $IsEqual'num'(262145, $t20));

    // trace_abort($t20) at pivot-tst/contract/sources/pivot_markets.move:348:24+31
    assume {:print "$at(2,14107,14138)"} true;
    assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;

    // goto L40 at pivot-tst/contract/sources/pivot_markets.move:348:24+31
    goto L40;

    // label L41 at pivot-tst/contract/sources/pivot_markets.move:348:24+31
L41:

    // assume WellFormed($t34) at pivot-tst/contract/sources/pivot_markets.move:348:24+31
    assume {:print "$at(2,14107,14138)"} true;
    assume $IsValid'u8'($t34);

    // assume Eq<u8>($t34, option::spec_borrow<u8>($t33)) at pivot-tst/contract/sources/pivot_markets.move:348:24+31
    assume $IsEqual'u8'($t34, $1_option_spec_borrow'u8'($t33));

    // $t34 := opaque end: option::borrow<u8>($t33) at pivot-tst/contract/sources/pivot_markets.move:348:24+31

    // trace_local[outcome]($t34) at pivot-tst/contract/sources/pivot_markets.move:348:23+32
    assume {:print "$track_local(101,4,7):", $t34} $t34 == $t34;

    // $t36 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.outcome($t29) at pivot-tst/contract/sources/pivot_markets.move:350:13+16
    assume {:print "$at(2,14161,14177)"} true;
    $t36 := $t29->$outcome;

    // $t37 := ==($t36, $t34) at pivot-tst/contract/sources/pivot_markets.move:350:13+27
    $t37 := $IsEqual'u8'($t36, $t34);

    // if ($t37) goto L8 else goto L48 at pivot-tst/contract/sources/pivot_markets.move:350:9+1131
    if ($t37) { goto L8; } else { goto L48; }

    // label L8 at pivot-tst/contract/sources/pivot_markets.move:352:36+7
    assume {:print "$at(2,14283,14290)"} true;
L8:

    // $t38 := 1 at pivot-tst/contract/sources/pivot_markets.move:352:47+1
    assume {:print "$at(2,14294,14295)"} true;
    $t38 := 1;
    assume $IsValid'u8'($t38);

    // $t39 := ==($t34, $t38) at pivot-tst/contract/sources/pivot_markets.move:352:36+12
    $t39 := $IsEqual'u8'($t34, $t38);

    // if ($t39) goto L49 else goto L50 at pivot-tst/contract/sources/pivot_markets.move:352:32+63
    if ($t39) { goto L49; } else { goto L50; }

    // label L12 at pivot-tst/contract/sources/pivot_markets.move:352:50+20
L12:

    // $t16 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.yes_pool($t24) at pivot-tst/contract/sources/pivot_markets.move:352:50+20
    assume {:print "$at(2,14297,14317)"} true;
    $t16 := $ChildMutation($t24, 3, $Dereference($t24)->$yes_pool);

    // $t8 := $t16 at pivot-tst/contract/sources/pivot_markets.move:352:50+20
    $t8 := $t16;

    // trace_local[winning_pool]($t16) at pivot-tst/contract/sources/pivot_markets.move:352:50+20
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t16);
    assume {:print "$track_local(101,4,8):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // label L26 at pivot-tst/contract/sources/pivot_markets.move:353:44+7
    assume {:print "$at(2,14387,14394)"} true;
L26:

    // $t40 := 1 at pivot-tst/contract/sources/pivot_markets.move:353:55+1
    assume {:print "$at(2,14398,14399)"} true;
    $t40 := 1;
    assume $IsValid'u8'($t40);

    // $t41 := ==($t34, $t40) at pivot-tst/contract/sources/pivot_markets.move:353:44+12
    $t41 := $IsEqual'u8'($t34, $t40);

    // if ($t41) goto L14 else goto L13 at pivot-tst/contract/sources/pivot_markets.move:353:40+69
    if ($t41) { goto L14; } else { goto L13; }

    // label L14 at pivot-tst/contract/sources/pivot_markets.move:353:58+23
L14:

    // $t42 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t24) at pivot-tst/contract/sources/pivot_markets.move:353:58+23
    assume {:print "$at(2,14401,14424)"} true;
    $t42 := $Dereference($t24)->$total_yes_shares;

    // $t9 := $t42 at pivot-tst/contract/sources/pivot_markets.move:353:58+23
    $t9 := $t42;

    // trace_local[total_winning_shares]($t42) at pivot-tst/contract/sources/pivot_markets.move:353:58+23
    assume {:print "$track_local(101,4,9):", $t42} $t42 == $t42;

    // label L25 at pivot-tst/contract/sources/pivot_markets.move:355:17+20
    assume {:print "$at(2,14483,14503)"} true;
L25:

    // $t43 := 0 at pivot-tst/contract/sources/pivot_markets.move:355:40+1
    assume {:print "$at(2,14506,14507)"} true;
    $t43 := 0;
    assume $IsValid'u64'($t43);

    // $t44 := >($t9, $t43) at pivot-tst/contract/sources/pivot_markets.move:355:17+24
    call $t44 := $Gt($t9, $t43);

    // if ($t44) goto L16 else goto L51 at pivot-tst/contract/sources/pivot_markets.move:355:13+799
    if ($t44) { goto L16; } else { goto L51; }

    // label L16 at pivot-tst/contract/sources/pivot_markets.move:356:48+12
    assume {:print "$at(2,14558,14570)"} true;
L16:

    // $t45 := read_ref($t8) at pivot-tst/contract/sources/pivot_markets.move:356:48+12
    assume {:print "$at(2,14558,14570)"} true;
    $t45 := $Dereference($t8);

    // $t46 := coin::value<#0>($t45) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:356:36+25
    call $t46 := $1_coin_value'#0'($t45);
    if ($abort_flag) {
        assume {:print "$at(2,14546,14571)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // $t47 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t24) at pivot-tst/contract/sources/pivot_markets.move:356:76+22
    $t47 := $Dereference($t24)->$liquidity_pool;

    // $t48 := coin::value<#0>($t47) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:356:64+35
    call $t48 := $1_coin_value'#0'($t47);
    if ($abort_flag) {
        assume {:print "$at(2,14574,14609)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // $t49 := +($t46, $t48) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:356:36+63
    call $t49 := $AddU64($t46, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,14546,14609)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_local[$t46]($t49) at pivot-tst/contract/sources/pivot_markets.move:356:36+63
    assume {:print "$track_local(101,4,10):", $t49} $t49 == $t49;

    // $t50 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.shares($t29) at pivot-tst/contract/sources/pivot_markets.move:357:38+15
    assume {:print "$at(2,14648,14663)"} true;
    $t50 := $t29->$shares;

    // $t51 := *($t50, $t49) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:357:37+32
    call $t51 := $MulU64($t50, $t49);
    if ($abort_flag) {
        assume {:print "$at(2,14647,14679)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // $t52 := /($t51, $t9) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:357:37+55
    call $t52 := $Div($t51, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,14647,14702)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_local[$t46]($t52) at pivot-tst/contract/sources/pivot_markets.move:357:37+55
    assume {:print "$track_local(101,4,10):", $t52} $t52 == $t52;

    // $t53 := read_ref($t8) at pivot-tst/contract/sources/pivot_markets.move:359:51+12
    assume {:print "$at(2,14771,14783)"} true;
    $t53 := $Dereference($t8);

    // $t54 := coin::value<#0>($t53) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:359:39+25
    call $t54 := $1_coin_value'#0'($t53);
    if ($abort_flag) {
        assume {:print "$at(2,14759,14784)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // $t55 := >=($t54, $t52) at pivot-tst/contract/sources/pivot_markets.move:359:39+42
    call $t55 := $Ge($t54, $t52);

    // if ($t55) goto L18 else goto L17 at pivot-tst/contract/sources/pivot_markets.move:359:35+436
    if ($t55) { goto L18; } else { goto L17; }

    // label L18 at pivot-tst/contract/sources/pivot_markets.move:360:35+12
    assume {:print "$at(2,14839,14851)"} true;
L18:

    // $t56 := coin::extract<#0>($t8, $t52) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    assume {:print "$at(2,14825,14867)"} true;
    call $t56,$t8 := $1_coin_extract'#0'($t8, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,14825,14867)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // $t57 := is_parent[Reference($t16)@]($t8) at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    $t57 := $IsSameMutation($t16, $t8);

    // if ($t57) goto L27 else goto L52 at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    if ($t57) { goto L27; } else { goto L52; }

    // label L27 at pivot-tst/contract/sources/pivot_markets.move:360:21+42
L27:

    // write_back[Reference($t16)@]($t8) at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    assume {:print "$at(2,14825,14867)"} true;
    $t16 := $UpdateMutation($t16, $Dereference($t8));

    // write_back[Reference($t24).yes_pool (0x1::coin::Coin<#0>)]($t16) at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    $t24 := $UpdateMutation($t24, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_yes_pool($Dereference($t24), $Dereference($t16)));

    // label L28 at pivot-tst/contract/sources/pivot_markets.move:360:21+42
L28:

    // $t58 := is_parent[Reference($t17)@]($t8) at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    assume {:print "$at(2,14825,14867)"} true;
    $t58 := $IsSameMutation($t17, $t8);

    // if ($t58) goto L29 else goto L53 at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    if ($t58) { goto L29; } else { goto L53; }

    // label L29 at pivot-tst/contract/sources/pivot_markets.move:360:21+42
L29:

    // write_back[Reference($t17)@]($t8) at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    assume {:print "$at(2,14825,14867)"} true;
    $t17 := $UpdateMutation($t17, $Dereference($t8));

    // write_back[Reference($t24).no_pool (0x1::coin::Coin<#0>)]($t17) at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    $t24 := $UpdateMutation($t24, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_no_pool($Dereference($t24), $Dereference($t17)));

    // label L30 at pivot-tst/contract/sources/pivot_markets.move:360:21+42
L30:

    // $t11 := $t56 at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    assume {:print "$at(2,14825,14867)"} true;
    $t11 := $t56;

    // trace_local[payout_coin]($t56) at pivot-tst/contract/sources/pivot_markets.move:360:21+42
    assume {:print "$track_local(101,4,11):", $t56} $t56 == $t56;

    // label L24 at pivot-tst/contract/sources/pivot_markets.move:368:31+9
    assume {:print "$at(2,15240,15249)"} true;
L24:

    // assume Identical($t59, global<0x1::coin::CoinStore<#0>>($t30)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:323:9+59
    assume {:print "$at(131,14121,14180)"} true;
    assume ($t59 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t30));

    // coin::deposit<#0>($t30, $t11) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:368:17+37
    assume {:print "$at(2,15226,15263)"} true;
    call $1_coin_deposit'#0'($t30, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,15226,15263)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // label L10 at pivot-tst/contract/sources/pivot_markets.move:373:29+22
    assume {:print "$at(2,15372,15394)"} true;
L10:

    // $t60 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.user_positions($t24) at pivot-tst/contract/sources/pivot_markets.move:373:29+22
    assume {:print "$at(2,15372,15394)"} true;
    $t60 := $Dereference($t24)->$user_positions;

    // $t61 := table::contains<address, vector<u64>>($t60, $t30) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:373:13+50
    call $t61 := $1_table_contains'address_vec'u64''($t60, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,15356,15406)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // if ($t61) goto L20 else goto L19 at pivot-tst/contract/sources/pivot_markets.move:373:9+343
    if ($t61) { goto L20; } else { goto L19; }

    // label L20 at pivot-tst/contract/sources/pivot_markets.move:374:55+26
    assume {:print "$at(2,15464,15490)"} true;
L20:

    // $t62 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.user_positions($t24) at pivot-tst/contract/sources/pivot_markets.move:374:55+26
    assume {:print "$at(2,15464,15490)"} true;
    $t62 := $ChildMutation($t24, 7, $Dereference($t24)->$user_positions);

    // $t63 := table::borrow_mut<address, vector<u64>>($t62, $t30) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:374:37+56
    call $t63,$t62 := $1_table_borrow_mut'address_vec'u64''($t62, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,15446,15502)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_local[user_position_ids]($t63) at pivot-tst/contract/sources/pivot_markets.move:374:37+56
    $temp_0'vec'u64'' := $Dereference($t63);
    assume {:print "$track_local(101,4,12):", $temp_0'vec'u64''} $temp_0'vec'u64'' == $temp_0'vec'u64'';

    // $t64 := read_ref($t63) at pivot-tst/contract/sources/pivot_markets.move:375:51+17
    assume {:print "$at(2,15554,15571)"} true;
    $t64 := $Dereference($t63);

    // ($t65, $t66) := vector::index_of<u64>($t64, $t2) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:375:34+49
    call $t65,$t66 := $1_vector_index_of'u64'($t64, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,15537,15586)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_local[$t47]($t66) at pivot-tst/contract/sources/pivot_markets.move:375:34+49
    assume {:print "$track_local(101,4,13):", $t66} $t66 == $t66;

    // if ($t65) goto L22 else goto L54 at pivot-tst/contract/sources/pivot_markets.move:376:13+84
    assume {:print "$at(2,15600,15684)"} true;
    if ($t65) { goto L22; } else { goto L54; }

    // label L22 at pivot-tst/contract/sources/pivot_markets.move:377:32+17
    assume {:print "$at(2,15644,15661)"} true;
L22:

    // $t67 := vector::remove<u64>($t63, $t66) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:377:17+40
    assume {:print "$at(2,15629,15669)"} true;
    call $t67,$t63 := $1_vector_remove'u64'($t63, $t66);
    if ($abort_flag) {
        assume {:print "$at(2,15629,15669)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // write_back[Reference($t62)[]]($t63) at pivot-tst/contract/sources/pivot_markets.move:377:17+40
    $t62 := $UpdateMutation($t62, UpdateTable($Dereference($t62), ReadVec($t63->p, LenVec($t62->p)), $Dereference($t63)));

    // write_back[Reference($t24).user_positions (0x1::table::Table<address, vector<u64>>)]($t62) at pivot-tst/contract/sources/pivot_markets.move:377:17+40
    $t24 := $UpdateMutation($t24, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_user_positions($Dereference($t24), $Dereference($t62)));

    // write_back[Reference($t23)[]]($t24) at pivot-tst/contract/sources/pivot_markets.move:377:17+40
    $t23 := $UpdateMutation($t23, UpdateTable($Dereference($t23), ReadVec($t24->p, LenVec($t23->p)), $Dereference($t24)));

    // write_back[Reference($t19).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t23) at pivot-tst/contract/sources/pivot_markets.move:377:17+40
    $t19 := $UpdateMutation($t19, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t19), $Dereference($t23)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t19): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t19), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t19)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t19)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t19) at pivot-tst/contract/sources/pivot_markets.move:377:17+40
    assume {:print "$at(2,15629,15669)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // drop($t67) at pivot-tst/contract/sources/pivot_markets.move:377:17+40

    // label L23 at pivot-tst/contract/sources/pivot_markets.move:336:28+2264
    assume {:print "$at(2,13438,15702)"} true;
L23:

    // goto L39 at pivot-tst/contract/sources/pivot_markets.move:336:28+2264
    assume {:print "$at(2,13438,15702)"} true;
    goto L39;

    // label L21 at pivot-tst/contract/sources/pivot_markets.move:376:13+84
    assume {:print "$at(2,15600,15684)"} true;
L21:

    // write_back[Reference($t23)[]]($t24) at pivot-tst/contract/sources/pivot_markets.move:376:13+84
    assume {:print "$at(2,15600,15684)"} true;
    $t23 := $UpdateMutation($t23, UpdateTable($Dereference($t23), ReadVec($t24->p, LenVec($t23->p)), $Dereference($t24)));

    // write_back[Reference($t19).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t23) at pivot-tst/contract/sources/pivot_markets.move:376:13+84
    $t19 := $UpdateMutation($t19, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t19), $Dereference($t23)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t19): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t19), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t19)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t19)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t19) at pivot-tst/contract/sources/pivot_markets.move:376:13+84
    assume {:print "$at(2,15600,15684)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // drop($t63) at pivot-tst/contract/sources/pivot_markets.move:376:13+84

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:376:13+84
    goto L23;

    // label L19 at pivot-tst/contract/sources/pivot_markets.move:373:9+343
    assume {:print "$at(2,15352,15695)"} true;
L19:

    // write_back[Reference($t23)[]]($t24) at pivot-tst/contract/sources/pivot_markets.move:373:9+343
    assume {:print "$at(2,15352,15695)"} true;
    $t23 := $UpdateMutation($t23, UpdateTable($Dereference($t23), ReadVec($t24->p, LenVec($t23->p)), $Dereference($t24)));

    // write_back[Reference($t19).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t23) at pivot-tst/contract/sources/pivot_markets.move:373:9+343
    $t19 := $UpdateMutation($t19, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t19), $Dereference($t23)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t19): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t19), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t19)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t19)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t19) at pivot-tst/contract/sources/pivot_markets.move:373:9+343
    assume {:print "$at(2,15352,15695)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // drop($t24) at pivot-tst/contract/sources/pivot_markets.move:373:9+343

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:373:9+343
    goto L23;

    // label L17 at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    assume {:print "$at(2,14929,14960)"} true;
L17:

    // $t14 := coin::extract_all<#0>($t8) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    assume {:print "$at(2,14929,14960)"} true;
    call $t14,$t8 := $1_coin_extract_all'#0'($t8);
    if ($abort_flag) {
        assume {:print "$at(2,14929,14960)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // $t68 := is_parent[Reference($t16)@]($t8) at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    $t68 := $IsSameMutation($t16, $t8);

    // if ($t68) goto L31 else goto L55 at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    if ($t68) { goto L31; } else { goto L55; }

    // label L31 at pivot-tst/contract/sources/pivot_markets.move:362:37+31
L31:

    // write_back[Reference($t16)@]($t8) at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    assume {:print "$at(2,14929,14960)"} true;
    $t16 := $UpdateMutation($t16, $Dereference($t8));

    // write_back[Reference($t24).yes_pool (0x1::coin::Coin<#0>)]($t16) at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    $t24 := $UpdateMutation($t24, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_yes_pool($Dereference($t24), $Dereference($t16)));

    // label L32 at pivot-tst/contract/sources/pivot_markets.move:362:37+31
L32:

    // $t69 := is_parent[Reference($t17)@]($t8) at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    assume {:print "$at(2,14929,14960)"} true;
    $t69 := $IsSameMutation($t17, $t8);

    // if ($t69) goto L33 else goto L56 at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    if ($t69) { goto L33; } else { goto L56; }

    // label L33 at pivot-tst/contract/sources/pivot_markets.move:362:37+31
L33:

    // write_back[Reference($t17)@]($t8) at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    assume {:print "$at(2,14929,14960)"} true;
    $t17 := $UpdateMutation($t17, $Dereference($t8));

    // write_back[Reference($t24).no_pool (0x1::coin::Coin<#0>)]($t17) at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    $t24 := $UpdateMutation($t24, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_no_pool($Dereference($t24), $Dereference($t17)));

    // label L34 at pivot-tst/contract/sources/pivot_markets.move:362:37+31
L34:

    // trace_local[remaining]($t14) at pivot-tst/contract/sources/pivot_markets.move:362:37+31
    assume {:print "$at(2,14929,14960)"} true;
    assume {:print "$track_local(101,4,14):", $t14} $t14 == $t14;

    // $t70 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t24) at pivot-tst/contract/sources/pivot_markets.move:363:52+26
    assume {:print "$at(2,15013,15039)"} true;
    $t70 := $ChildMutation($t24, 5, $Dereference($t24)->$liquidity_pool);

    // $t71 := copy($t14) at pivot-tst/contract/sources/pivot_markets.move:363:108+10
    $t71 := $t14;

    // $t72 := coin::value<#0>($t71) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:363:96+23
    call $t72 := $1_coin_value'#0'($t71);
    if ($abort_flag) {
        assume {:print "$at(2,15057,15080)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // $t73 := -($t52, $t72) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:363:80+39
    call $t73 := $Sub($t52, $t72);
    if ($abort_flag) {
        assume {:print "$at(2,15041,15080)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // $t74 := coin::extract<#0>($t70, $t73) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:363:38+82
    call $t74,$t70 := $1_coin_extract'#0'($t70, $t73);
    if ($abort_flag) {
        assume {:print "$at(2,14999,15081)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // write_back[Reference($t24).liquidity_pool (0x1::coin::Coin<#0>)]($t70) at pivot-tst/contract/sources/pivot_markets.move:363:38+82
    $t24 := $UpdateMutation($t24, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_pool($Dereference($t24), $Dereference($t70)));

    // trace_local[additional]($t74) at pivot-tst/contract/sources/pivot_markets.move:363:38+82
    assume {:print "$track_local(101,4,15):", $t74} $t74 == $t74;

    // $t75 := borrow_local($t14) at pivot-tst/contract/sources/pivot_markets.move:364:33+14
    assume {:print "$at(2,15115,15129)"} true;
    $t75 := $Mutation($Local(14), EmptyVec(), $t14);

    // coin::merge<#0>($t75, $t74) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:364:21+39
    call $t75 := $1_coin_merge'#0'($t75, $t74);
    if ($abort_flag) {
        assume {:print "$at(2,15103,15142)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // write_back[LocalRoot($t14)@]($t75) at pivot-tst/contract/sources/pivot_markets.move:364:21+39
    $t14 := $Dereference($t75);

    // trace_local[remaining]($t14) at pivot-tst/contract/sources/pivot_markets.move:364:21+39
    assume {:print "$track_local(101,4,14):", $t14} $t14 == $t14;

    // $t76 := move($t14) at pivot-tst/contract/sources/pivot_markets.move:365:21+9
    assume {:print "$at(2,15164,15173)"} true;
    $t76 := $t14;

    // $t11 := $t76 at pivot-tst/contract/sources/pivot_markets.move:365:21+9
    $t11 := $t76;

    // trace_local[payout_coin]($t76) at pivot-tst/contract/sources/pivot_markets.move:365:21+9
    assume {:print "$track_local(101,4,11):", $t76} $t76 == $t76;

    // goto L24 at pivot-tst/contract/sources/pivot_markets.move:365:21+9
    goto L24;

    // label L15 at pivot-tst/contract/sources/pivot_markets.move:355:13+799
    assume {:print "$at(2,14479,15278)"} true;
L15:

    // label L36 at pivot-tst/contract/sources/pivot_markets.move:355:13+799
    assume {:print "$at(2,14479,15278)"} true;
L36:

    // label L38 at pivot-tst/contract/sources/pivot_markets.move:355:13+799
    assume {:print "$at(2,14479,15278)"} true;
L38:

    // drop($t8) at pivot-tst/contract/sources/pivot_markets.move:355:13+799
    assume {:print "$at(2,14479,15278)"} true;

    // goto L10 at pivot-tst/contract/sources/pivot_markets.move:355:13+799
    goto L10;

    // label L13 at pivot-tst/contract/sources/pivot_markets.move:353:87+22
    assume {:print "$at(2,14430,14452)"} true;
L13:

    // $t77 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t24) at pivot-tst/contract/sources/pivot_markets.move:353:87+22
    assume {:print "$at(2,14430,14452)"} true;
    $t77 := $Dereference($t24)->$total_no_shares;

    // $t9 := $t77 at pivot-tst/contract/sources/pivot_markets.move:353:87+22
    $t9 := $t77;

    // trace_local[total_winning_shares]($t77) at pivot-tst/contract/sources/pivot_markets.move:353:87+22
    assume {:print "$track_local(101,4,9):", $t77} $t77 == $t77;

    // goto L25 at pivot-tst/contract/sources/pivot_markets.move:353:87+22
    goto L25;

    // label L11 at pivot-tst/contract/sources/pivot_markets.move:352:76+19
    assume {:print "$at(2,14323,14342)"} true;
L11:

    // $t17 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.no_pool($t24) at pivot-tst/contract/sources/pivot_markets.move:352:76+19
    assume {:print "$at(2,14323,14342)"} true;
    $t17 := $ChildMutation($t24, 4, $Dereference($t24)->$no_pool);

    // $t8 := $t17 at pivot-tst/contract/sources/pivot_markets.move:352:76+19
    $t8 := $t17;

    // trace_local[winning_pool]($t17) at pivot-tst/contract/sources/pivot_markets.move:352:76+19
    $temp_0'$1_coin_Coin'#0'' := $Dereference($t17);
    assume {:print "$track_local(101,4,8):", $temp_0'$1_coin_Coin'#0''} $temp_0'$1_coin_Coin'#0'' == $temp_0'$1_coin_Coin'#0'';

    // goto L26 at pivot-tst/contract/sources/pivot_markets.move:352:76+19
    goto L26;

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:346:9+6
    assume {:print "$at(2,14007,14013)"} true;
L6:

    // write_back[Reference($t23)[]]($t24) at pivot-tst/contract/sources/pivot_markets.move:346:9+6
    assume {:print "$at(2,14007,14013)"} true;
    $t23 := $UpdateMutation($t23, UpdateTable($Dereference($t23), ReadVec($t24->p, LenVec($t23->p)), $Dereference($t24)));

    // write_back[Reference($t19).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t23) at pivot-tst/contract/sources/pivot_markets.move:346:9+6
    $t19 := $UpdateMutation($t19, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t19), $Dereference($t23)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t19): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t19), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t19)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t19)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t19) at pivot-tst/contract/sources/pivot_markets.move:346:9+6
    assume {:print "$at(2,14007,14013)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // drop($t24) at pivot-tst/contract/sources/pivot_markets.move:346:9+6

    // $t78 := 0 at pivot-tst/contract/sources/pivot_markets.move:346:70+11
    $t78 := 0;
    assume $IsValid'u64'($t78);

    // $t79 := error::permission_denied($t78) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:346:45+37
    call $t79 := $1_error_permission_denied($t78);
    if ($abort_flag) {
        assume {:print "$at(2,14043,14080)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_abort($t79) at pivot-tst/contract/sources/pivot_markets.move:346:9+6
    assume {:print "$at(2,14007,14013)"} true;
    assume {:print "$track_abort(101,4):", $t79} $t79 == $t79;

    // $t20 := move($t79) at pivot-tst/contract/sources/pivot_markets.move:346:9+6
    $t20 := $t79;

    // goto L40 at pivot-tst/contract/sources/pivot_markets.move:346:9+6
    goto L40;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:342:9+6
    assume {:print "$at(2,13776,13782)"} true;
L4:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t19): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t19), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t19)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t19)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t24) at pivot-tst/contract/sources/pivot_markets.move:342:9+6
    assume {:print "$at(2,13776,13782)"} true;

    // $t80 := 10 at pivot-tst/contract/sources/pivot_markets.move:342:83+20
    $t80 := 10;
    assume $IsValid'u64'($t80);

    // $t81 := error::not_found($t80) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:342:66+38
    call $t81 := $1_error_not_found($t80);
    if ($abort_flag) {
        assume {:print "$at(2,13833,13871)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_abort($t81) at pivot-tst/contract/sources/pivot_markets.move:342:9+6
    assume {:print "$at(2,13776,13782)"} true;
    assume {:print "$track_abort(101,4):", $t81} $t81 == $t81;

    // $t20 := move($t81) at pivot-tst/contract/sources/pivot_markets.move:342:9+6
    $t20 := $t81;

    // goto L40 at pivot-tst/contract/sources/pivot_markets.move:342:9+6
    goto L40;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:341:9+6
    assume {:print "$at(2,13697,13703)"} true;
L2:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t19): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t19), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t19)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t19)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t24) at pivot-tst/contract/sources/pivot_markets.move:341:9+6
    assume {:print "$at(2,13697,13703)"} true;

    // $t82 := 4 at pivot-tst/contract/sources/pivot_markets.move:341:55+21
    $t82 := 4;
    assume $IsValid'u64'($t82);

    // $t83 := error::invalid_state($t82) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:341:34+43
    call $t83 := $1_error_invalid_state($t82);
    if ($abort_flag) {
        assume {:print "$at(2,13722,13765)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_abort($t83) at pivot-tst/contract/sources/pivot_markets.move:341:9+6
    assume {:print "$at(2,13697,13703)"} true;
    assume {:print "$track_abort(101,4):", $t83} $t83 == $t83;

    // $t20 := move($t83) at pivot-tst/contract/sources/pivot_markets.move:341:9+6
    $t20 := $t83;

    // goto L40 at pivot-tst/contract/sources/pivot_markets.move:341:9+6
    goto L40;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:338:9+6
    assume {:print "$at(2,13526,13532)"} true;
L0:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t19): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t19), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t19)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t19)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t19) at pivot-tst/contract/sources/pivot_markets.move:338:9+6
    assume {:print "$at(2,13526,13532)"} true;

    // $t84 := 8 at pivot-tst/contract/sources/pivot_markets.move:338:78+18
    $t84 := 8;
    assume $IsValid'u64'($t84);

    // $t85 := error::not_found($t84) on_abort goto L40 with $t20 at pivot-tst/contract/sources/pivot_markets.move:338:61+36
    call $t85 := $1_error_not_found($t84);
    if ($abort_flag) {
        assume {:print "$at(2,13578,13614)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(101,4):", $t20} $t20 == $t20;
        goto L40;
    }

    // trace_abort($t85) at pivot-tst/contract/sources/pivot_markets.move:338:9+6
    assume {:print "$at(2,13526,13532)"} true;
    assume {:print "$track_abort(101,4):", $t85} $t85 == $t85;

    // $t20 := move($t85) at pivot-tst/contract/sources/pivot_markets.move:338:9+6
    $t20 := $t85;

    // goto L40 at pivot-tst/contract/sources/pivot_markets.move:338:9+6
    goto L40;

    // label L39 at pivot-tst/contract/sources/pivot_markets.move:380:5+1
    assume {:print "$at(2,15701,15702)"} true;
L39:

    // return () at pivot-tst/contract/sources/pivot_markets.move:380:5+1
    assume {:print "$at(2,15701,15702)"} true;
    return;

    // label L40 at pivot-tst/contract/sources/pivot_markets.move:380:5+1
L40:

    // abort($t20) at pivot-tst/contract/sources/pivot_markets.move:380:5+1
    assume {:print "$at(2,15701,15702)"} true;
    $abort_code := $t20;
    $abort_flag := true;
    return;

    // label L43 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L43:

    // drop($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t17) at <internal>:1:1+10

    // goto L0 at <internal>:1:1+10
    goto L0;

    // label L44 at <internal>:1:1+10
L44:

    // drop($t23) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t16) at <internal>:1:1+10

    // drop($t17) at <internal>:1:1+10

    // goto L2 at <internal>:1:1+10
    goto L2;

    // label L45 at <internal>:1:1+10
L45:

    // drop($t23) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t16) at <internal>:1:1+10

    // drop($t17) at <internal>:1:1+10

    // goto L4 at <internal>:1:1+10
    goto L4;

    // label L46 at <internal>:1:1+10
L46:

    // drop($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t17) at <internal>:1:1+10

    // goto L6 at <internal>:1:1+10
    goto L6;

    // label L47 at <internal>:1:1+10
L47:

    // drop($t19) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t23) at <internal>:1:1+10

    // drop($t24) at <internal>:1:1+10

    // drop($t16) at <internal>:1:1+10

    // drop($t17) at <internal>:1:1+10

    // goto L42 at <internal>:1:1+10
    goto L42;

    // label L48 at <internal>:1:1+10
L48:

    // drop($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t17) at <internal>:1:1+10

    // goto L10 at <internal>:1:1+10
    goto L10;

    // label L49 at <internal>:1:1+10
L49:

    // drop($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L12 at <internal>:1:1+10
    goto L12;

    // label L50 at <internal>:1:1+10
L50:

    // drop($t17) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L11 at <internal>:1:1+10
    goto L11;

    // label L51 at <internal>:1:1+10
L51:

    // drop($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t17) at <internal>:1:1+10

    // goto L15 at <internal>:1:1+10
    goto L15;

    // label L52 at <internal>:1:1+10
L52:

    // drop($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L28 at <internal>:1:1+10
    goto L28;

    // label L53 at <internal>:1:1+10
L53:

    // drop($t8) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t17) at <internal>:1:1+10

    // goto L30 at <internal>:1:1+10
    goto L30;

    // label L54 at <internal>:1:1+10
L54:

    // drop($t62) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L21 at <internal>:1:1+10
    goto L21;

    // label L55 at <internal>:1:1+10
L55:

    // drop($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L32 at <internal>:1:1+10
    goto L32;

    // label L56 at <internal>:1:1+10
L56:

    // drop($t8) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t17) at <internal>:1:1+10

    // goto L34 at <internal>:1:1+10
    goto L34;

}

// fun pivot_markets::create_market [verification] at pivot-tst/contract/sources/pivot_markets.move:91:5+1461
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_create_market$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: int, _$t4: int) returns ()
{
    // declare local variables
    var $t5: int;
    var $t6: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t7: int;
    var $t8: $1_coin_Coin'#0';
    var $t9: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation (int);
    var $t20: int;
    var $t21: $1_coin_CoinStore'#0';
    var $t22: int;
    var $t23: int;
    var $t24: $1_coin_CoinStore'#0';
    var $t25: int;
    var $t26: $1_coin_Coin'#0';
    var $t27: $1_coin_Coin'#0';
    var $t28: $1_coin_Coin'#0';
    var $t29: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var $t30: Table int (Vec (int));
    var $t31: int;
    var $t32: bool;
    var $t33: $1_option_Option'u8';
    var $t34: int;
    var $t35: int;
    var $t36: Table int (int);
    var $t37: int;
    var $t38: int;
    var $t39: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t40: $Mutation (Table int (int));
    var $t41: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'));
    var $t42: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t43: int;
    var $t44: int;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume {:print "$at(2,3217,3218)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume $IsValid'u64'($t2);

    // assume WellFormed($t3) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume $IsValid'address'($t3);

    // assume WellFormed($t4) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume $IsValid'u64'($t4);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::timestamp::CurrentTimeMicroseconds: ResourceDomain<0x1::timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: 0x1::permissioned_signer::PermissionStorage: ResourceDomain<0x1::permissioned_signer::PermissionStorage>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0)}(var $rsc := $ResourceValue($1_permissioned_signer_PermissionStorage_$memory, $a_0);
    ($IsValid'$1_permissioned_signer_PermissionStorage'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::TombStone: ResourceDomain<0x1::object::TombStone>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::reconfiguration::Configuration: ResourceDomain<0x1::reconfiguration::Configuration>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::timestamp::CurrentTimeMicroseconds>(0x1)) at pivot-tst/contract/sources/pivot_markets.move:91:5+1461
    // global invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.spec.move:36:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at pivot-tst/contract/sources/pivot_markets.move:91:5+1461
    // global invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.spec.move:51:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[admin]($t0) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume {:print "$track_local(101,5,0):", $t0} $t0 == $t0;

    // trace_local[description]($t1) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume {:print "$track_local(101,5,1):", $t1} $t1 == $t1;

    // trace_local[end_time]($t2) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume {:print "$track_local(101,5,2):", $t2} $t2 == $t2;

    // trace_local[oracle]($t3) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume {:print "$track_local(101,5,3):", $t3} $t3 == $t3;

    // trace_local[initial_liquidity]($t4) at pivot-tst/contract/sources/pivot_markets.move:91:5+1
    assume {:print "$track_local(101,5,4):", $t4} $t4 == $t4;

    // $t10 := signer::address_of($t0) on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:98:26+25
    assume {:print "$at(2,3445,3470)"} true;
    call $t10 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,3445,3470)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // trace_local[admin_addr]($t10) at pivot-tst/contract/sources/pivot_markets.move:98:26+25
    assume {:print "$track_local(101,5,5):", $t10} $t10 == $t10;

    // $t12 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:99:62+14
    assume {:print "$at(2,3533,3547)"} true;
    $t12 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t12);

    // $t13 := borrow_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t12) on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:99:21+56
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t12)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t12), EmptyVec(), $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t12));
    }
    if ($abort_flag) {
        assume {:print "$at(2,3492,3548)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // trace_local[store]($t13) at pivot-tst/contract/sources/pivot_markets.move:99:21+56
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' := $Dereference($t13);
    assume {:print "$track_local(101,5,6):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'';

    // $t14 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.admin($t13) at pivot-tst/contract/sources/pivot_markets.move:100:31+11
    assume {:print "$at(2,3580,3591)"} true;
    $t14 := $Dereference($t13)->$admin;

    // $t15 := ==($t10, $t14) at pivot-tst/contract/sources/pivot_markets.move:100:17+25
    $t15 := $IsEqual'address'($t10, $t14);

    // if ($t15) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:100:9+6
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:102:18+13
    assume {:print "$at(2,3651,3664)"} true;
L1:

    // $t16 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.next_id($t13) at pivot-tst/contract/sources/pivot_markets.move:102:18+13
    assume {:print "$at(2,3651,3664)"} true;
    $t16 := $Dereference($t13)->$next_id;

    // trace_local[id]($t16) at pivot-tst/contract/sources/pivot_markets.move:102:18+13
    assume {:print "$track_local(101,5,7):", $t16} $t16 == $t16;

    // $t17 := 1 at pivot-tst/contract/sources/pivot_markets.move:103:30+1
    assume {:print "$at(2,3695,3696)"} true;
    $t17 := 1;
    assume $IsValid'u64'($t17);

    // $t18 := +($t16, $t17) on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:103:25+6
    call $t18 := $AddU64($t16, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,3690,3696)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t19 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.next_id($t13) at pivot-tst/contract/sources/pivot_markets.move:103:9+13
    $t19 := $ChildMutation($t13, 2, $Dereference($t13)->$next_id);

    // write_ref($t19, $t18) at pivot-tst/contract/sources/pivot_markets.move:103:9+22
    $t19 := $UpdateMutation($t19, $t18);

    // write_back[Reference($t13).next_id (u64)]($t19) at pivot-tst/contract/sources/pivot_markets.move:103:9+22
    $t13 := $UpdateMutation($t13, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_next_id($Dereference($t13), $Dereference($t19)));

    // assume Identical($t20, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:525:9+47
    assume {:print "$at(131,22469,22516)"} true;
    assume ($t20 == $1_signer_$address_of($t0));

    // assume Identical($t21, global<0x1::coin::CoinStore<#0>>($t20)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:526:9+59
    assume {:print "$at(131,22525,22584)"} true;
    assume ($t21 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t20));

    // assume Identical($t22, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t21))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:527:9+36
    assume {:print "$at(131,22593,22629)"} true;
    assume ($t22 == $t21->$coin->$value);

    // assume Identical($t23, signer::$address_of($t0)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:535:9+47
    assume {:print "$at(131,22926,22973)"} true;
    assume ($t23 == $1_signer_$address_of($t0));

    // assume Identical($t24, global<0x1::coin::CoinStore<#0>>($t23)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:536:9+59
    assume {:print "$at(131,22982,23041)"} true;
    assume ($t24 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t23));

    // assume Identical($t25, select coin::Coin.value<0x1::coin::Coin<#0>>(select coin::CoinStore.coin<0x1::coin::CoinStore<#0>>($t24))) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:537:9+36
    assume {:print "$at(131,23050,23086)"} true;
    assume ($t25 == $t24->$coin->$value);

    // $t26 := coin::withdraw<#0>($t0, $t4) on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:105:30+50
    assume {:print "$at(2,3728,3778)"} true;
    call $t26 := $1_coin_withdraw'#0'($t0, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,3728,3778)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // trace_local[liquidity_coin]($t26) at pivot-tst/contract/sources/pivot_markets.move:105:30+50
    assume {:print "$track_local(101,5,8):", $t26} $t26 == $t26;

    // $t27 := coin::zero<#0>() on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:111:23+22
    assume {:print "$at(2,3914,3936)"} true;
    call $t27 := $1_coin_zero'#0'();
    if ($abort_flag) {
        assume {:print "$at(2,3914,3936)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t28 := coin::zero<#0>() on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:112:22+22
    assume {:print "$at(2,3959,3981)"} true;
    call $t28 := $1_coin_zero'#0'();
    if ($abort_flag) {
        assume {:print "$at(2,3959,3981)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t29 := table::new<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>() on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:114:24+12
    assume {:print "$at(2,4050,4062)"} true;
    call $t29 := $1_table_new'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'();
    if ($abort_flag) {
        assume {:print "$at(2,4050,4062)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t30 := table::new<address, vector<u64>>() on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:115:29+12
    assume {:print "$at(2,4092,4104)"} true;
    call $t30 := $1_table_new'address_vec'u64''();
    if ($abort_flag) {
        assume {:print "$at(2,4092,4104)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t31 := 0 at pivot-tst/contract/sources/pivot_markets.move:116:31+1
    assume {:print "$at(2,4136,4137)"} true;
    $t31 := 0;
    assume $IsValid'u64'($t31);

    // $t32 := false at pivot-tst/contract/sources/pivot_markets.move:117:23+5
    assume {:print "$at(2,4161,4166)"} true;
    $t32 := false;
    assume $IsValid'bool'($t32);

    // $t33 := opaque begin: option::none<u8>() at pivot-tst/contract/sources/pivot_markets.move:118:22+14
    assume {:print "$at(2,4189,4203)"} true;

    // assume And(WellFormed($t33), Le(Len<u8>(select option::Option.vec($t33)), 1)) at pivot-tst/contract/sources/pivot_markets.move:118:22+14
    assume ($IsValid'$1_option_Option'u8''($t33) && (LenVec($t33->$vec) <= 1));

    // assume Eq<0x1::option::Option<u8>>($t33, option::spec_none<u8>()) at pivot-tst/contract/sources/pivot_markets.move:118:22+14
    assume $IsEqual'$1_option_Option'u8''($t33, $1_option_spec_none'u8'());

    // $t33 := opaque end: option::none<u8>() at pivot-tst/contract/sources/pivot_markets.move:118:22+14

    // $t34 := 0 at pivot-tst/contract/sources/pivot_markets.move:120:31+1
    assume {:print "$at(2,4255,4256)"} true;
    $t34 := 0;
    assume $IsValid'u64'($t34);

    // $t35 := 0 at pivot-tst/contract/sources/pivot_markets.move:121:30+1
    assume {:print "$at(2,4287,4288)"} true;
    $t35 := 0;
    assume $IsValid'u64'($t35);

    // $t36 := table::new<address, u64>() on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:122:34+12
    assume {:print "$at(2,4323,4335)"} true;
    call $t36 := $1_table_new'address_u64'();
    if ($abort_flag) {
        assume {:print "$at(2,4323,4335)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t37 := 0 at pivot-tst/contract/sources/pivot_markets.move:124:32+1
    assume {:print "$at(2,4416,4417)"} true;
    $t37 := 0;
    assume $IsValid'u64'($t37);

    // $t38 := timestamp::now_seconds() on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:125:28+24
    assume {:print "$at(2,4446,4470)"} true;
    call $t38 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,4446,4470)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // $t9 := pack 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>($t16, $t1, $t2, $t27, $t28, $t26, $t29, $t30, $t31, $t32, $t33, $t3, $t34, $t35, $t36, $t4, $t37, $t38) at pivot-tst/contract/sources/pivot_markets.move:107:22+671
    assume {:print "$at(2,3810,4481)"} true;
    $t9 := $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'($t16, $t1, $t2, $t27, $t28, $t26, $t29, $t30, $t31, $t32, $t33, $t3, $t34, $t35, $t36, $t4, $t37, $t38);

    // trace_local[market]($t9) at pivot-tst/contract/sources/pivot_markets.move:107:22+671
    assume {:print "$track_local(101,5,9):", $t9} $t9 == $t9;

    // $t39 := borrow_local($t9) at pivot-tst/contract/sources/pivot_markets.move:129:25+6
    assume {:print "$at(2,4561,4567)"} true;
    $t39 := $Mutation($Local(9), EmptyVec(), $t9);

    // $t40 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_providers($t39) at pivot-tst/contract/sources/pivot_markets.move:129:20+31
    $t40 := $ChildMutation($t39, 14, $Dereference($t39)->$liquidity_providers);

    // table::add<address, u64>($t40, $t10, $t4) on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:129:9+74
    call $t40 := $1_table_add'address_u64'($t40, $t10, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,4545,4619)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // write_back[Reference($t39).liquidity_providers (0x1::table::Table<address, u64>)]($t40) at pivot-tst/contract/sources/pivot_markets.move:129:9+74
    $t39 := $UpdateMutation($t39, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_providers($Dereference($t39), $Dereference($t40)));

    // assert Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome($t39))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (LenVec($Dereference($t39)->$outcome->$vec) <= 1);

    // write_back[LocalRoot($t9)@]($t39) at pivot-tst/contract/sources/pivot_markets.move:129:9+74
    assume {:print "$at(2,4545,4619)"} true;
    $t9 := $Dereference($t39);

    // trace_local[market]($t9) at pivot-tst/contract/sources/pivot_markets.move:129:9+74
    assume {:print "$track_local(101,5,9):", $t9} $t9 == $t9;

    // $t41 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t13) at pivot-tst/contract/sources/pivot_markets.move:130:20+18
    assume {:print "$at(2,4640,4658)"} true;
    $t41 := $ChildMutation($t13, 1, $Dereference($t13)->$markets);

    // $t42 := move($t9) at pivot-tst/contract/sources/pivot_markets.move:130:9+42
    $t42 := $t9;

    // table::add<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t41, $t16, $t42) on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:130:9+42
    call $t41 := $1_table_add'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t41, $t16, $t42);
    if ($abort_flag) {
        assume {:print "$at(2,4629,4671)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // write_back[Reference($t13).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t41) at pivot-tst/contract/sources/pivot_markets.move:130:9+42
    $t13 := $UpdateMutation($t13, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t13), $Dereference($t41)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t13): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t13), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t13)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t13)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t13) at pivot-tst/contract/sources/pivot_markets.move:130:9+42
    assume {:print "$at(2,4629,4671)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // goto L2 at pivot-tst/contract/sources/pivot_markets.move:97:28+1260
    assume {:print "$at(2,3418,4678)"} true;
    goto L2;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:100:9+6
    assume {:print "$at(2,3558,3564)"} true;
L0:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t13): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t13), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t13)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t13)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t13) at pivot-tst/contract/sources/pivot_markets.move:100:9+6
    assume {:print "$at(2,3558,3564)"} true;

    // $t43 := 0 at pivot-tst/contract/sources/pivot_markets.move:100:69+11
    $t43 := 0;
    assume $IsValid'u64'($t43);

    // $t44 := error::permission_denied($t43) on_abort goto L3 with $t11 at pivot-tst/contract/sources/pivot_markets.move:100:44+37
    call $t44 := $1_error_permission_denied($t43);
    if ($abort_flag) {
        assume {:print "$at(2,3593,3630)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(101,5):", $t11} $t11 == $t11;
        goto L3;
    }

    // trace_abort($t44) at pivot-tst/contract/sources/pivot_markets.move:100:9+6
    assume {:print "$at(2,3558,3564)"} true;
    assume {:print "$track_abort(101,5):", $t44} $t44 == $t44;

    // $t11 := move($t44) at pivot-tst/contract/sources/pivot_markets.move:100:9+6
    $t11 := $t44;

    // goto L3 at pivot-tst/contract/sources/pivot_markets.move:100:9+6
    goto L3;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:131:5+1
    assume {:print "$at(2,4677,4678)"} true;
L2:

    // return () at pivot-tst/contract/sources/pivot_markets.move:131:5+1
    assume {:print "$at(2,4677,4678)"} true;
    return;

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:131:5+1
L3:

    // abort($t11) at pivot-tst/contract/sources/pivot_markets.move:131:5+1
    assume {:print "$at(2,4677,4678)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun pivot_markets::get_market_details [verification] at pivot-tst/contract/sources/pivot_markets.move:384:5+1576
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_get_market_details$verify(_$t0: int) returns ($ret0: int, $ret1: $1_string_String, $ret2: int, $ret3: int, $ret4: int, $ret5: int, $ret6: bool, $ret7: $1_option_Option'u8', $ret8: int, $ret9: int, $ret10: int, $ret11: int, $ret12: int, $ret13: int, $ret14: int, $ret15: int)
{
    // declare local variables
    var $t1: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $t2: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $1_option_Option'u8';
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $t21: int;
    var $t22: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t23: bool;
    var $t24: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t25: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: $1_coin_Coin'#0';
    var $t31: int;
    var $t32: $1_coin_Coin'#0';
    var $t33: int;
    var $t34: int;
    var $t35: $1_coin_Coin'#0';
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: $1_string_String;
    var $t40: int;
    var $t41: $1_coin_Coin'#0';
    var $t42: int;
    var $t43: $1_coin_Coin'#0';
    var $t44: int;
    var $t45: $1_coin_Coin'#0';
    var $t46: int;
    var $t47: bool;
    var $t48: $1_option_Option'u8';
    var $t49: int;
    var $t50: int;
    var $t51: int;
    var $t52: int;
    var $t53: int;
    var $t54: int;
    var $t55: int;
    var $t0: int;
    var $temp_0'$1_option_Option'u8'': $1_option_Option'u8';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:384:5+1
    assume {:print "$at(2,15777,15778)"} true;
    assume $IsValid'u64'($t0);

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at pivot-tst/contract/sources/pivot_markets.move:384:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:384:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:384:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:384:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:384:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:384:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // trace_local[market_id]($t0) at pivot-tst/contract/sources/pivot_markets.move:384:5+1
    assume {:print "$track_local(101,6,0):", $t0} $t0 == $t0;

    // $t19 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:402:58+14
    assume {:print "$at(2,16388,16402)"} true;
    $t19 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t19);

    // $t20 := get_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t19) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:402:21+52
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(2,16351,16403)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // trace_local[store]($t20) at pivot-tst/contract/sources/pivot_markets.move:402:21+52
    assume {:print "$track_local(101,6,1):", $t20} $t20 == $t20;

    // $t22 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t20) at pivot-tst/contract/sources/pivot_markets.move:403:33+14
    assume {:print "$at(2,16437,16451)"} true;
    $t22 := $t20->$markets;

    // $t23 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t22, $t0) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:403:17+42
    call $t23 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t22, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,16421,16463)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // if ($t23) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:403:9+6
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:404:36+14
    assume {:print "$at(2,16539,16553)"} true;
L1:

    // $t24 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t20) at pivot-tst/contract/sources/pivot_markets.move:404:36+14
    assume {:print "$at(2,16539,16553)"} true;
    $t24 := $t20->$markets;

    // $t25 := table::borrow<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t24, $t0) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:404:22+40
    call $t25 := $1_table_borrow'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t24, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,16525,16565)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // trace_local[market]($t25) at pivot-tst/contract/sources/pivot_markets.move:404:22+40
    assume {:print "$track_local(101,6,2):", $t25} $t25 == $t25;

    // $t26 := 1 at pivot-tst/contract/sources/pivot_markets.move:406:49+1
    assume {:print "$at(2,16616,16617)"} true;
    $t26 := 1;
    assume $IsValid'u8'($t26);

    // $t27 := pivot_markets::calculate_price<#0>($t25, $t26) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:406:25+26
    call $t27 := $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_calculate_price'#0'($t25, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,16592,16618)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // trace_local[yes_price]($t27) at pivot-tst/contract/sources/pivot_markets.move:406:25+26
    assume {:print "$track_local(101,6,3):", $t27} $t27 == $t27;

    // $t28 := 2 at pivot-tst/contract/sources/pivot_markets.move:407:48+1
    assume {:print "$at(2,16667,16668)"} true;
    $t28 := 2;
    assume $IsValid'u8'($t28);

    // $t29 := pivot_markets::calculate_price<#0>($t25, $t28) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:407:24+26
    call $t29 := $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_calculate_price'#0'($t25, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,16643,16669)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // trace_local[no_price]($t29) at pivot-tst/contract/sources/pivot_markets.move:407:24+26
    assume {:print "$track_local(101,6,4):", $t29} $t29 == $t29;

    // $t30 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.yes_pool($t25) at pivot-tst/contract/sources/pivot_markets.move:408:46+16
    assume {:print "$at(2,16716,16732)"} true;
    $t30 := $t25->$yes_pool;

    // $t31 := coin::value<#0>($t30) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:408:34+29
    call $t31 := $1_coin_value'#0'($t30);
    if ($abort_flag) {
        assume {:print "$at(2,16704,16733)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // $t32 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.no_pool($t25) at pivot-tst/contract/sources/pivot_markets.move:408:78+15
    $t32 := $t25->$no_pool;

    // $t33 := coin::value<#0>($t32) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:408:66+28
    call $t33 := $1_coin_value'#0'($t32);
    if ($abort_flag) {
        assume {:print "$at(2,16736,16764)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // $t34 := +($t31, $t33) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:408:34+60
    call $t34 := $AddU64($t31, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,16704,16764)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // $t35 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t25) at pivot-tst/contract/sources/pivot_markets.move:408:109+22
    $t35 := $t25->$liquidity_pool;

    // $t36 := coin::value<#0>($t35) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:408:97+35
    call $t36 := $1_coin_value'#0'($t35);
    if ($abort_flag) {
        assume {:print "$at(2,16767,16802)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // $t37 := +($t34, $t36) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:408:34+98
    call $t37 := $AddU64($t34, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,16704,16802)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // trace_local[$t33]($t37) at pivot-tst/contract/sources/pivot_markets.move:408:34+98
    assume {:print "$track_local(101,6,5):", $t37} $t37 == $t37;

    // $t38 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.id($t25) at pivot-tst/contract/sources/pivot_markets.move:411:13+9
    assume {:print "$at(2,16827,16836)"} true;
    $t38 := $t25->$id;

    // $t39 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.description($t25) at pivot-tst/contract/sources/pivot_markets.move:412:13+18
    assume {:print "$at(2,16850,16868)"} true;
    $t39 := $t25->$description;

    // $t40 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.end_time($t25) at pivot-tst/contract/sources/pivot_markets.move:413:13+15
    assume {:print "$at(2,16882,16897)"} true;
    $t40 := $t25->$end_time;

    // $t41 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.yes_pool($t25) at pivot-tst/contract/sources/pivot_markets.move:414:25+16
    assume {:print "$at(2,16923,16939)"} true;
    $t41 := $t25->$yes_pool;

    // $t42 := coin::value<#0>($t41) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:414:13+29
    call $t42 := $1_coin_value'#0'($t41);
    if ($abort_flag) {
        assume {:print "$at(2,16911,16940)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // $t43 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.no_pool($t25) at pivot-tst/contract/sources/pivot_markets.move:415:25+15
    assume {:print "$at(2,16966,16981)"} true;
    $t43 := $t25->$no_pool;

    // $t44 := coin::value<#0>($t43) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:415:13+28
    call $t44 := $1_coin_value'#0'($t43);
    if ($abort_flag) {
        assume {:print "$at(2,16954,16982)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // $t45 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t25) at pivot-tst/contract/sources/pivot_markets.move:416:25+22
    assume {:print "$at(2,17008,17030)"} true;
    $t45 := $t25->$liquidity_pool;

    // $t46 := coin::value<#0>($t45) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:416:13+35
    call $t46 := $1_coin_value'#0'($t45);
    if ($abort_flag) {
        assume {:print "$at(2,16996,17031)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // $t47 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.resolved($t25) at pivot-tst/contract/sources/pivot_markets.move:417:13+15
    assume {:print "$at(2,17045,17060)"} true;
    $t47 := $t25->$resolved;

    // $t48 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.outcome($t25) at pivot-tst/contract/sources/pivot_markets.move:418:13+14
    assume {:print "$at(2,17074,17088)"} true;
    $t48 := $t25->$outcome;

    // $t49 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.oracle($t25) at pivot-tst/contract/sources/pivot_markets.move:419:13+13
    assume {:print "$at(2,17102,17115)"} true;
    $t49 := $t25->$oracle;

    // $t50 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t25) at pivot-tst/contract/sources/pivot_markets.move:420:13+23
    assume {:print "$at(2,17129,17152)"} true;
    $t50 := $t25->$total_yes_shares;

    // $t51 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t25) at pivot-tst/contract/sources/pivot_markets.move:421:13+22
    assume {:print "$at(2,17166,17188)"} true;
    $t51 := $t25->$total_no_shares;

    // $t52 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.participant_count($t25) at pivot-tst/contract/sources/pivot_markets.move:422:13+24
    assume {:print "$at(2,17202,17226)"} true;
    $t52 := $t25->$participant_count;

    // $t53 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.creation_time($t25) at pivot-tst/contract/sources/pivot_markets.move:425:13+20
    assume {:print "$at(2,17285,17305)"} true;
    $t53 := $t25->$creation_time;

    // trace_return[0]($t38) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$at(2,16329,17353)"} true;
    assume {:print "$track_return(101,6,0):", $t38} $t38 == $t38;

    // trace_return[1]($t39) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,1):", $t39} $t39 == $t39;

    // trace_return[2]($t40) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,2):", $t40} $t40 == $t40;

    // trace_return[3]($t42) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,3):", $t42} $t42 == $t42;

    // trace_return[4]($t44) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,4):", $t44} $t44 == $t44;

    // trace_return[5]($t46) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,5):", $t46} $t46 == $t46;

    // trace_return[6]($t47) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,6):", $t47} $t47 == $t47;

    // trace_return[7]($t48) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,7):", $t48} $t48 == $t48;

    // trace_return[8]($t49) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,8):", $t49} $t49 == $t49;

    // trace_return[9]($t50) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,9):", $t50} $t50 == $t50;

    // trace_return[10]($t51) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,10):", $t51} $t51 == $t51;

    // trace_return[11]($t52) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,11):", $t52} $t52 == $t52;

    // trace_return[12]($t27) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,12):", $t27} $t27 == $t27;

    // trace_return[13]($t29) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,13):", $t29} $t29 == $t29;

    // trace_return[14]($t53) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,14):", $t53} $t53 == $t53;

    // trace_return[15]($t37) at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    assume {:print "$track_return(101,6,15):", $t37} $t37 == $t37;

    // goto L2 at pivot-tst/contract/sources/pivot_markets.move:401:28+1024
    goto L2;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:403:9+6
    assume {:print "$at(2,16413,16419)"} true;
L0:

    // $t54 := 8 at pivot-tst/contract/sources/pivot_markets.move:403:78+18
    assume {:print "$at(2,16482,16500)"} true;
    $t54 := 8;
    assume $IsValid'u64'($t54);

    // $t55 := error::not_found($t54) on_abort goto L3 with $t21 at pivot-tst/contract/sources/pivot_markets.move:403:61+36
    call $t55 := $1_error_not_found($t54);
    if ($abort_flag) {
        assume {:print "$at(2,16465,16501)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(101,6):", $t21} $t21 == $t21;
        goto L3;
    }

    // trace_abort($t55) at pivot-tst/contract/sources/pivot_markets.move:403:9+6
    assume {:print "$at(2,16413,16419)"} true;
    assume {:print "$track_abort(101,6):", $t55} $t55 == $t55;

    // $t21 := move($t55) at pivot-tst/contract/sources/pivot_markets.move:403:9+6
    $t21 := $t55;

    // goto L3 at pivot-tst/contract/sources/pivot_markets.move:403:9+6
    goto L3;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:428:5+1
    assume {:print "$at(2,17352,17353)"} true;
L2:

    // return ($t38, $t39, $t40, $t42, $t44, $t46, $t47, $t48, $t49, $t50, $t51, $t52, $t27, $t29, $t53, $t37) at pivot-tst/contract/sources/pivot_markets.move:428:5+1
    assume {:print "$at(2,17352,17353)"} true;
    $ret0 := $t38;
    $ret1 := $t39;
    $ret2 := $t40;
    $ret3 := $t42;
    $ret4 := $t44;
    $ret5 := $t46;
    $ret6 := $t47;
    $ret7 := $t48;
    $ret8 := $t49;
    $ret9 := $t50;
    $ret10 := $t51;
    $ret11 := $t52;
    $ret12 := $t27;
    $ret13 := $t29;
    $ret14 := $t53;
    $ret15 := $t37;
    return;

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:428:5+1
L3:

    // abort($t21) at pivot-tst/contract/sources/pivot_markets.move:428:5+1
    assume {:print "$at(2,17352,17353)"} true;
    $abort_code := $t21;
    $abort_flag := true;
    return;

}

// fun pivot_markets::get_position [verification] at pivot-tst/contract/sources/pivot_markets.move:446:5+646
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_get_position$verify(_$t0: int, _$t1: int) returns ($ret0: int, $ret1: int, $ret2: int, $ret3: int, $ret4: int)
{
    // declare local variables
    var $t2: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $t3: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t4: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $t5: int;
    var $t6: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $t7: int;
    var $t8: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t9: bool;
    var $t10: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t11: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t12: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var $t13: bool;
    var $t14: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var $t15: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:446:5+1
    assume {:print "$at(2,18016,18017)"} true;
    assume $IsValid'u64'($t0);

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:446:5+1
    assume $IsValid'u64'($t1);

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:446:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // trace_local[market_id]($t0) at pivot-tst/contract/sources/pivot_markets.move:446:5+1
    assume {:print "$track_local(101,7,0):", $t0} $t0 == $t0;

    // trace_local[position_id]($t1) at pivot-tst/contract/sources/pivot_markets.move:446:5+1
    assume {:print "$track_local(101,7,1):", $t1} $t1 == $t1;

    // $t5 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:447:58+14
    assume {:print "$at(2,18194,18208)"} true;
    $t5 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t5);

    // $t6 := get_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t5) on_abort goto L5 with $t7 at pivot-tst/contract/sources/pivot_markets.move:447:21+52
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(2,18157,18209)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,7):", $t7} $t7 == $t7;
        goto L5;
    }

    // trace_local[store]($t6) at pivot-tst/contract/sources/pivot_markets.move:447:21+52
    assume {:print "$track_local(101,7,2):", $t6} $t6 == $t6;

    // $t8 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t6) at pivot-tst/contract/sources/pivot_markets.move:448:33+14
    assume {:print "$at(2,18243,18257)"} true;
    $t8 := $t6->$markets;

    // $t9 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t8, $t0) on_abort goto L5 with $t7 at pivot-tst/contract/sources/pivot_markets.move:448:17+42
    call $t9 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t8, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,18227,18269)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,7):", $t7} $t7 == $t7;
        goto L5;
    }

    // if ($t9) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:448:9+6
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:449:36+14
    assume {:print "$at(2,18345,18359)"} true;
L1:

    // $t10 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t6) at pivot-tst/contract/sources/pivot_markets.move:449:36+14
    assume {:print "$at(2,18345,18359)"} true;
    $t10 := $t6->$markets;

    // $t11 := table::borrow<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t10, $t0) on_abort goto L5 with $t7 at pivot-tst/contract/sources/pivot_markets.move:449:22+40
    call $t11 := $1_table_borrow'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t10, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,18331,18371)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,7):", $t7} $t7 == $t7;
        goto L5;
    }

    // trace_local[market]($t11) at pivot-tst/contract/sources/pivot_markets.move:449:22+40
    assume {:print "$track_local(101,7,3):", $t11} $t11 == $t11;

    // $t12 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t11) at pivot-tst/contract/sources/pivot_markets.move:450:33+17
    assume {:print "$at(2,18405,18422)"} true;
    $t12 := $t11->$positions;

    // $t13 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t12, $t1) on_abort goto L5 with $t7 at pivot-tst/contract/sources/pivot_markets.move:450:17+47
    call $t13 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t12, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,18389,18436)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,7):", $t7} $t7 == $t7;
        goto L5;
    }

    // if ($t13) goto L3 else goto L2 at pivot-tst/contract/sources/pivot_markets.move:450:9+6
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:452:38+17
    assume {:print "$at(2,18525,18542)"} true;
L3:

    // $t14 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t11) at pivot-tst/contract/sources/pivot_markets.move:452:38+17
    assume {:print "$at(2,18525,18542)"} true;
    $t14 := $t11->$positions;

    // $t15 := table::borrow<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t14, $t1) on_abort goto L5 with $t7 at pivot-tst/contract/sources/pivot_markets.move:452:24+45
    call $t15 := $1_table_borrow'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t14, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,18511,18556)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,7):", $t7} $t7 == $t7;
        goto L5;
    }

    // trace_local[position]($t15) at pivot-tst/contract/sources/pivot_markets.move:452:24+45
    assume {:print "$track_local(101,7,4):", $t15} $t15 == $t15;

    // $t16 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.user($t15) at pivot-tst/contract/sources/pivot_markets.move:453:10+13
    assume {:print "$at(2,18567,18580)"} true;
    $t16 := $t15->$user;

    // $t17 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.outcome($t15) at pivot-tst/contract/sources/pivot_markets.move:453:25+16
    $t17 := $t15->$outcome;

    // $t18 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.shares($t15) at pivot-tst/contract/sources/pivot_markets.move:453:43+15
    $t18 := $t15->$shares;

    // $t19 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.avg_price($t15) at pivot-tst/contract/sources/pivot_markets.move:453:60+18
    $t19 := $t15->$avg_price;

    // $t20 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.timestamp($t15) at pivot-tst/contract/sources/pivot_markets.move:453:80+18
    $t20 := $t15->$timestamp;

    // trace_return[0]($t16) at pivot-tst/contract/sources/pivot_markets.move:446:124+527
    assume {:print "$at(2,18135,18662)"} true;
    assume {:print "$track_return(101,7,0):", $t16} $t16 == $t16;

    // trace_return[1]($t17) at pivot-tst/contract/sources/pivot_markets.move:446:124+527
    assume {:print "$track_return(101,7,1):", $t17} $t17 == $t17;

    // trace_return[2]($t18) at pivot-tst/contract/sources/pivot_markets.move:446:124+527
    assume {:print "$track_return(101,7,2):", $t18} $t18 == $t18;

    // trace_return[3]($t19) at pivot-tst/contract/sources/pivot_markets.move:446:124+527
    assume {:print "$track_return(101,7,3):", $t19} $t19 == $t19;

    // trace_return[4]($t20) at pivot-tst/contract/sources/pivot_markets.move:446:124+527
    assume {:print "$track_return(101,7,4):", $t20} $t20 == $t20;

    // goto L4 at pivot-tst/contract/sources/pivot_markets.move:446:124+527
    goto L4;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:450:9+6
    assume {:print "$at(2,18381,18387)"} true;
L2:

    // $t21 := 10 at pivot-tst/contract/sources/pivot_markets.move:450:83+20
    assume {:print "$at(2,18455,18475)"} true;
    $t21 := 10;
    assume $IsValid'u64'($t21);

    // $t22 := error::not_found($t21) on_abort goto L5 with $t7 at pivot-tst/contract/sources/pivot_markets.move:450:66+38
    call $t22 := $1_error_not_found($t21);
    if ($abort_flag) {
        assume {:print "$at(2,18438,18476)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,7):", $t7} $t7 == $t7;
        goto L5;
    }

    // trace_abort($t22) at pivot-tst/contract/sources/pivot_markets.move:450:9+6
    assume {:print "$at(2,18381,18387)"} true;
    assume {:print "$track_abort(101,7):", $t22} $t22 == $t22;

    // $t7 := move($t22) at pivot-tst/contract/sources/pivot_markets.move:450:9+6
    $t7 := $t22;

    // goto L5 at pivot-tst/contract/sources/pivot_markets.move:450:9+6
    goto L5;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:448:9+6
    assume {:print "$at(2,18219,18225)"} true;
L0:

    // $t23 := 8 at pivot-tst/contract/sources/pivot_markets.move:448:78+18
    assume {:print "$at(2,18288,18306)"} true;
    $t23 := 8;
    assume $IsValid'u64'($t23);

    // $t24 := error::not_found($t23) on_abort goto L5 with $t7 at pivot-tst/contract/sources/pivot_markets.move:448:61+36
    call $t24 := $1_error_not_found($t23);
    if ($abort_flag) {
        assume {:print "$at(2,18271,18307)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,7):", $t7} $t7 == $t7;
        goto L5;
    }

    // trace_abort($t24) at pivot-tst/contract/sources/pivot_markets.move:448:9+6
    assume {:print "$at(2,18219,18225)"} true;
    assume {:print "$track_abort(101,7):", $t24} $t24 == $t24;

    // $t7 := move($t24) at pivot-tst/contract/sources/pivot_markets.move:448:9+6
    $t7 := $t24;

    // goto L5 at pivot-tst/contract/sources/pivot_markets.move:448:9+6
    goto L5;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:454:5+1
    assume {:print "$at(2,18661,18662)"} true;
L4:

    // return ($t16, $t17, $t18, $t19, $t20) at pivot-tst/contract/sources/pivot_markets.move:454:5+1
    assume {:print "$at(2,18661,18662)"} true;
    $ret0 := $t16;
    $ret1 := $t17;
    $ret2 := $t18;
    $ret3 := $t19;
    $ret4 := $t20;
    return;

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:454:5+1
L5:

    // abort($t7) at pivot-tst/contract/sources/pivot_markets.move:454:5+1
    assume {:print "$at(2,18661,18662)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun pivot_markets::get_user_positions [verification] at pivot-tst/contract/sources/pivot_markets.move:432:5+527
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_get_user_positions$verify(_$t0: int, _$t1: int) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t2: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $t3: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t4: Vec (int);
    var $t5: int;
    var $t6: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $t7: int;
    var $t8: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t9: bool;
    var $t10: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t11: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t12: Table int (Vec (int));
    var $t13: bool;
    var $t14: Table int (Vec (int));
    var $t15: Vec (int);
    var $t16: Vec (int);
    var $t17: int;
    var $t18: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:432:5+1
    assume {:print "$at(2,17426,17427)"} true;
    assume $IsValid'u64'($t0);

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:432:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:432:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // trace_local[market_id]($t0) at pivot-tst/contract/sources/pivot_markets.move:432:5+1
    assume {:print "$track_local(101,8,0):", $t0} $t0 == $t0;

    // trace_local[user]($t1) at pivot-tst/contract/sources/pivot_markets.move:432:5+1
    assume {:print "$track_local(101,8,1):", $t1} $t1 == $t1;

    // $t5 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:433:58+14
    assume {:print "$at(2,17590,17604)"} true;
    $t5 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t5);

    // $t6 := get_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t5) on_abort goto L6 with $t7 at pivot-tst/contract/sources/pivot_markets.move:433:21+52
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(2,17553,17605)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,8):", $t7} $t7 == $t7;
        goto L6;
    }

    // trace_local[store]($t6) at pivot-tst/contract/sources/pivot_markets.move:433:21+52
    assume {:print "$track_local(101,8,2):", $t6} $t6 == $t6;

    // $t8 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t6) at pivot-tst/contract/sources/pivot_markets.move:434:33+14
    assume {:print "$at(2,17639,17653)"} true;
    $t8 := $t6->$markets;

    // $t9 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t8, $t0) on_abort goto L6 with $t7 at pivot-tst/contract/sources/pivot_markets.move:434:17+42
    call $t9 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t8, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,17623,17665)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,8):", $t7} $t7 == $t7;
        goto L6;
    }

    // if ($t9) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:434:9+6
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:435:36+14
    assume {:print "$at(2,17741,17755)"} true;
L1:

    // $t10 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t6) at pivot-tst/contract/sources/pivot_markets.move:435:36+14
    assume {:print "$at(2,17741,17755)"} true;
    $t10 := $t6->$markets;

    // $t11 := table::borrow<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t10, $t0) on_abort goto L6 with $t7 at pivot-tst/contract/sources/pivot_markets.move:435:22+40
    call $t11 := $1_table_borrow'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t10, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,17727,17767)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,8):", $t7} $t7 == $t7;
        goto L6;
    }

    // trace_local[market]($t11) at pivot-tst/contract/sources/pivot_markets.move:435:22+40
    assume {:print "$track_local(101,8,3):", $t11} $t11 == $t11;

    // $t12 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.user_positions($t11) at pivot-tst/contract/sources/pivot_markets.move:437:29+22
    assume {:print "$at(2,17798,17820)"} true;
    $t12 := $t11->$user_positions;

    // $t13 := table::contains<address, vector<u64>>($t12, $t1) on_abort goto L6 with $t7 at pivot-tst/contract/sources/pivot_markets.move:437:13+45
    call $t13 := $1_table_contains'address_vec'u64''($t12, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,17782,17827)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,8):", $t7} $t7 == $t7;
        goto L6;
    }

    // if ($t13) goto L3 else goto L2 at pivot-tst/contract/sources/pivot_markets.move:437:9+169
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:438:28+22
    assume {:print "$at(2,17858,17880)"} true;
L3:

    // $t14 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.user_positions($t11) at pivot-tst/contract/sources/pivot_markets.move:438:28+22
    assume {:print "$at(2,17858,17880)"} true;
    $t14 := $t11->$user_positions;

    // $t15 := table::borrow<address, vector<u64>>($t14, $t1) on_abort goto L6 with $t7 at pivot-tst/contract/sources/pivot_markets.move:438:14+43
    call $t15 := $1_table_borrow'address_vec'u64''($t14, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,17844,17887)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,8):", $t7} $t7 == $t7;
        goto L6;
    }

    // $t4 := $t15 at pivot-tst/contract/sources/pivot_markets.move:438:13+44
    $t4 := $t15;

    // trace_local[return]($t15) at pivot-tst/contract/sources/pivot_markets.move:438:13+44
    assume {:print "$track_local(101,8,4):", $t15} $t15 == $t15;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:432:110+422
    assume {:print "$at(2,17531,17953)"} true;
L4:

    // trace_return[0]($t4) at pivot-tst/contract/sources/pivot_markets.move:432:110+422
    assume {:print "$at(2,17531,17953)"} true;
    assume {:print "$track_return(101,8,0):", $t4} $t4 == $t4;

    // goto L5 at pivot-tst/contract/sources/pivot_markets.move:432:110+422
    goto L5;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:440:13+20
    assume {:print "$at(2,17917,17937)"} true;
L2:

    // $t16 := vector::empty<u64>() on_abort goto L6 with $t7 at pivot-tst/contract/sources/pivot_markets.move:440:13+20
    assume {:print "$at(2,17917,17937)"} true;
    call $t16 := $1_vector_empty'u64'();
    if ($abort_flag) {
        assume {:print "$at(2,17917,17937)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,8):", $t7} $t7 == $t7;
        goto L6;
    }

    // $t4 := $t16 at pivot-tst/contract/sources/pivot_markets.move:440:13+20
    $t4 := $t16;

    // trace_local[return]($t16) at pivot-tst/contract/sources/pivot_markets.move:440:13+20
    assume {:print "$track_local(101,8,4):", $t16} $t16 == $t16;

    // goto L4 at pivot-tst/contract/sources/pivot_markets.move:440:13+20
    goto L4;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:434:9+6
    assume {:print "$at(2,17615,17621)"} true;
L0:

    // $t17 := 8 at pivot-tst/contract/sources/pivot_markets.move:434:78+18
    assume {:print "$at(2,17684,17702)"} true;
    $t17 := 8;
    assume $IsValid'u64'($t17);

    // $t18 := error::not_found($t17) on_abort goto L6 with $t7 at pivot-tst/contract/sources/pivot_markets.move:434:61+36
    call $t18 := $1_error_not_found($t17);
    if ($abort_flag) {
        assume {:print "$at(2,17667,17703)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(101,8):", $t7} $t7 == $t7;
        goto L6;
    }

    // trace_abort($t18) at pivot-tst/contract/sources/pivot_markets.move:434:9+6
    assume {:print "$at(2,17615,17621)"} true;
    assume {:print "$track_abort(101,8):", $t18} $t18 == $t18;

    // $t7 := move($t18) at pivot-tst/contract/sources/pivot_markets.move:434:9+6
    $t7 := $t18;

    // goto L6 at pivot-tst/contract/sources/pivot_markets.move:434:9+6
    goto L6;

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:442:5+1
    assume {:print "$at(2,17952,17953)"} true;
L5:

    // return $t4 at pivot-tst/contract/sources/pivot_markets.move:442:5+1
    assume {:print "$at(2,17952,17953)"} true;
    $ret0 := $t4;
    return;

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:442:5+1
L6:

    // abort($t7) at pivot-tst/contract/sources/pivot_markets.move:442:5+1
    assume {:print "$at(2,17952,17953)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun pivot_markets::resolve_market [verification] at pivot-tst/contract/sources/pivot_markets.move:301:5+1461
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_resolve_market$verify(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t4: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t5: int;
    var $t6: bool;
    var $t7: bool;
    var $t8: int;
    var $t9: $1_coin_Coin'#0';
    var $t10: int;
    var $t11: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t12: int;
    var $t13: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t14: bool;
    var $t15: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'));
    var $t16: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: bool;
    var $t21: bool;
    var $t22: int;
    var $t23: int;
    var $t24: bool;
    var $t25: int;
    var $t26: bool;
    var $t27: bool;
    var $t28: $1_coin_Coin'#0';
    var $t29: int;
    var $t30: $1_coin_Coin'#0';
    var $t31: int;
    var $t32: int;
    var $t33: $1_coin_Coin'#0';
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: $1_coin_Coin'#0';
    var $t41: int;
    var $t42: bool;
    var $t43: $Mutation ($1_coin_Coin'#0');
    var $t44: $1_coin_Coin'#0';
    var $t45: int;
    var $t46: $1_coin_CoinStore'#0';
    var $t47: $1_option_Option'u8';
    var $t48: $Mutation ($1_option_Option'u8');
    var $t49: bool;
    var $t50: $Mutation (bool);
    var $t51: int;
    var $t52: int;
    var $t53: int;
    var $t54: bool;
    var $t55: int;
    var $t56: int;
    var $t57: int;
    var $t58: int;
    var $t59: int;
    var $t60: int;
    var $t61: int;
    var $t62: bool;
    var $t63: int;
    var $t64: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume {:print "$at(2,11784,11785)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume $IsValid'u8'($t2);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::chain_status::GenesisEndMarker: ResourceDomain<0x1::chain_status::GenesisEndMarker>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: 0x1::timestamp::CurrentTimeMicroseconds: ResourceDomain<0x1::timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::reconfiguration::Configuration: ResourceDomain<0x1::reconfiguration::Configuration>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // assume Implies(chain_status::$is_operating(), exists<0x1::timestamp::CurrentTimeMicroseconds>(0x1)) at pivot-tst/contract/sources/pivot_markets.move:301:5+1461
    // global invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/timestamp.spec.move:36:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at pivot-tst/contract/sources/pivot_markets.move:301:5+1461
    // global invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/reconfiguration.spec.move:51:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[resolver]($t0) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume {:print "$track_local(101,9,0):", $t0} $t0 == $t0;

    // trace_local[market_id]($t1) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume {:print "$track_local(101,9,1):", $t1} $t1 == $t1;

    // trace_local[outcome]($t2) at pivot-tst/contract/sources/pivot_markets.move:301:5+1
    assume {:print "$track_local(101,9,2):", $t2} $t2 == $t2;

    // $t10 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:306:62+14
    assume {:print "$at(2,11988,12002)"} true;
    $t10 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t10);

    // $t11 := borrow_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t10) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:306:21+56
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(2,11947,12003)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_local[store]($t11) at pivot-tst/contract/sources/pivot_markets.move:306:21+56
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' := $Dereference($t11);
    assume {:print "$track_local(101,9,3):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'';

    // $t13 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t11) at pivot-tst/contract/sources/pivot_markets.move:307:33+14
    assume {:print "$at(2,12037,12051)"} true;
    $t13 := $Dereference($t11)->$markets;

    // $t14 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t13, $t1) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:307:17+42
    call $t14 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,12021,12063)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // if ($t14) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:307:9+6
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:308:40+18
    assume {:print "$at(2,12143,12161)"} true;
L1:

    // $t15 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t11) at pivot-tst/contract/sources/pivot_markets.move:308:40+18
    assume {:print "$at(2,12143,12161)"} true;
    $t15 := $ChildMutation($t11, 1, $Dereference($t11)->$markets);

    // $t16 := table::borrow_mut<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t15, $t1) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:308:22+48
    call $t16,$t15 := $1_table_borrow_mut'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,12125,12173)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_local[market]($t16) at pivot-tst/contract/sources/pivot_markets.move:308:22+48
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' := $Dereference($t16);
    assume {:print "$track_local(101,9,4):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'';

    // $t17 := signer::address_of($t0) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:310:29+28
    assume {:print "$at(2,12204,12232)"} true;
    call $t17 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,12204,12232)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_local[$t4]($t17) at pivot-tst/contract/sources/pivot_markets.move:310:29+28
    assume {:print "$track_local(101,9,5):", $t17} $t17 == $t17;

    // $t18 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.admin($t11) at pivot-tst/contract/sources/pivot_markets.move:311:34+11
    assume {:print "$at(2,12267,12278)"} true;
    $t18 := $Dereference($t11)->$admin;

    // $t19 := ==($t17, $t18) at pivot-tst/contract/sources/pivot_markets.move:311:17+28
    $t19 := $IsEqual'address'($t17, $t18);

    // if ($t19) goto L3 else goto L2 at pivot-tst/contract/sources/pivot_markets.move:311:17+62
    if ($t19) { goto L3; } else { goto L2; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:311:17+62
L3:

    // $t20 := true at pivot-tst/contract/sources/pivot_markets.move:311:17+62
    assume {:print "$at(2,12250,12312)"} true;
    $t20 := true;
    assume $IsValid'bool'($t20);

    // $t6 := $t20 at pivot-tst/contract/sources/pivot_markets.move:311:17+62
    $t6 := $t20;

    // trace_local[$t5]($t20) at pivot-tst/contract/sources/pivot_markets.move:311:17+62
    assume {:print "$track_local(101,9,6):", $t20} $t20 == $t20;

    // label L18 at pivot-tst/contract/sources/pivot_markets.move:311:9+6
L18:

    // if ($t6) goto L5 else goto L21 at pivot-tst/contract/sources/pivot_markets.move:311:9+6
    assume {:print "$at(2,12242,12248)"} true;
    if ($t6) { goto L5; } else { goto L21; }

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:313:18+15
    assume {:print "$at(2,12372,12387)"} true;
L5:

    // $t21 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.resolved($t16) at pivot-tst/contract/sources/pivot_markets.move:313:18+15
    assume {:print "$at(2,12372,12387)"} true;
    $t21 := $Dereference($t16)->$resolved;

    // if ($t21) goto L22 else goto L7 at pivot-tst/contract/sources/pivot_markets.move:313:17+16
    if ($t21) { goto L22; } else { goto L7; }

    // label L7 at pivot-tst/contract/sources/pivot_markets.move:314:17+24
    assume {:print "$at(2,12447,12471)"} true;
L7:

    // $t22 := timestamp::now_seconds() on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:314:17+24
    assume {:print "$at(2,12447,12471)"} true;
    call $t22 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,12447,12471)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // $t23 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.end_time($t16) at pivot-tst/contract/sources/pivot_markets.move:314:45+15
    $t23 := $Dereference($t16)->$end_time;

    // $t24 := >=($t22, $t23) at pivot-tst/contract/sources/pivot_markets.move:314:17+43
    call $t24 := $Ge($t22, $t23);

    // if ($t24) goto L9 else goto L23 at pivot-tst/contract/sources/pivot_markets.move:314:9+6
    if ($t24) { goto L9; } else { goto L23; }

    // label L9 at pivot-tst/contract/sources/pivot_markets.move:315:17+7
    assume {:print "$at(2,12551,12558)"} true;
L9:

    // $t25 := 1 at pivot-tst/contract/sources/pivot_markets.move:315:28+1
    assume {:print "$at(2,12562,12563)"} true;
    $t25 := 1;
    assume $IsValid'u8'($t25);

    // $t26 := ==($t2, $t25) at pivot-tst/contract/sources/pivot_markets.move:315:17+12
    $t26 := $IsEqual'u8'($t2, $t25);

    // if ($t26) goto L11 else goto L10 at pivot-tst/contract/sources/pivot_markets.move:315:17+28
    if ($t26) { goto L11; } else { goto L10; }

    // label L11 at pivot-tst/contract/sources/pivot_markets.move:315:17+28
L11:

    // $t27 := true at pivot-tst/contract/sources/pivot_markets.move:315:17+28
    assume {:print "$at(2,12551,12579)"} true;
    $t27 := true;
    assume $IsValid'bool'($t27);

    // $t7 := $t27 at pivot-tst/contract/sources/pivot_markets.move:315:17+28
    $t7 := $t27;

    // trace_local[$t23]($t27) at pivot-tst/contract/sources/pivot_markets.move:315:17+28
    assume {:print "$track_local(101,9,7):", $t27} $t27 == $t27;

    // label L17 at pivot-tst/contract/sources/pivot_markets.move:315:9+6
L17:

    // if ($t7) goto L13 else goto L24 at pivot-tst/contract/sources/pivot_markets.move:315:9+6
    assume {:print "$at(2,12543,12549)"} true;
    if ($t7) { goto L13; } else { goto L24; }

    // label L13 at pivot-tst/contract/sources/pivot_markets.move:318:37+16
    assume {:print "$at(2,12703,12719)"} true;
L13:

    // $t28 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.yes_pool($t16) at pivot-tst/contract/sources/pivot_markets.move:318:37+16
    assume {:print "$at(2,12703,12719)"} true;
    $t28 := $Dereference($t16)->$yes_pool;

    // $t29 := coin::value<#0>($t28) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:318:25+29
    call $t29 := $1_coin_value'#0'($t28);
    if ($abort_flag) {
        assume {:print "$at(2,12691,12720)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // $t30 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.no_pool($t16) at pivot-tst/contract/sources/pivot_markets.move:318:69+15
    $t30 := $Dereference($t16)->$no_pool;

    // $t31 := coin::value<#0>($t30) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:318:57+28
    call $t31 := $1_coin_value'#0'($t30);
    if ($abort_flag) {
        assume {:print "$at(2,12723,12751)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // $t32 := +($t29, $t31) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:318:25+60
    call $t32 := $AddU64($t29, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,12691,12751)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // $t33 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t16) at pivot-tst/contract/sources/pivot_markets.move:318:100+22
    $t33 := $Dereference($t16)->$liquidity_pool;

    // $t34 := coin::value<#0>($t33) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:318:88+35
    call $t34 := $1_coin_value'#0'($t33);
    if ($abort_flag) {
        assume {:print "$at(2,12754,12789)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // $t35 := +($t32, $t34) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:318:25+98
    call $t35 := $AddU64($t32, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,12691,12789)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // $t36 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.platform_fee_rate($t11) at pivot-tst/contract/sources/pivot_markets.move:319:48+23
    assume {:print "$at(2,12838,12861)"} true;
    $t36 := $Dereference($t11)->$platform_fee_rate;

    // $t37 := *($t35, $t36) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:319:35+37
    call $t37 := $MulU64($t35, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,12825,12862)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // $t38 := 10000 at pivot-tst/contract/sources/pivot_markets.move:319:75+5
    $t38 := 10000;
    assume $IsValid'u64'($t38);

    // $t39 := /($t37, $t38) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:319:35+45
    call $t39 := $Div($t37, $t38);
    if ($abort_flag) {
        assume {:print "$at(2,12825,12870)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_local[$t28]($t39) at pivot-tst/contract/sources/pivot_markets.move:319:35+45
    assume {:print "$track_local(101,9,8):", $t39} $t39 == $t39;

    // $t40 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t16) at pivot-tst/contract/sources/pivot_markets.move:322:25+22
    assume {:print "$at(2,12949,12971)"} true;
    $t40 := $Dereference($t16)->$liquidity_pool;

    // $t41 := coin::value<#0>($t40) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:322:13+35
    call $t41 := $1_coin_value'#0'($t40);
    if ($abort_flag) {
        assume {:print "$at(2,12937,12972)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // $t42 := >=($t41, $t39) at pivot-tst/contract/sources/pivot_markets.move:322:13+58
    call $t42 := $Ge($t41, $t39);

    // if ($t42) goto L15 else goto L14 at pivot-tst/contract/sources/pivot_markets.move:322:9+224
    if ($t42) { goto L15; } else { goto L14; }

    // label L15 at pivot-tst/contract/sources/pivot_markets.move:323:46+26
    assume {:print "$at(2,13044,13070)"} true;
L15:

    // $t43 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t16) at pivot-tst/contract/sources/pivot_markets.move:323:46+26
    assume {:print "$at(2,13044,13070)"} true;
    $t43 := $ChildMutation($t16, 5, $Dereference($t16)->$liquidity_pool);

    // $t44 := coin::extract<#0>($t43, $t39) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:323:32+62
    call $t44,$t43 := $1_coin_extract'#0'($t43, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,13030,13092)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // write_back[Reference($t16).liquidity_pool (0x1::coin::Coin<#0>)]($t43) at pivot-tst/contract/sources/pivot_markets.move:323:32+62
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_pool($Dereference($t16), $Dereference($t43)));

    // trace_local[platform_fee]($t44) at pivot-tst/contract/sources/pivot_markets.move:323:32+62
    assume {:print "$track_local(101,9,9):", $t44} $t44 == $t44;

    // $t45 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.admin($t11) at pivot-tst/contract/sources/pivot_markets.move:324:27+11
    assume {:print "$at(2,13120,13131)"} true;
    $t45 := $Dereference($t11)->$admin;

    // assume Identical($t46, global<0x1::coin::CoinStore<#0>>($t45)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:323:9+59
    assume {:print "$at(131,14121,14180)"} true;
    assume ($t46 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t45));

    // coin::deposit<#0>($t45, $t44) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:324:13+40
    assume {:print "$at(2,13106,13146)"} true;
    call $1_coin_deposit'#0'($t45, $t44);
    if ($abort_flag) {
        assume {:print "$at(2,13106,13146)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // label L16 at pivot-tst/contract/sources/pivot_markets.move:327:26+21
    assume {:print "$at(2,13185,13206)"} true;
L16:

    // $t47 := opaque begin: option::some<u8>($t2) at pivot-tst/contract/sources/pivot_markets.move:327:26+21
    assume {:print "$at(2,13185,13206)"} true;

    // assume And(WellFormed($t47), Le(Len<u8>(select option::Option.vec($t47)), 1)) at pivot-tst/contract/sources/pivot_markets.move:327:26+21
    assume ($IsValid'$1_option_Option'u8''($t47) && (LenVec($t47->$vec) <= 1));

    // assume Eq<0x1::option::Option<u8>>($t47, option::spec_some<u8>($t2)) at pivot-tst/contract/sources/pivot_markets.move:327:26+21
    assume $IsEqual'$1_option_Option'u8''($t47, $1_option_spec_some'u8'($t2));

    // $t47 := opaque end: option::some<u8>($t2) at pivot-tst/contract/sources/pivot_markets.move:327:26+21

    // $t48 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.outcome($t16) at pivot-tst/contract/sources/pivot_markets.move:327:9+14
    $t48 := $ChildMutation($t16, 10, $Dereference($t16)->$outcome);

    // write_ref($t48, $t47) at pivot-tst/contract/sources/pivot_markets.move:327:9+38
    $t48 := $UpdateMutation($t48, $t47);

    // write_back[Reference($t16).outcome (0x1::option::Option<u8>)]($t48) at pivot-tst/contract/sources/pivot_markets.move:327:9+38
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_outcome($Dereference($t16), $Dereference($t48)));

    // $t49 := true at pivot-tst/contract/sources/pivot_markets.move:328:27+4
    assume {:print "$at(2,13234,13238)"} true;
    $t49 := true;
    assume $IsValid'bool'($t49);

    // $t50 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.resolved($t16) at pivot-tst/contract/sources/pivot_markets.move:328:9+15
    $t50 := $ChildMutation($t16, 9, $Dereference($t16)->$resolved);

    // write_ref($t50, $t49) at pivot-tst/contract/sources/pivot_markets.move:328:9+22
    $t50 := $UpdateMutation($t50, $t49);

    // write_back[Reference($t16).resolved (bool)]($t50) at pivot-tst/contract/sources/pivot_markets.move:328:9+22
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_resolved($Dereference($t16), $Dereference($t50)));

    // write_back[Reference($t15)[]]($t16) at pivot-tst/contract/sources/pivot_markets.move:328:9+22
    $t15 := $UpdateMutation($t15, UpdateTable($Dereference($t15), ReadVec($t16->p, LenVec($t15->p)), $Dereference($t16)));

    // write_back[Reference($t11).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t15) at pivot-tst/contract/sources/pivot_markets.move:328:9+22
    $t11 := $UpdateMutation($t11, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t11), $Dereference($t15)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t11) at pivot-tst/contract/sources/pivot_markets.move:328:9+22
    assume {:print "$at(2,13216,13238)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // goto L19 at pivot-tst/contract/sources/pivot_markets.move:305:28+1320
    assume {:print "$at(2,11925,13245)"} true;
    goto L19;

    // label L14 at pivot-tst/contract/sources/pivot_markets.move:322:9+224
    assume {:print "$at(2,12933,13157)"} true;
L14:

    // drop($t11) at pivot-tst/contract/sources/pivot_markets.move:322:9+224
    assume {:print "$at(2,12933,13157)"} true;

    // goto L16 at pivot-tst/contract/sources/pivot_markets.move:322:9+224
    goto L16;

    // label L12 at pivot-tst/contract/sources/pivot_markets.move:315:9+6
    assume {:print "$at(2,12543,12549)"} true;
L12:

    // drop($t11) at pivot-tst/contract/sources/pivot_markets.move:315:9+6
    assume {:print "$at(2,12543,12549)"} true;

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t16) at pivot-tst/contract/sources/pivot_markets.move:315:9+6
    assume {:print "$at(2,12543,12549)"} true;

    // $t51 := 5 at pivot-tst/contract/sources/pivot_markets.move:315:71+17
    $t51 := 5;
    assume $IsValid'u64'($t51);

    // $t52 := error::invalid_argument($t51) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:315:47+42
    call $t52 := $1_error_invalid_argument($t51);
    if ($abort_flag) {
        assume {:print "$at(2,12581,12623)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_abort($t52) at pivot-tst/contract/sources/pivot_markets.move:315:9+6
    assume {:print "$at(2,12543,12549)"} true;
    assume {:print "$track_abort(101,9):", $t52} $t52 == $t52;

    // $t12 := move($t52) at pivot-tst/contract/sources/pivot_markets.move:315:9+6
    $t12 := $t52;

    // goto L20 at pivot-tst/contract/sources/pivot_markets.move:315:9+6
    goto L20;

    // label L10 at pivot-tst/contract/sources/pivot_markets.move:315:33+7
L10:

    // $t53 := 2 at pivot-tst/contract/sources/pivot_markets.move:315:44+1
    assume {:print "$at(2,12578,12579)"} true;
    $t53 := 2;
    assume $IsValid'u8'($t53);

    // $t54 := ==($t2, $t53) at pivot-tst/contract/sources/pivot_markets.move:315:33+12
    $t54 := $IsEqual'u8'($t2, $t53);

    // $t7 := $t54 at pivot-tst/contract/sources/pivot_markets.move:315:33+12
    $t7 := $t54;

    // trace_local[$t23]($t54) at pivot-tst/contract/sources/pivot_markets.move:315:33+12
    assume {:print "$track_local(101,9,7):", $t54} $t54 == $t54;

    // goto L17 at pivot-tst/contract/sources/pivot_markets.move:315:33+12
    goto L17;

    // label L8 at pivot-tst/contract/sources/pivot_markets.move:314:9+6
    assume {:print "$at(2,12439,12445)"} true;
L8:

    // drop($t11) at pivot-tst/contract/sources/pivot_markets.move:314:9+6
    assume {:print "$at(2,12439,12445)"} true;

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t16) at pivot-tst/contract/sources/pivot_markets.move:314:9+6
    assume {:print "$at(2,12439,12445)"} true;

    // $t55 := 2 at pivot-tst/contract/sources/pivot_markets.move:314:83+18
    $t55 := 2;
    assume $IsValid'u64'($t55);

    // $t56 := error::invalid_state($t55) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:314:62+40
    call $t56 := $1_error_invalid_state($t55);
    if ($abort_flag) {
        assume {:print "$at(2,12492,12532)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_abort($t56) at pivot-tst/contract/sources/pivot_markets.move:314:9+6
    assume {:print "$at(2,12439,12445)"} true;
    assume {:print "$track_abort(101,9):", $t56} $t56 == $t56;

    // $t12 := move($t56) at pivot-tst/contract/sources/pivot_markets.move:314:9+6
    $t12 := $t56;

    // goto L20 at pivot-tst/contract/sources/pivot_markets.move:314:9+6
    goto L20;

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:313:9+6
    assume {:print "$at(2,12363,12369)"} true;
L6:

    // drop($t11) at pivot-tst/contract/sources/pivot_markets.move:313:9+6
    assume {:print "$at(2,12363,12369)"} true;

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t16) at pivot-tst/contract/sources/pivot_markets.move:313:9+6
    assume {:print "$at(2,12363,12369)"} true;

    // $t57 := 3 at pivot-tst/contract/sources/pivot_markets.move:313:56+17
    $t57 := 3;
    assume $IsValid'u64'($t57);

    // $t58 := error::invalid_state($t57) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:313:35+39
    call $t58 := $1_error_invalid_state($t57);
    if ($abort_flag) {
        assume {:print "$at(2,12389,12428)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_abort($t58) at pivot-tst/contract/sources/pivot_markets.move:313:9+6
    assume {:print "$at(2,12363,12369)"} true;
    assume {:print "$track_abort(101,9):", $t58} $t58 == $t58;

    // $t12 := move($t58) at pivot-tst/contract/sources/pivot_markets.move:313:9+6
    $t12 := $t58;

    // goto L20 at pivot-tst/contract/sources/pivot_markets.move:313:9+6
    goto L20;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:311:9+6
    assume {:print "$at(2,12242,12248)"} true;
L4:

    // drop($t11) at pivot-tst/contract/sources/pivot_markets.move:311:9+6
    assume {:print "$at(2,12242,12248)"} true;

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t16) at pivot-tst/contract/sources/pivot_markets.move:311:9+6
    assume {:print "$at(2,12242,12248)"} true;

    // $t59 := 0 at pivot-tst/contract/sources/pivot_markets.move:311:106+11
    $t59 := 0;
    assume $IsValid'u64'($t59);

    // $t60 := error::permission_denied($t59) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:311:81+37
    call $t60 := $1_error_permission_denied($t59);
    if ($abort_flag) {
        assume {:print "$at(2,12314,12351)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_abort($t60) at pivot-tst/contract/sources/pivot_markets.move:311:9+6
    assume {:print "$at(2,12242,12248)"} true;
    assume {:print "$track_abort(101,9):", $t60} $t60 == $t60;

    // $t12 := move($t60) at pivot-tst/contract/sources/pivot_markets.move:311:9+6
    $t12 := $t60;

    // goto L20 at pivot-tst/contract/sources/pivot_markets.move:311:9+6
    goto L20;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:311:49+13
L2:

    // $t61 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.oracle($t16) at pivot-tst/contract/sources/pivot_markets.move:311:66+13
    assume {:print "$at(2,12299,12312)"} true;
    $t61 := $Dereference($t16)->$oracle;

    // $t62 := ==($t17, $t61) at pivot-tst/contract/sources/pivot_markets.move:311:49+30
    $t62 := $IsEqual'address'($t17, $t61);

    // $t6 := $t62 at pivot-tst/contract/sources/pivot_markets.move:311:49+30
    $t6 := $t62;

    // trace_local[$t5]($t62) at pivot-tst/contract/sources/pivot_markets.move:311:49+30
    assume {:print "$track_local(101,9,6):", $t62} $t62 == $t62;

    // goto L18 at pivot-tst/contract/sources/pivot_markets.move:311:49+30
    goto L18;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:307:9+6
    assume {:print "$at(2,12013,12019)"} true;
L0:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t11): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t11), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t11)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t11)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t11) at pivot-tst/contract/sources/pivot_markets.move:307:9+6
    assume {:print "$at(2,12013,12019)"} true;

    // $t63 := 8 at pivot-tst/contract/sources/pivot_markets.move:307:78+18
    $t63 := 8;
    assume $IsValid'u64'($t63);

    // $t64 := error::not_found($t63) on_abort goto L20 with $t12 at pivot-tst/contract/sources/pivot_markets.move:307:61+36
    call $t64 := $1_error_not_found($t63);
    if ($abort_flag) {
        assume {:print "$at(2,12065,12101)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(101,9):", $t12} $t12 == $t12;
        goto L20;
    }

    // trace_abort($t64) at pivot-tst/contract/sources/pivot_markets.move:307:9+6
    assume {:print "$at(2,12013,12019)"} true;
    assume {:print "$track_abort(101,9):", $t64} $t64 == $t64;

    // $t12 := move($t64) at pivot-tst/contract/sources/pivot_markets.move:307:9+6
    $t12 := $t64;

    // goto L20 at pivot-tst/contract/sources/pivot_markets.move:307:9+6
    goto L20;

    // label L19 at pivot-tst/contract/sources/pivot_markets.move:329:5+1
    assume {:print "$at(2,13244,13245)"} true;
L19:

    // return () at pivot-tst/contract/sources/pivot_markets.move:329:5+1
    assume {:print "$at(2,13244,13245)"} true;
    return;

    // label L20 at pivot-tst/contract/sources/pivot_markets.move:329:5+1
L20:

    // abort($t12) at pivot-tst/contract/sources/pivot_markets.move:329:5+1
    assume {:print "$at(2,13244,13245)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

    // label L21 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L21:

    // drop($t15) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L4 at <internal>:1:1+10
    goto L4;

    // label L22 at <internal>:1:1+10
L22:

    // drop($t15) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L6 at <internal>:1:1+10
    goto L6;

    // label L23 at <internal>:1:1+10
L23:

    // drop($t15) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L8 at <internal>:1:1+10
    goto L8;

    // label L24 at <internal>:1:1+10
L24:

    // drop($t15) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L12 at <internal>:1:1+10
    goto L12;

}

// fun pivot_markets::sell_position [verification] at pivot-tst/contract/sources/pivot_markets.move:240:1+2490
procedure {:timeLimit 40} $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_sell_position$verify(_$t0: $signer, _$t1: int, _$t2: int, _$t3: int, _$t4: int) returns ()
{
    // declare local variables
    var $t5: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t6: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var $t10: int;
    var $t11: int;
    var $t12: $1_coin_Coin'#0';
    var $t13: $Mutation (Vec (int));
    var $t14: int;
    var $t15: int;
    var $t16: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0');
    var $t17: int;
    var $t18: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t19: bool;
    var $t20: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'));
    var $t21: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0');
    var $t22: bool;
    var $t23: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var $t24: bool;
    var $t25: Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var $t26: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $t27: int;
    var $t28: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $t29: int;
    var $t30: bool;
    var $t31: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position));
    var $t32: $Mutation ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position);
    var $t33: int;
    var $t34: int;
    var $t35: bool;
    var $t36: int;
    var $t37: bool;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: $1_coin_Coin'#0';
    var $t42: int;
    var $t43: bool;
    var $t44: int;
    var $t45: int;
    var $t46: $Mutation (int);
    var $t47: int;
    var $t48: int;
    var $t49: bool;
    var $t50: int;
    var $t51: int;
    var $t52: $Mutation (int);
    var $t53: $Mutation ($1_coin_Coin'#0');
    var $t54: $1_coin_Coin'#0';
    var $t55: $1_coin_CoinStore'#0';
    var $t56: int;
    var $t57: int;
    var $t58: bool;
    var $t59: $Mutation (Table int ($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position));
    var $t60: $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $t61: $Mutation (Table int (Vec (int)));
    var $t62: $Mutation (Vec (int));
    var $t63: Vec (int);
    var $t64: bool;
    var $t65: int;
    var $t66: int;
    var $t67: int;
    var $t68: int;
    var $t69: $Mutation (int);
    var $t70: int;
    var $t71: int;
    var $t72: int;
    var $t73: int;
    var $t74: int;
    var $t75: int;
    var $t76: int;
    var $t77: int;
    var $t78: int;
    var $t79: int;
    var $t80: int;
    var $t81: int;
    var $t82: int;
    var $t83: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $temp_0'$1_coin_Coin'#0'': $1_coin_Coin'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0';
    var $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position': $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    var $temp_0'vec'u64'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume {:print "$at(2,9264,9265)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume $IsValid'u64'($t2);

    // assume WellFormed($t3) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume $IsValid'u64'($t3);

    // assume WellFormed($t4) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume $IsValid'u64'($t4);

    // assume forall $rsc: 0x1::features::Features: ResourceDomain<0x1::features::Features>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: 0x1::object::ObjectCore: ResourceDomain<0x1::object::ObjectCore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: 0x1::object::Untransferable: ResourceDomain<0x1::object::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Untransferable: ResourceDomain<0x1::fungible_asset::Untransferable>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentFungibleBalance: ResourceDomain<0x1::fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::ConcurrentSupply: ResourceDomain<0x1::fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::DispatchFunctionStore: ResourceDomain<0x1::fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<0x1::function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: 0x1::fungible_asset::FungibleStore: ResourceDomain<0x1::fungible_asset::FungibleStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Metadata: ResourceDomain<0x1::fungible_asset::Metadata>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: 0x1::fungible_asset::Supply: ResourceDomain<0x1::fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: 0x1::dispatchable_fungible_asset::TransferRefStore: ResourceDomain<0x1::dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: 0x1::primary_fungible_store::DeriveRefPod: ResourceDomain<0x1::primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: 0x1::coin::CoinConversionMap: ResourceDomain<0x1::coin::CoinConversionMap>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinConversionMap_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinConversionMap_$memory, $a_0);
    ($IsValid'$1_coin_CoinConversionMap'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedCoinType: ResourceDomain<0x1::coin::PairedCoinType>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedCoinType_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedCoinType_$memory, $a_0);
    ($IsValid'$1_coin_PairedCoinType'($rsc))));

    // assume forall $rsc: 0x1::coin::PairedFungibleAssetRefs: ResourceDomain<0x1::coin::PairedFungibleAssetRefs>(): And(WellFormed($rsc), And(And(Le(Len<0x1::fungible_asset::MintRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.mint_ref_opt($rsc))), 1), Le(Len<0x1::fungible_asset::TransferRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.transfer_ref_opt($rsc))), 1)), Le(Len<0x1::fungible_asset::BurnRef>(select option::Option.vec(select coin::PairedFungibleAssetRefs.burn_ref_opt($rsc))), 1))) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_PairedFungibleAssetRefs_$memory, $a_0);
    (($IsValid'$1_coin_PairedFungibleAssetRefs'($rsc) && (((LenVec($rsc->$mint_ref_opt->$vec) <= 1) && (LenVec($rsc->$transfer_ref_opt->$vec) <= 1)) && (LenVec($rsc->$burn_ref_opt->$vec) <= 1))))));

    // assume forall $rsc: 0x1::coin::CoinInfo<#0>: ResourceDomain<0x1::coin::CoinInfo<#0>>(): And(WellFormed($rsc), And(Le(Len<0x1::optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: 0x1::optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit<0x1::optional_aggregator::Integer>(option::$borrow<0x1::optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<0x1::aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<0x1::aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<0x1::optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'#0'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'#0''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: 0x1::coin::CoinStore<#0>: ResourceDomain<0x1::coin::CoinStore<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'#0'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'#0''($rsc))));

    // assume forall $rsc: 0x1::coin::Ghost$supply<#0>: ResourceDomain<0x1::coin::Ghost$supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume $ResourceExists($1_coin_Ghost$supply'#0'_$memory, 0);

    // assume forall $rsc: 0x1::coin::Ghost$aggregate_supply<#0>: ResourceDomain<0x1::coin::Ghost$aggregate_supply<#0>>(): WellFormed($rsc) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'#0'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'#0''($rsc))));

    // assume exists<0x1::coin::Ghost$aggregate_supply<#0>>(0x0) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'#0'_$memory, 0);

    // assume forall $rsc: 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>: ResourceDomain<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>(): And(WellFormed($rsc), forall $key: u64: select pivot_markets::MarketStore.markets($rsc): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($rsc), $key)))), 1)) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume (forall $a_0: int :: {$ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0)}(var $rsc := $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $a_0);
    (($IsValid'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''($rsc) && (var $range_1 := $rsc->$markets; (forall $key: int :: ContainsTable($range_1, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($rsc->$markets, $key)->$outcome->$vec) <= 1))))))));

    // trace_local[user]($t0) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume {:print "$track_local(101,10,0):", $t0} $t0 == $t0;

    // trace_local[market_id]($t1) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume {:print "$track_local(101,10,1):", $t1} $t1 == $t1;

    // trace_local[position_id]($t2) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume {:print "$track_local(101,10,2):", $t2} $t2 == $t2;

    // trace_local[shares_to_sell]($t3) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume {:print "$track_local(101,10,3):", $t3} $t3 == $t3;

    // trace_local[min_price]($t4) at pivot-tst/contract/sources/pivot_markets.move:240:1+1
    assume {:print "$track_local(101,10,4):", $t4} $t4 == $t4;

    // $t15 := 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2 at pivot-tst/contract/sources/pivot_markets.move:247:58+14
    assume {:print "$at(2,9531,9545)"} true;
    $t15 := 68939696987467295402575865559779311362434987859976193979889397278439830022306;
    assume $IsValid'address'($t15);

    // $t16 := borrow_global<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>($t15) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:247:17+56
    if (!$ResourceExists($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $Mutation($Global($t15), EmptyVec(), $ResourceValue($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $t15));
    }
    if ($abort_flag) {
        assume {:print "$at(2,9490,9546)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_local[store]($t16) at pivot-tst/contract/sources/pivot_markets.move:247:17+56
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' := $Dereference($t16);
    assume {:print "$track_local(101,10,5):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'';

    // $t18 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t16) at pivot-tst/contract/sources/pivot_markets.move:248:29+14
    assume {:print "$at(2,9576,9590)"} true;
    $t18 := $Dereference($t16)->$markets;

    // $t19 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t18, $t1) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:248:13+42
    call $t19 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t18, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,9560,9602)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // if ($t19) goto L1 else goto L0 at pivot-tst/contract/sources/pivot_markets.move:248:5+6
    if ($t19) { goto L1; } else { goto L0; }

    // label L1 at pivot-tst/contract/sources/pivot_markets.move:249:36+18
    assume {:print "$at(2,9678,9696)"} true;
L1:

    // $t20 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>>.markets($t16) at pivot-tst/contract/sources/pivot_markets.move:249:36+18
    assume {:print "$at(2,9678,9696)"} true;
    $t20 := $ChildMutation($t16, 1, $Dereference($t16)->$markets);

    // $t21 := table::borrow_mut<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>($t20, $t1) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:249:18+48
    call $t21,$t20 := $1_table_borrow_mut'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($t20, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,9660,9708)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_local[market]($t21) at pivot-tst/contract/sources/pivot_markets.move:249:18+48
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' := $Dereference($t21);
    assume {:print "$track_local(101,10,6):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0'';

    // $t22 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.resolved($t21) at pivot-tst/contract/sources/pivot_markets.move:251:14+15
    assume {:print "$at(2,9724,9739)"} true;
    $t22 := $Dereference($t21)->$resolved;

    // if ($t22) goto L24 else goto L3 at pivot-tst/contract/sources/pivot_markets.move:251:13+16
    if ($t22) { goto L24; } else { goto L3; }

    // label L3 at pivot-tst/contract/sources/pivot_markets.move:252:29+17
    assume {:print "$at(2,9811,9828)"} true;
L3:

    // $t23 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t21) at pivot-tst/contract/sources/pivot_markets.move:252:29+17
    assume {:print "$at(2,9811,9828)"} true;
    $t23 := $Dereference($t21)->$positions;

    // $t24 := table::contains<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t23, $t2) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:252:13+47
    call $t24 := $1_table_contains'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t23, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,9795,9842)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // if ($t24) goto L5 else goto L25 at pivot-tst/contract/sources/pivot_markets.move:252:5+6
    if ($t24) { goto L5; } else { goto L25; }

    // label L5 at pivot-tst/contract/sources/pivot_markets.move:257:46+17
    assume {:print "$at(2,10047,10064)"} true;
L5:

    // $t25 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t21) at pivot-tst/contract/sources/pivot_markets.move:257:46+17
    assume {:print "$at(2,10047,10064)"} true;
    $t25 := $Dereference($t21)->$positions;

    // $t26 := table::borrow<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t25, $t2) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:257:32+45
    call $t26 := $1_table_borrow'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t25, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,10033,10078)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // $t27 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.outcome($t26) at pivot-tst/contract/sources/pivot_markets.move:258:28+24
    assume {:print "$at(2,10107,10131)"} true;
    $t27 := $t26->$outcome;

    // trace_local[$t25]($t27) at pivot-tst/contract/sources/pivot_markets.move:258:28+24
    assume {:print "$track_local(101,10,7):", $t27} $t27 == $t27;

    // $t28 := read_ref($t21) at pivot-tst/contract/sources/pivot_markets.move:261:41+6
    assume {:print "$at(2,10185,10191)"} true;
    $t28 := $Dereference($t21);

    // $t29 := pivot_markets::calculate_price<#0>($t28, $t27) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:261:25+41
    call $t29 := $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_calculate_price'#0'($t28, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,10169,10210)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_local[current_price]($t29) at pivot-tst/contract/sources/pivot_markets.move:261:25+41
    assume {:print "$track_local(101,10,8):", $t29} $t29 == $t29;

    // $t30 := >=($t29, $t4) at pivot-tst/contract/sources/pivot_markets.move:262:13+26
    assume {:print "$at(2,10224,10250)"} true;
    call $t30 := $Ge($t29, $t4);

    // if ($t30) goto L7 else goto L26 at pivot-tst/contract/sources/pivot_markets.move:262:5+6
    if ($t30) { goto L7; } else { goto L26; }

    // label L7 at pivot-tst/contract/sources/pivot_markets.move:265:38+21
    assume {:print "$at(2,10389,10410)"} true;
L7:

    // $t31 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t21) at pivot-tst/contract/sources/pivot_markets.move:265:38+21
    assume {:print "$at(2,10389,10410)"} true;
    $t31 := $ChildMutation($t21, 6, $Dereference($t21)->$positions);

    // $t32 := table::borrow_mut<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t31, $t2) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:265:20+53
    call $t32,$t31 := $1_table_borrow_mut'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t31, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,10371,10424)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_local[position]($t32) at pivot-tst/contract/sources/pivot_markets.move:265:20+53
    $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position' := $Dereference($t32);
    assume {:print "$track_local(101,10,9):", $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'} $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position' == $temp_0'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position';

    // $t33 := signer::address_of($t0) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:266:21+24
    assume {:print "$at(2,10446,10470)"} true;
    call $t33 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,10446,10470)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_local[$t6]($t33) at pivot-tst/contract/sources/pivot_markets.move:266:21+24
    assume {:print "$track_local(101,10,10):", $t33} $t33 == $t33;

    // $t34 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.user($t32) at pivot-tst/contract/sources/pivot_markets.move:267:13+13
    assume {:print "$at(2,10484,10497)"} true;
    $t34 := $Dereference($t32)->$user;

    // $t35 := ==($t34, $t33) at pivot-tst/contract/sources/pivot_markets.move:267:13+26
    $t35 := $IsEqual'address'($t34, $t33);

    // if ($t35) goto L9 else goto L27 at pivot-tst/contract/sources/pivot_markets.move:267:5+6
    if ($t35) { goto L9; } else { goto L27; }

    // label L9 at pivot-tst/contract/sources/pivot_markets.move:268:13+15
    assume {:print "$at(2,10564,10579)"} true;
L9:

    // $t36 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.shares($t32) at pivot-tst/contract/sources/pivot_markets.move:268:13+15
    assume {:print "$at(2,10564,10579)"} true;
    $t36 := $Dereference($t32)->$shares;

    // $t37 := >=($t36, $t3) at pivot-tst/contract/sources/pivot_markets.move:268:13+33
    call $t37 := $Ge($t36, $t3);

    // if ($t37) goto L11 else goto L28 at pivot-tst/contract/sources/pivot_markets.move:268:5+6
    if ($t37) { goto L11; } else { goto L28; }

    // label L11 at pivot-tst/contract/sources/pivot_markets.move:270:26+14
    assume {:print "$at(2,10677,10691)"} true;
L11:

    // $t38 := *($t3, $t29) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:270:25+32
    assume {:print "$at(2,10676,10708)"} true;
    call $t38 := $MulU64($t3, $t29);
    if ($abort_flag) {
        assume {:print "$at(2,10676,10708)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // $t39 := 10000 at pivot-tst/contract/sources/pivot_markets.move:270:60+5
    $t39 := 10000;
    assume $IsValid'u64'($t39);

    // $t40 := /($t38, $t39) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:270:25+40
    call $t40 := $Div($t38, $t39);
    if ($abort_flag) {
        assume {:print "$at(2,10676,10716)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_local[$t30]($t40) at pivot-tst/contract/sources/pivot_markets.move:270:25+40
    assume {:print "$track_local(101,10,11):", $t40} $t40 == $t40;

    // $t41 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t21) at pivot-tst/contract/sources/pivot_markets.move:273:25+22
    assume {:print "$at(2,10795,10817)"} true;
    $t41 := $Dereference($t21)->$liquidity_pool;

    // $t42 := coin::value<#0>($t41) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:273:13+35
    call $t42 := $1_coin_value'#0'($t41);
    if ($abort_flag) {
        assume {:print "$at(2,10783,10818)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // $t43 := >=($t42, $t40) at pivot-tst/contract/sources/pivot_markets.move:273:13+52
    call $t43 := $Ge($t42, $t40);

    // if ($t43) goto L13 else goto L29 at pivot-tst/contract/sources/pivot_markets.move:273:5+6
    if ($t43) { goto L13; } else { goto L29; }

    // label L13 at pivot-tst/contract/sources/pivot_markets.move:276:23+15
    assume {:print "$at(2,10932,10947)"} true;
L13:

    // $t44 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.shares($t32) at pivot-tst/contract/sources/pivot_markets.move:276:23+15
    assume {:print "$at(2,10932,10947)"} true;
    $t44 := $Dereference($t32)->$shares;

    // $t45 := -($t44, $t3) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:276:23+32
    call $t45 := $Sub($t44, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,10932,10964)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // $t46 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.shares($t32) at pivot-tst/contract/sources/pivot_markets.move:276:5+15
    $t46 := $ChildMutation($t32, 2, $Dereference($t32)->$shares);

    // write_ref($t46, $t45) at pivot-tst/contract/sources/pivot_markets.move:276:5+50
    $t46 := $UpdateMutation($t46, $t45);

    // write_back[Reference($t32).shares (u64)]($t46) at pivot-tst/contract/sources/pivot_markets.move:276:5+50
    $t32 := $UpdateMutation($t32, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'_shares($Dereference($t32), $Dereference($t46)));

    // $t47 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.outcome($t32) at pivot-tst/contract/sources/pivot_markets.move:279:9+16
    assume {:print "$at(2,11002,11018)"} true;
    $t47 := $Dereference($t32)->$outcome;

    // $t48 := 1 at pivot-tst/contract/sources/pivot_markets.move:279:29+1
    $t48 := 1;
    assume $IsValid'u8'($t48);

    // $t49 := ==($t47, $t48) at pivot-tst/contract/sources/pivot_markets.move:279:9+21
    $t49 := $IsEqual'u8'($t47, $t48);

    // if ($t49) goto L15 else goto L14 at pivot-tst/contract/sources/pivot_markets.move:279:5+197
    if ($t49) { goto L15; } else { goto L14; }

    // label L15 at pivot-tst/contract/sources/pivot_markets.move:280:35+23
    assume {:print "$at(2,11061,11084)"} true;
L15:

    // $t50 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t21) at pivot-tst/contract/sources/pivot_markets.move:280:35+23
    assume {:print "$at(2,11061,11084)"} true;
    $t50 := $Dereference($t21)->$total_yes_shares;

    // $t51 := -($t50, $t3) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:280:35+40
    call $t51 := $Sub($t50, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,11061,11101)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // $t52 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_yes_shares($t21) at pivot-tst/contract/sources/pivot_markets.move:280:9+23
    $t52 := $ChildMutation($t21, 12, $Dereference($t21)->$total_yes_shares);

    // write_ref($t52, $t51) at pivot-tst/contract/sources/pivot_markets.move:280:9+66
    $t52 := $UpdateMutation($t52, $t51);

    // write_back[Reference($t21).total_yes_shares (u64)]($t52) at pivot-tst/contract/sources/pivot_markets.move:280:9+66
    $t21 := $UpdateMutation($t21, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_total_yes_shares($Dereference($t21), $Dereference($t52)));

    // label L21 at pivot-tst/contract/sources/pivot_markets.move:286:37+26
    assume {:print "$at(2,11270,11296)"} true;
L21:

    // $t53 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.liquidity_pool($t21) at pivot-tst/contract/sources/pivot_markets.move:286:37+26
    assume {:print "$at(2,11270,11296)"} true;
    $t53 := $ChildMutation($t21, 5, $Dereference($t21)->$liquidity_pool);

    // $t54 := coin::extract<#0>($t53, $t40) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:286:23+56
    call $t54,$t53 := $1_coin_extract'#0'($t53, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,11256,11312)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // write_back[Reference($t21).liquidity_pool (0x1::coin::Coin<#0>)]($t53) at pivot-tst/contract/sources/pivot_markets.move:286:23+56
    $t21 := $UpdateMutation($t21, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_liquidity_pool($Dereference($t21), $Dereference($t53)));

    // trace_local[payout_coin]($t54) at pivot-tst/contract/sources/pivot_markets.move:286:23+56
    assume {:print "$track_local(101,10,12):", $t54} $t54 == $t54;

    // assume Identical($t55, global<0x1::coin::CoinStore<#0>>($t33)) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/sources/coin.spec.move:323:9+59
    assume {:print "$at(131,14121,14180)"} true;
    assume ($t55 == $ResourceValue($1_coin_CoinStore'#0'_$memory, $t33));

    // coin::deposit<#0>($t33, $t54) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:287:5+37
    assume {:print "$at(2,11318,11355)"} true;
    call $1_coin_deposit'#0'($t33, $t54);
    if ($abort_flag) {
        assume {:print "$at(2,11318,11355)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // $t56 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>.shares($t32) at pivot-tst/contract/sources/pivot_markets.move:290:9+15
    assume {:print "$at(2,11407,11422)"} true;
    $t56 := $Dereference($t32)->$shares;

    // write_back[Reference($t31)[]]($t32) at pivot-tst/contract/sources/pivot_markets.move:290:9+15
    $t31 := $UpdateMutation($t31, UpdateTable($Dereference($t31), ReadVec($t32->p, LenVec($t31->p)), $Dereference($t32)));

    // write_back[Reference($t21).positions (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>)]($t31) at pivot-tst/contract/sources/pivot_markets.move:290:9+15
    $t21 := $UpdateMutation($t21, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_positions($Dereference($t21), $Dereference($t31)));

    // $t57 := 0 at pivot-tst/contract/sources/pivot_markets.move:290:28+1
    $t57 := 0;
    assume $IsValid'u64'($t57);

    // $t58 := ==($t56, $t57) at pivot-tst/contract/sources/pivot_markets.move:290:9+20
    $t58 := $IsEqual'u64'($t56, $t57);

    // if ($t58) goto L17 else goto L16 at pivot-tst/contract/sources/pivot_markets.move:290:5+348
    if ($t58) { goto L17; } else { goto L16; }

    // label L17 at pivot-tst/contract/sources/pivot_markets.move:291:23+21
    assume {:print "$at(2,11453,11474)"} true;
L17:

    // $t59 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.positions($t21) at pivot-tst/contract/sources/pivot_markets.move:291:23+21
    assume {:print "$at(2,11453,11474)"} true;
    $t59 := $ChildMutation($t21, 6, $Dereference($t21)->$positions);

    // $t60 := table::remove<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>($t59, $t2) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:291:9+49
    call $t60,$t59 := $1_table_remove'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Position'($t59, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,11439,11488)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // write_back[Reference($t21).positions (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Position>)]($t59) at pivot-tst/contract/sources/pivot_markets.move:291:9+49
    $t21 := $UpdateMutation($t21, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_positions($Dereference($t21), $Dereference($t59)));

    // drop($t60) at pivot-tst/contract/sources/pivot_markets.move:291:9+49

    // $t61 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.user_positions($t21) at pivot-tst/contract/sources/pivot_markets.move:292:51+26
    assume {:print "$at(2,11540,11566)"} true;
    $t61 := $ChildMutation($t21, 7, $Dereference($t21)->$user_positions);

    // $t62 := table::borrow_mut<address, vector<u64>>($t61, $t33) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:292:33+56
    call $t62,$t61 := $1_table_borrow_mut'address_vec'u64''($t61, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,11522,11578)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_local[user_position_ids]($t62) at pivot-tst/contract/sources/pivot_markets.move:292:33+56
    $temp_0'vec'u64'' := $Dereference($t62);
    assume {:print "$track_local(101,10,13):", $temp_0'vec'u64''} $temp_0'vec'u64'' == $temp_0'vec'u64'';

    // $t63 := read_ref($t62) at pivot-tst/contract/sources/pivot_markets.move:293:47+17
    assume {:print "$at(2,11626,11643)"} true;
    $t63 := $Dereference($t62);

    // ($t64, $t65) := vector::index_of<u64>($t63, $t2) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:293:30+49
    call $t64,$t65 := $1_vector_index_of'u64'($t63, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,11609,11658)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_local[$t49]($t65) at pivot-tst/contract/sources/pivot_markets.move:293:30+49
    assume {:print "$track_local(101,10,14):", $t65} $t65 == $t65;

    // if ($t64) goto L19 else goto L30 at pivot-tst/contract/sources/pivot_markets.move:294:9+76
    assume {:print "$at(2,11668,11744)"} true;
    if ($t64) { goto L19; } else { goto L30; }

    // label L19 at pivot-tst/contract/sources/pivot_markets.move:295:28+17
    assume {:print "$at(2,11708,11725)"} true;
L19:

    // $t66 := vector::remove<u64>($t62, $t65) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:295:13+40
    assume {:print "$at(2,11693,11733)"} true;
    call $t66,$t62 := $1_vector_remove'u64'($t62, $t65);
    if ($abort_flag) {
        assume {:print "$at(2,11693,11733)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // write_back[Reference($t61)[]]($t62) at pivot-tst/contract/sources/pivot_markets.move:295:13+40
    $t61 := $UpdateMutation($t61, UpdateTable($Dereference($t61), ReadVec($t62->p, LenVec($t61->p)), $Dereference($t62)));

    // write_back[Reference($t21).user_positions (0x1::table::Table<address, vector<u64>>)]($t61) at pivot-tst/contract/sources/pivot_markets.move:295:13+40
    $t21 := $UpdateMutation($t21, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_user_positions($Dereference($t21), $Dereference($t61)));

    // write_back[Reference($t20)[]]($t21) at pivot-tst/contract/sources/pivot_markets.move:295:13+40
    $t20 := $UpdateMutation($t20, UpdateTable($Dereference($t20), ReadVec($t21->p, LenVec($t20->p)), $Dereference($t21)));

    // write_back[Reference($t16).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t20) at pivot-tst/contract/sources/pivot_markets.move:295:13+40
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t16), $Dereference($t20)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t16) at pivot-tst/contract/sources/pivot_markets.move:295:13+40
    assume {:print "$at(2,11693,11733)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // drop($t66) at pivot-tst/contract/sources/pivot_markets.move:295:13+40

    // label L20 at pivot-tst/contract/sources/pivot_markets.move:246:24+2282
    assume {:print "$at(2,9472,11754)"} true;
L20:

    // goto L22 at pivot-tst/contract/sources/pivot_markets.move:246:24+2282
    assume {:print "$at(2,9472,11754)"} true;
    goto L22;

    // label L18 at pivot-tst/contract/sources/pivot_markets.move:294:9+76
    assume {:print "$at(2,11668,11744)"} true;
L18:

    // write_back[Reference($t20)[]]($t21) at pivot-tst/contract/sources/pivot_markets.move:294:9+76
    assume {:print "$at(2,11668,11744)"} true;
    $t20 := $UpdateMutation($t20, UpdateTable($Dereference($t20), ReadVec($t21->p, LenVec($t20->p)), $Dereference($t21)));

    // write_back[Reference($t16).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t20) at pivot-tst/contract/sources/pivot_markets.move:294:9+76
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t16), $Dereference($t20)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t16) at pivot-tst/contract/sources/pivot_markets.move:294:9+76
    assume {:print "$at(2,11668,11744)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // drop($t62) at pivot-tst/contract/sources/pivot_markets.move:294:9+76

    // goto L20 at pivot-tst/contract/sources/pivot_markets.move:294:9+76
    goto L20;

    // label L16 at pivot-tst/contract/sources/pivot_markets.move:290:5+348
    assume {:print "$at(2,11403,11751)"} true;
L16:

    // write_back[Reference($t20)[]]($t21) at pivot-tst/contract/sources/pivot_markets.move:290:5+348
    assume {:print "$at(2,11403,11751)"} true;
    $t20 := $UpdateMutation($t20, UpdateTable($Dereference($t20), ReadVec($t21->p, LenVec($t20->p)), $Dereference($t21)));

    // write_back[Reference($t16).markets (0x1::table::Table<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>)]($t20) at pivot-tst/contract/sources/pivot_markets.move:290:5+348
    $t16 := $UpdateMutation($t16, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0''_markets($Dereference($t16), $Dereference($t20)));

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // write_back[0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::MarketStore<#0>@]($t16) at pivot-tst/contract/sources/pivot_markets.move:290:5+348
    assume {:print "$at(2,11403,11751)"} true;
    $986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory := $ResourceUpdate($986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_MarketStore'#0'_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // drop($t21) at pivot-tst/contract/sources/pivot_markets.move:290:5+348

    // goto L20 at pivot-tst/contract/sources/pivot_markets.move:290:5+348
    goto L20;

    // label L14 at pivot-tst/contract/sources/pivot_markets.move:282:34+22
    assume {:print "$at(2,11149,11171)"} true;
L14:

    // $t67 := get_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t21) at pivot-tst/contract/sources/pivot_markets.move:282:34+22
    assume {:print "$at(2,11149,11171)"} true;
    $t67 := $Dereference($t21)->$total_no_shares;

    // $t68 := -($t67, $t3) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:282:34+39
    call $t68 := $Sub($t67, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,11149,11188)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // $t69 := borrow_field<0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>.total_no_shares($t21) at pivot-tst/contract/sources/pivot_markets.move:282:9+22
    $t69 := $ChildMutation($t21, 13, $Dereference($t21)->$total_no_shares);

    // write_ref($t69, $t68) at pivot-tst/contract/sources/pivot_markets.move:282:9+64
    $t69 := $UpdateMutation($t69, $t68);

    // write_back[Reference($t21).total_no_shares (u64)]($t69) at pivot-tst/contract/sources/pivot_markets.move:282:9+64
    $t21 := $UpdateMutation($t21, $Update'$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''_total_no_shares($Dereference($t21), $Dereference($t69)));

    // goto L21 at pivot-tst/contract/sources/pivot_markets.move:282:9+64
    goto L21;

    // label L12 at pivot-tst/contract/sources/pivot_markets.move:273:5+6
    assume {:print "$at(2,10775,10781)"} true;
L12:

    // drop($t21) at pivot-tst/contract/sources/pivot_markets.move:273:5+6
    assume {:print "$at(2,10775,10781)"} true;

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t32) at pivot-tst/contract/sources/pivot_markets.move:273:5+6
    assume {:print "$at(2,10775,10781)"} true;

    // $t70 := 11 at pivot-tst/contract/sources/pivot_markets.move:273:88+24
    $t70 := 11;
    assume $IsValid'u64'($t70);

    // $t71 := error::invalid_state($t70) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:273:67+46
    call $t71 := $1_error_invalid_state($t70);
    if ($abort_flag) {
        assume {:print "$at(2,10837,10883)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_abort($t71) at pivot-tst/contract/sources/pivot_markets.move:273:5+6
    assume {:print "$at(2,10775,10781)"} true;
    assume {:print "$track_abort(101,10):", $t71} $t71 == $t71;

    // $t17 := move($t71) at pivot-tst/contract/sources/pivot_markets.move:273:5+6
    $t17 := $t71;

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:273:5+6
    goto L23;

    // label L10 at pivot-tst/contract/sources/pivot_markets.move:268:5+6
    assume {:print "$at(2,10556,10562)"} true;
L10:

    // drop($t21) at pivot-tst/contract/sources/pivot_markets.move:268:5+6
    assume {:print "$at(2,10556,10562)"} true;

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t32) at pivot-tst/contract/sources/pivot_markets.move:268:5+6
    assume {:print "$at(2,10556,10562)"} true;

    // $t72 := 11 at pivot-tst/contract/sources/pivot_markets.move:268:72+24
    $t72 := 11;
    assume $IsValid'u64'($t72);

    // $t73 := error::invalid_argument($t72) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:268:48+49
    call $t73 := $1_error_invalid_argument($t72);
    if ($abort_flag) {
        assume {:print "$at(2,10599,10648)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_abort($t73) at pivot-tst/contract/sources/pivot_markets.move:268:5+6
    assume {:print "$at(2,10556,10562)"} true;
    assume {:print "$track_abort(101,10):", $t73} $t73 == $t73;

    // $t17 := move($t73) at pivot-tst/contract/sources/pivot_markets.move:268:5+6
    $t17 := $t73;

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:268:5+6
    goto L23;

    // label L8 at pivot-tst/contract/sources/pivot_markets.move:267:5+6
    assume {:print "$at(2,10476,10482)"} true;
L8:

    // drop($t21) at pivot-tst/contract/sources/pivot_markets.move:267:5+6
    assume {:print "$at(2,10476,10482)"} true;

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t32) at pivot-tst/contract/sources/pivot_markets.move:267:5+6
    assume {:print "$at(2,10476,10482)"} true;

    // $t74 := 0 at pivot-tst/contract/sources/pivot_markets.move:267:66+11
    $t74 := 0;
    assume $IsValid'u64'($t74);

    // $t75 := error::permission_denied($t74) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:267:41+37
    call $t75 := $1_error_permission_denied($t74);
    if ($abort_flag) {
        assume {:print "$at(2,10512,10549)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_abort($t75) at pivot-tst/contract/sources/pivot_markets.move:267:5+6
    assume {:print "$at(2,10476,10482)"} true;
    assume {:print "$track_abort(101,10):", $t75} $t75 == $t75;

    // $t17 := move($t75) at pivot-tst/contract/sources/pivot_markets.move:267:5+6
    $t17 := $t75;

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:267:5+6
    goto L23;

    // label L6 at pivot-tst/contract/sources/pivot_markets.move:262:5+6
    assume {:print "$at(2,10216,10222)"} true;
L6:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t21) at pivot-tst/contract/sources/pivot_markets.move:262:5+6
    assume {:print "$at(2,10216,10222)"} true;

    // $t76 := 12 at pivot-tst/contract/sources/pivot_markets.move:262:65+15
    $t76 := 12;
    assume $IsValid'u64'($t76);

    // $t77 := error::invalid_argument($t76) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:262:41+40
    call $t77 := $1_error_invalid_argument($t76);
    if ($abort_flag) {
        assume {:print "$at(2,10252,10292)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_abort($t77) at pivot-tst/contract/sources/pivot_markets.move:262:5+6
    assume {:print "$at(2,10216,10222)"} true;
    assume {:print "$track_abort(101,10):", $t77} $t77 == $t77;

    // $t17 := move($t77) at pivot-tst/contract/sources/pivot_markets.move:262:5+6
    $t17 := $t77;

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:262:5+6
    goto L23;

    // label L4 at pivot-tst/contract/sources/pivot_markets.move:252:5+6
    assume {:print "$at(2,9787,9793)"} true;
L4:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t21) at pivot-tst/contract/sources/pivot_markets.move:252:5+6
    assume {:print "$at(2,9787,9793)"} true;

    // $t78 := 10 at pivot-tst/contract/sources/pivot_markets.move:252:79+20
    $t78 := 10;
    assume $IsValid'u64'($t78);

    // $t79 := error::not_found($t78) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:252:62+38
    call $t79 := $1_error_not_found($t78);
    if ($abort_flag) {
        assume {:print "$at(2,9844,9882)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_abort($t79) at pivot-tst/contract/sources/pivot_markets.move:252:5+6
    assume {:print "$at(2,9787,9793)"} true;
    assume {:print "$track_abort(101,10):", $t79} $t79 == $t79;

    // $t17 := move($t79) at pivot-tst/contract/sources/pivot_markets.move:252:5+6
    $t17 := $t79;

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:252:5+6
    goto L23;

    // label L2 at pivot-tst/contract/sources/pivot_markets.move:251:5+6
    assume {:print "$at(2,9715,9721)"} true;
L2:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t21) at pivot-tst/contract/sources/pivot_markets.move:251:5+6
    assume {:print "$at(2,9715,9721)"} true;

    // $t80 := 3 at pivot-tst/contract/sources/pivot_markets.move:251:52+17
    $t80 := 3;
    assume $IsValid'u64'($t80);

    // $t81 := error::invalid_state($t80) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:251:31+39
    call $t81 := $1_error_invalid_state($t80);
    if ($abort_flag) {
        assume {:print "$at(2,9741,9780)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_abort($t81) at pivot-tst/contract/sources/pivot_markets.move:251:5+6
    assume {:print "$at(2,9715,9721)"} true;
    assume {:print "$track_abort(101,10):", $t81} $t81 == $t81;

    // $t17 := move($t81) at pivot-tst/contract/sources/pivot_markets.move:251:5+6
    $t17 := $t81;

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:251:5+6
    goto L23;

    // label L0 at pivot-tst/contract/sources/pivot_markets.move:248:5+6
    assume {:print "$at(2,9552,9558)"} true;
L0:

    // assert forall $key: u64: select pivot_markets::MarketStore.markets($t16): Le(Len<u8>(select option::Option.vec(select pivot_markets::Market.outcome(table::spec_get<u64, 0x986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2::pivot_markets::Market<#0>>(select pivot_markets::MarketStore.markets($t16), $key)))), 1) at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/a0000/.move/https___github_com_aptos-labs_aptos-framework_git_mainnet/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(14,530,554)"} true;
    assert {:msg "assert_failed(14,530,554): data invariant does not hold"}
      (var $range_0 := $Dereference($t16)->$markets; (forall $key: int :: ContainsTable($range_0, $EncodeKey'u64'($key)) ==> ((LenVec($1_table_spec_get'u64_$986a7c58eca5fe84a7fdf73b02953bc3faab2c9778f82aeab7eefa43242168a2_pivot_markets_Market'#0''($Dereference($t16)->$markets, $key)->$outcome->$vec) <= 1))));

    // drop($t16) at pivot-tst/contract/sources/pivot_markets.move:248:5+6
    assume {:print "$at(2,9552,9558)"} true;

    // $t82 := 8 at pivot-tst/contract/sources/pivot_markets.move:248:74+18
    $t82 := 8;
    assume $IsValid'u64'($t82);

    // $t83 := error::not_found($t82) on_abort goto L23 with $t17 at pivot-tst/contract/sources/pivot_markets.move:248:57+36
    call $t83 := $1_error_not_found($t82);
    if ($abort_flag) {
        assume {:print "$at(2,9604,9640)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(101,10):", $t17} $t17 == $t17;
        goto L23;
    }

    // trace_abort($t83) at pivot-tst/contract/sources/pivot_markets.move:248:5+6
    assume {:print "$at(2,9552,9558)"} true;
    assume {:print "$track_abort(101,10):", $t83} $t83 == $t83;

    // $t17 := move($t83) at pivot-tst/contract/sources/pivot_markets.move:248:5+6
    $t17 := $t83;

    // goto L23 at pivot-tst/contract/sources/pivot_markets.move:248:5+6
    goto L23;

    // label L22 at pivot-tst/contract/sources/pivot_markets.move:298:1+1
    assume {:print "$at(2,11753,11754)"} true;
L22:

    // return () at pivot-tst/contract/sources/pivot_markets.move:298:1+1
    assume {:print "$at(2,11753,11754)"} true;
    return;

    // label L23 at pivot-tst/contract/sources/pivot_markets.move:298:1+1
L23:

    // abort($t17) at pivot-tst/contract/sources/pivot_markets.move:298:1+1
    assume {:print "$at(2,11753,11754)"} true;
    $abort_code := $t17;
    $abort_flag := true;
    return;

    // label L24 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L24:

    // drop($t20) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L2 at <internal>:1:1+10
    goto L2;

    // label L25 at <internal>:1:1+10
L25:

    // drop($t20) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L4 at <internal>:1:1+10
    goto L4;

    // label L26 at <internal>:1:1+10
L26:

    // drop($t20) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L6 at <internal>:1:1+10
    goto L6;

    // label L27 at <internal>:1:1+10
L27:

    // drop($t20) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t31) at <internal>:1:1+10

    // goto L8 at <internal>:1:1+10
    goto L8;

    // label L28 at <internal>:1:1+10
L28:

    // drop($t20) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t31) at <internal>:1:1+10

    // goto L10 at <internal>:1:1+10
    goto L10;

    // label L29 at <internal>:1:1+10
L29:

    // drop($t20) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t31) at <internal>:1:1+10

    // goto L12 at <internal>:1:1+10
    goto L12;

    // label L30 at <internal>:1:1+10
L30:

    // drop($t61) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L18 at <internal>:1:1+10
    goto L18;

}
